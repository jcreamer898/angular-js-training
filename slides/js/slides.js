var slides = [
	"<div class=\"slide slide-1 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>AngularJS Foundations</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">1</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-2 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Introduction to AngularJS</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">2</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-3 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>AngularJS</h1>\n\n\n\n<div class=\"slide-content\">\n\t<div class=\"slide-columns columns-2\">\n\n<div class=\"column column-1\">\n<!-- slide-content -->\n\n<ul>\n<li>Originally developed in 2009 as software needed for a JSON Storage service company</li>\n<li>Venture was abandoned</li>\n<li>Angular was open sourced</li>\n<li>Miško Hevery now works at Google </li>\n<li>Google continues to maintain the  project with fellow Google employees  Igor Minár and Vojta Jína</li>\n</ul>\n\n</div>\n\n<div class=\"column column-2\">\n<div style=\"margin-top: -70px;\"><img src=\"images/angularjs-logo-trans_1408328568284_9a4e3873ecddcc1a0e3741eff6179598f2559c0f.png\" alt=\"\" /></div>\n\n<!-- /slide-content -->\n</div>\n\n</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">3</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-4 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>What is AngularJS?</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">4</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-5 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>A client-side framework for adding interactivity to HTML</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">5</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-6 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>MVC</h1><br />\n\t\n\t\n\t<h2>Model-View-Controller</h2><br />\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">6</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-7 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>What is MVC?</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>A software architechural pattern used for implementing user interfaces</li>\n<li>provides separation of concerns for data and presentation and logic<ul>\n<li><code>Model</code> - Directly manages the application’s data, logic and rules</li>\n<li><code>View</code> - any output representation of information</li>\n<li><code>Controller</code> - accepts input and converts it to commands for the model or view</li>\n</ul>\n</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">7</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-8 master-full\">\n<div class=\"slide-wrapper \">\n\t\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p><img src=\"images/500px-MVC-Process_1408375677781_53e0d777ce95b6321fba4a8f4183776c5b9a1e31.png\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">8</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-9 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>What is AngularJS used for?</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p>Are you using JavaScript to create dynamic websites?</p>\n<p>Angular will help you:</p>\n<ul>\n<li>organize your JavaScript</li>\n<li>create performant websites</li>\n<li>work with existing libraries like jQuery</li>\n<li>write testable code</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">9</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-10 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>“performant”?</h1>\n\n\n<h2>Traditional Websites</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Each page and all of it’s assests are requested</li>\n<li>This causes round trips to the server for every asset</li>\n<li>Redundant calls are made</li>\n<li>Excessive use of bandwidth</li>\n<li>Slower page load</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">10</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-11 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>“performant”?</h1>\n\n\n<h2>AngularJS Websites</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Usually created as a Single Page Application (SPA)</li>\n<li>Assets are loaded once</li>\n<li>Round trips to the server only request the parts of the application that have changed</li>\n<li>Smaller trips to the server</li>\n<li>No full page refresh</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">11</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-12 master-full\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Competitors</h1>\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p><img src=\"images/angular-competitors_1408409801365_592c609c9471b7cca16d46ddd4349dac8918fd36.png\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">12</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-13 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Comparison</h1>\n\n\n<h2>Key features</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<table width=\"100%\"><tr><th></th><th>Angular</th><th>Backbone</th><th>Ember</th><th>Knockout</th></tr><tr><th align=\"left\">No Dependencies</th><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td><td></td><td></td><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td></tr><tr><th align=\"left\">Data binding</th><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td><td valign=\"middle\" align=\"center\"></td><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td></tr><tr><th align=\"left\">Routing</th><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td><td></td></tr><tr><th align=\"left\">Views</th><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td><td valign=\"middle\" align=\"center\"><img src=\"images/check-mark-md_1408410420779_90c2120c5e78bc9e7dc36946fb8ae96eeffb26b8.png\" width=\"30\" /></td></tr></table>\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">13</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-14 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>AngularJS known to have a Steep Learning Curve</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">14</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-15 master-full\">\n<div class=\"slide-wrapper \">\n\t\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p><img src=\"images/steep-learning-curve_1408411634931_d467383ec709dab28a19455bb2a7d01dd0f995c9.png\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">15</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-16 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>AngularJS</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>jQuery is very simple to learn<ul>\n<li>$, selector, action</li>\n</ul>\n</li>\n<li>Angular is vast. <ul>\n<li>OO, Controllers, Routers, Dependency Injection, Directives, Promises, Ajax, 2 way binding</li>\n</ul>\n</li>\n</ul>\n<p><code>Today's goal is to come out with a basic understanding of AngularJS</code></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">16</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-17 master-full\">\n<div class=\"slide-wrapper \">\n\t\n<h1>MVC Framework Trends</h1>\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;script</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text/javascript\"</span> <span class=\"cm-attribute\">src</span>=<span class=\"cm-string\">\"//www.google.com/trends/embed.js?hl=en-US&amp;q=angularjs,+backbone.js,+knockout.js,+ember.js&amp;date=1/2010+56m&amp;cmpt=q&amp;content=1&amp;cid=TIMESERIES_GRAPH_0&amp;export=5&amp;w=1000&amp;h=600\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/script</span><span class=\"cm-tag\">&gt;</span></pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">17</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-18 master-full\">\n<div class=\"slide-wrapper \">\n\t\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p><img src=\"images/fluent-conf-tweet_1408408602847_bbe10052dc89abe5ad79f8153c2c32d1b5b31d3d.jpg\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">18</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-19 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1> Look at a sample Angular App</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">19</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-20 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Sample App</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><a href=\"https://github.com/appendto/training-labs-angularjs-fundamentals\" target=\"_blank\">https://github.com/appendto/training-labs-angularjs-fundamentals</a></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">20</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-21 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Expressions &amp; Directives</h1><br />\n\t\n\t\n\t<h2>The V</h2><br />\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">21</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-22 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Getting Started</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Download angular.js from <a href=\"https://code.angularjs.org/\" target=\"_blank\">https://code.angularjs.org/</a></li>\n<li>Install with bower <code>bower install angular</code></li>\n<li><a href=\"http://plnkr.co\" target=\"_blank\">plnkr.co</a> is an in-browser playground build with AngularJS</li>\n<li><a href=\"https://github.com/angular/angular-seed\" target=\"_blank\">angular-seed</a> is a project that jumpstarts a AngularJS project good place to get started, just clone it and use it</li>\n<li><a href=\"http://yeoman.io\" target=\"_blank\">Yeoman</a> is gaining popularity because there’s an angular generator</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-builtin\">npm</span> install <span class=\"cm-attribute\">-g</span> yo\n<span class=\"cm-builtin\">npm</span> install generator-angular\nyo angular</pre>\n<ul>\n<li>Our sample app used angular-seed</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">22</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-23 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Documentation</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><a href=\"https://docs.angularjs.org\" target=\"_blank\">https://docs.angularjs.org</a></li>\n<li><a href=\"https://github.com/angular/angular.js/wiki\" target=\"_blank\">https://github.com/angular/angular.js/wiki</a></li>\n<li>SOURCE DIVE <a href=\"https://github.com/angular/angular.js\" target=\"_blank\">https://github.com/angular/angular.js</a></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">23</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-24 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>The <code>ng-app</code> Directive</h1>\n\n\n<h2>First step to any angular app</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>ng-app</code> can be placed on any element<ul>\n<li>Usually it’s placed on the <code>&lt;html&gt;</code> or <code>&lt;body&gt;</code> elements</li>\n<li>Can be placed on a <code>&lt;div&gt;</code></li>\n</ul>\n</li>\n<li>Tells Angular to run <code>angular.bootstrap</code> within that element</li>\n<li>Tells Angular where to start processing HTML</li>\n<li>Usually just one <code>ng-app</code> per page</li>\n<li>It then processes all the child elements and runs them through the Angular “compiler”.</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">24</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-25 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>simple example</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"cm-tag\">&lt;html</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-comment\">&lt;!-- head tag with script tags, etc. --&gt;</span>\n<span class=\"cm-tag\">&lt;body</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-comment\">&lt;!-- Page content --&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/html</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>ng-app</code> is on the <code>&lt;html&gt;</code> tag</li>\n</ul>\n<p><strong>Troubleshooting Tip</strong></p>\n<ul>\n<li><code>ng-app</code> is very common to forget, so if Angular isn’t running, make sure you have declared your <code>ng-app</code> directive</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">25</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-26 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Expressions</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Uses “handlebars” syntax</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\">{{<span class=\"cm-number\">2</span> + <span class=\"cm-number\">2</span>}}</pre>\n<ul>\n<li>Can evaluate any JavaScript expression</li>\n<li>Runs againast a “scope” instead of the window (more later)</li>\n<li>No errors are thrown</li>\n<li>The Angular compiler uses a parser to look through the HTML and evaluate expressions</li>\n<li>Does all this with the <code>$parse</code> service</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">26</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-27 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Expressions</h1>\n\n\n<h2>Not Allowed</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-comment\">//conditionals</span>\n{{ <span class=\"cm-keyword\">if</span> (<span class=\"cm-atom\">true</span>) { <span class=\"cm-variable\">x</span>=<span class=\"cm-variable\">y</span>; } }}\n\n<span class=\"cm-comment\">//loops</span>\n{{ <span class=\"cm-keyword\">for</span> (<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">i</span>=<span class=\"cm-number\">0</span>; <span class=\"cm-variable\">i</span> &lt;= <span class=\"cm-number\">5</span>; <span class=\"cm-variable\">i</span>++) { <span class=\"cm-variable\">x</span> = <span class=\"cm-variable\">x</span>+<span class=\"cm-variable\">i</span>; } }}\n\n<span class=\"cm-comment\">// exceptions</span>\n{{ <span class=\"cm-keyword\">try</span> { <span class=\"cm-variable\">x</span> / <span class=\"cm-number\">0</span> } <span class=\"cm-keyword\">catch</span> (<span class=\"cm-def\">ex</span>) { <span class=\"cm-keyword\">throw</span>; } }}</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">27</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-28 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Expressions example</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"cm-tag\">&lt;html</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-comment\">&lt;!-- script tags etc --&gt;</span>\n<span class=\"cm-tag\">&lt;body</span><span class=\"cm-tag\">&gt;</span>\n    2 + 2 = {{2 + 2}}\n\n    {{no.errors.here}}\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/html</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Starting at <code>ng-app</code>, Angular parses the HTML</li>\n<li>Looks for <code>ng-*</code> and <code>{{ }}</code>‘s in the HTML</li>\n</ul>\n<p><strong>Tip</strong><br />We can also use <code>data-ng-*</code> if we want “valid” HTML</p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">28</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-29 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1> <code>$parse</code></h1>\n\n\n<h2>How it works</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">getter</span> = <span class=\"cm-variable\">$parse</span>(<span class=\"cm-string\">\"2 + 2\"</span>)\n<span class=\"cm-variable\">getter</span>() <span class=\"cm-comment\">// 4</span></pre>\n<ul>\n<li>Converts an expression to a function</li>\n<li>When you have an expression like 2 + 2 on the page, angular uses something called the <code>$parser</code> </li>\n<li>The converted function runs against a “context” called Scope</li>\n<li>This parser returns a function you can call to execute the expression</li>\n<li>Angular links this expression to a scope later</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">29</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-30 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1> <code>$parse</code></h1>\n\n\n<h2>How it works</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">$parse</span> = <span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">element</span>(<span class=\"cm-variable\">document</span>.<span class=\"cm-property\">body</span>).<span class=\"cm-property\">injector</span>().<span class=\"cm-property\">get</span>(<span class=\"cm-string\">\"$parse\"</span>);\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">getter</span> = <span class=\"cm-variable\">$parse</span>(<span class=\"cm-string\">\"user.name\"</span>)\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">result</span> = <span class=\"cm-variable\">getter</span>({ <span class=\"cm-comment\">/* context */</span> }, \n    <span class=\"cm-comment\">/* locals */</span>\n    {\n    <span class=\"cm-property\">user</span>: {\n        <span class=\"cm-property\">name</span>: <span class=\"cm-string\">\"Hello World\"</span>\n    }\n});</pre>\n<ul>\n<li>Context is usually a scope</li>\n<li>Locals overwrite what’s in the scope</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">30</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-31 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>scope</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">31</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-32 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Every expression runs against a context known as a “scope”</li>\n<li>The scope in Angular is an object where the application’s model is stored</li>\n<li>Scope isn’t the model, but rather a place to hold the model</li>\n<li>Important to remember that scope is basically just an object to hold data</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">32</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-33 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$rootscope</code></h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"cm-tag\">&lt;html</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;body</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;h1</span><span class=\"cm-tag\">&gt;</span>Hello World<span class=\"cm-tag\">&lt;/h1</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/html</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>ng-app</code>, will create instance of <code>Scope</code> called the “Root Scope”</li>\n<li>You can retrieve the “Root Scope” with the <code>$rootScope</code>service which we’ll discuss later</li>\n<li>You can see here that there’s a <code>$rootScope</code> now attached to the <html> element</html></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">33</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-34 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope properties</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>angular.element</code> is jQLite with bonus features</li>\n<li>Use <code>angular.element(document.documentElement).scope()</code> to get the scope on the <code>&lt;html&gt;</code> element</li>\n<li>The scope of the element with <code>ng-app</code> case  will be the <code>$rootScope</code></li>\n</ul>\n<p><img src=\"http://d.pr/i/SWtX+\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">34</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-35 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>ng-init</code></h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"cm-tag\">&lt;html</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-comment\">&lt;!-- script tags etc --&gt;</span>\n<span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-init</span>=<span class=\"cm-string\">\"user.name = 'Steve Rogers'\"</span><span class=\"cm-tag\">&gt;</span>\n    First Avenger: {{user.name}}\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/html</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>ng-init</code> allows you to run an expression against the current scope</li>\n<li>It will automatically create model data on the scope</li>\n<li>This all happens behind the scenes for you!</li>\n<li>Not something you’ll use a lot, but good to have</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">35</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-36 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>2 way binding</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Update the view when the model changes</li>\n<li>Update the model when the view changes</li>\n<li>Pure JavaScript or jQuery take an imperative approach with boilerplate code</li>\n<li>Imperative coding involves describing how code works, mosly in JavaSCript</li>\n<li>Angular is declarative with little to no JavaScript to achieve 2 way binding</li>\n<li>Delcarative means there’s more code describing behavior in the HTML and less actual JavaScript </li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">36</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-37 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>2 way binding</h1>\n\n\n<h2>The pure JS way: imperative</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">id</span>=<span class=\"cm-string\">\"name\"</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-tag\">/&gt;</span>\nYour name: <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">id</span>=<span class=\"cm-string\">\"result\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">document</span>.<span class=\"cm-property\">addEventListener</span>(<span class=\"cm-string\">'DOMContentLoaded'</span>, <span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">name</span> = <span class=\"cm-variable\">document</span>.<span class=\"cm-property\">getElementById</span>(<span class=\"cm-string\">'name'</span>),\n        <span class=\"cm-def\">result</span> = <span class=\"cm-variable\">document</span>.<span class=\"cm-property\">getElementById</span>(<span class=\"cm-string\">'result'</span>);\n\n    <span class=\"cm-variable-2\">name</span>.<span class=\"cm-property\">addEventListener</span>(<span class=\"cm-string\">'keyup'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-variable\">result</span>.<span class=\"cm-property\">textContent</span> = <span class=\"cm-variable\">name</span>.<span class=\"cm-property\">value</span>;\n    });\n});</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">37</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-38 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>2 way binding</h1>\n\n\n<h2>The jQuery way: imperative</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">id</span>=<span class=\"cm-string\">\"name\"</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-tag\">/&gt;</span>\nYour name: <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">id</span>=<span class=\"cm-string\">\"result\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">$</span>(<span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">$name</span> = <span class=\"cm-variable\">$</span>(<span class=\"cm-string\">\"#name\"</span>),\n        <span class=\"cm-def\">$result</span> = <span class=\"cm-variable\">$</span>(<span class=\"cm-string\">\"#result\"</span>);\n\n    <span class=\"cm-variable-2\">$name</span>.<span class=\"cm-property\">on</span>(<span class=\"cm-string\">\"keyup\"</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-variable\">$result</span>.<span class=\"cm-property\">text</span>(<span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">value</span>);\n    });\n});</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">38</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-39 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>2 way binding</h1>\n\n\n<h2>The Angular way: Declarative</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"cm-tag\">&lt;html</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-comment\">&lt;!-- script tags etc --&gt;</span>\n<span class=\"cm-tag\">&lt;body</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.name\"</span> <span class=\"cm-tag\">/&gt;</span>\n    Your Name: {{user.name}}\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/html</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">39</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-40 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>2 way binding</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"cm-tag\">&lt;html</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-comment\">&lt;!-- script tags etc --&gt;</span>\n<span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-init</span>=<span class=\"cm-string\">\"user.name = 'jonathan'\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.name\"</span> <span class=\"cm-tag\">/&gt;</span>\n    Your Name: {{user.name}}\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/html</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>You can see with <code>ng-init</code> that this is happening both ways</li>\n<li>Model -&gt; View</li>\n<li>View -&gt; Model</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">40</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-41 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-model</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Binds an element’s value to the scope</li>\n<li>Works on <code>input</code>, <code>select</code>, and <code>textarea</code> elements by using event handlers for you </li>\n<li>Will also create values on scope if they don’t exist already</li>\n<li>Supports validation which we’ll cover later</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">41</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-42 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Contact Form</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;form</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.name\"</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Name\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.email\"</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Email\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;select</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.emailType\"</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;option</span><span class=\"cm-tag\">&gt;</span>Work<span class=\"cm-tag\">&lt;/option</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;option</span><span class=\"cm-tag\">&gt;</span>Home<span class=\"cm-tag\">&lt;/option</span><span class=\"cm-tag\">&gt;</span>    \n        <span class=\"cm-tag\">&lt;/select</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;textarea</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.comment\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/textarea</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span>\n\n    <span class=\"cm-tag\">&lt;div</span><span class=\"cm-tag\">&gt;</span>Name: {{user.name}}<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span><span class=\"cm-tag\">&gt;</span>Email: {{user.email}}<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span><span class=\"cm-tag\">&gt;</span>Type: {{user.emailType}}<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span><span class=\"cm-tag\">&gt;</span>Comment: {{user.comment}}<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">42</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-43 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>How is this possible??</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n<p><img src=\"images/magic+meme_be6df6905e54e913bba752be672bea6489013556.gif\" style=\"margin: 0 auto;\" /></p>\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">43</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-44 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Directives</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">44</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-45 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>angular.module</code></h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Before we jump into directives, let’s explore <code>angular.module</code></li>\n<li><code>angular.module</code> is a way to break up your application into components</li>\n<li>Multiple components helps with maintainability</li>\n<li>Typically there will be a main “app” module<ul>\n<li>Additional modules can be loaded in </li>\n</ul>\n</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">45</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-46 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>angular.module</code></h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>To create a module, pass an array as the second argument</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, []);</pre>\n<ul>\n<li>To retrieve a module, simple call it</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">app</span> = <span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>);</pre>\n<ul>\n<li>The <code>[]</code> is only used when first creating the module, not when adding objects to the module later</li>\n<li>The <code>[]</code> is for adding depende3ncies</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">46</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-47 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>angular.module</code></h1>\n\n\n<h2>Why the array?</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>The array is where you ask for additional modules</li>\n<li>Angular has several “first party” modules</li>\n<li>You can also load your own custom modules</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, []);</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">47</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-48 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>angular.module</code></h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">app</span> = <span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>);</pre>\n<ul>\n<li><code>angular.module('name')</code> returns an object that you can use to setup your module</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">48</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-49 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>angular.module</code></h1>\n\n\n<h2>Loading an app module</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, []);</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"cm-tag\">&lt;html</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;body</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/html</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">49</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-50 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>angular.module</code></h1>\n\n\n<h2>Dependencies</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [\n    <span class=\"cm-string\">'ngRoute'</span>, <span class=\"cm-comment\">// 1st party angular</span>\n    <span class=\"cm-string\">'my.custom'</span> <span class=\"cm-comment\">// Custom module</span>\n]);</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"cm-tag\">&lt;html</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;body</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/html</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>ngRoute</code> is an angular routing plugin </li>\n<li><code>introToAngularApp.controllers</code> would be a custom module you define</li>\n<li>By separating things into modules we’ve made the code less coupled</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">50</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-51 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>What’s a directive?</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<blockquote>\n<p>“Directives are markers on a DOM element that tell AngularJS’s compiler ($compile) to attach a specific behavior to that DOM element, or even transform the DOM element and its children”</p>\n</blockquote>\n<ul>\n<li>We’ve already seen the <code>ng-app</code>, <code>ng-init</code>, and <code>ng-model</code> directives</li>\n<li>Can be classes, attributes, or elements</li>\n<li>There’s many built in directives</li>\n<li>You can also create your own custom directives</li>\n<li>They can have their own scopes</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">51</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-52 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$compile</code></h1>\n\n\n<h2>How it works</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>As previously stated, after Angular bootstraps a module with <code>ng-app</code>, or <code>angular.bootstrap</code>, the compiler runs</li>\n<li>The compiler traverses the DOM and gathers up all the directives</li>\n<li>The directives get sorted by priority</li>\n<li>Each directive runs a <code>compile</code> function</li>\n<li>Each directive gets linked to a scope with a <code>link</code> function</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">52</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-53 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>how it works Example</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">$compile</span> = ...; <span class=\"cm-comment\">// injected into your code</span>\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">scope</span> = ...;\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">parent</span> = ...; <span class=\"cm-comment\">// DOM element where the compiled template can be appended</span>\n\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">html</span> = <span class=\"cm-string\">'&lt;div&gt;{{exp}}&lt;/div&gt;'</span>;\n\n<span class=\"cm-comment\">// Step 1: parse HTML into DOM element</span>\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">template</span> = <span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">element</span>(<span class=\"cm-variable\">html</span>);\n\n<span class=\"cm-comment\">// Step 2: compile the template</span>\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">linkFn</span> = <span class=\"cm-variable\">$compile</span>(<span class=\"cm-variable\">template</span>);\n\n<span class=\"cm-comment\">// Step 3: link the compiled template with the scope.</span>\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">element</span> = <span class=\"cm-variable\">linkFn</span>(<span class=\"cm-variable\">scope</span>);\n\n<span class=\"cm-comment\">// Step 4: Append to DOM (optional)</span>\n<span class=\"cm-variable\">parent</span>.<span class=\"cm-property\">appendChild</span>(<span class=\"cm-variable\">element</span>);</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">53</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-54 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope life cycle</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n<ul>\n<li>In a normal JavaScript application, after the code is done running, the browser just has to wait for events</li>\n<li>After compiling, Angular does things differently to acheive the 2 way binding possible with directives and scope</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">54</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-55 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope life cycle</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>The linking process attaches scope to an element</li>\n<li>Angular has a loop that is constantly watching for changes on scope</li>\n<li>There is an “Angular execution context”</li>\n<li>In order to stay inside the “Angular execution context” model changes have to execute inside of the <strong>Scope Life Cycle</strong></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">55</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-56 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope life cycle </h1>\n\n\n<h2>Step 1</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Creation<ul>\n<li>Root scope created, then all child scopes are created</li>\n</ul>\n</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">56</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-57 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope life cycle </h1>\n\n\n<h2>Step 2</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Watcher Registration<ul>\n<li>Templates are linked, directives add “watches” to the  “model” on the scope </li>\n<li>A watch is a function that will eventually trigger when the model changes</li>\n</ul>\n</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">57</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-58 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope life cycle</h1>\n\n\n<h2>Step 3</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Model Mutation<ul>\n<li>The model changes inside of <code>$scope.$apply</code> which happens automatically most of the time</li>\n<li>If you do something outside of Angular’s main workflow like with an external library, you have to manually call <code>$scope.$apply()</code> to let Angular know</li>\n<li>Example here is typing into an input box </li>\n</ul>\n</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">58</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-59 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope life cycle </h1>\n\n\n<h2>Step 4</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Mutation Observation<ul>\n<li>After <code>scope.$apply</code>, there is a <code>$digest</code> cycle that compares model values</li>\n<li>If the value on the model has changed, the <code>$watch</code> listeners are fired</li>\n</ul>\n</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">59</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-60 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope life cycle </h1>\n\n\n<h2>Step 5</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Scope destruction<ul>\n<li>Rinse and repeat</li>\n</ul>\n</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">60</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-61 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope life cycle TL:DR;</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>All that stuff happens when the text in this input box changes…</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"cm-tag\">&lt;html</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-comment\">&lt;!-- script tags etc --&gt;</span>\n<span class=\"cm-tag\">&lt;body</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.name\"</span> <span class=\"cm-tag\">/&gt;</span>\n    Your Name: {{user.name}}\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/html</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">61</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-62 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>How is this possible??</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n<p><img src=\"images/magic+meme_be6df6905e54e913bba752be672bea6489013556.gif\" style=\"margin: 0 auto;\" /></p>\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">62</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-63 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Lab 1</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n<ul>\n<li><a href=\"https://github.com/jcreamer898/angularjs-training\" target=\"_blank\">https://github.com/jcreamer898/angularjs-training</a></li>\n<li><a href=\"http://jcreamer898.github.io/angularjs-training/labs/completed/lab1/lab1.done.html\" target=\"_blank\">http://jcreamer898.github.io/angularjs-training/labs/completed/lab1/lab1.done.html</a></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">63</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-64 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>BREAK</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n<iframe data-blazon-role=\"demo\" style=\"width: 100%; height: auto;\" frameborder=\"0\"></iframe>\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">64</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-65 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Controllers</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">65</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-66 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>The mediator between the view and the model</li>\n<li>Meant to be thin</li>\n<li>Little logic and state</li>\n<li>Sets up variables and functions for the view to bind to</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">66</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-67 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-keyword\">function</span> (<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">title</span> = <span class=\"cm-string\">'Home'</span>;\n    });</pre>\n\n<ul>\n<li>Use the <code>angular.module</code> to retrieve or create a module</li>\n<li>The function is a factory function</li>\n<li>Controllers can get instantiated multiple times in an application</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">67</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-68 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>You can also create controllers without the anonymous function like this…</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\">(<span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-keyword\">function</span> <span class=\"cm-def\">MainCtrl</span> (<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">title</span> = <span class=\"cm-string\">'Home'</span>;\n    }\n\n    <span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n        .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-variable-2\">MainCtrl</span>);\n}());</pre>\n<ul>\n<li>Usually better that way, but we’ll mostly use anonymous fn’s for brevity </li>\n<li>The IIFE here is a good practice to not expose <code>MainCtrl</code> to the <code>window</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">68</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-69 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>ng-controller</code></h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>It’s another directive…</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"MainCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>There’s now a <code>$rootScope</code>, and a child scope for the controller on the page</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">69</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-70 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$scope</code> in Controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-keyword\">function</span> (<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">title</span> = <span class=\"cm-string\">'Home'</span>;\n    });</pre>\n\n<ul>\n<li>Controllers get their own child scope in the life cycle</li>\n<li>The scope prototypically inherits from <code>$rootScope</code></li>\n<li>A “DOM like” tree of scopes gets created</li>\n<li>The <code>$scope</code> gets automatically “injected” (more later)</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">70</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-71 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$scope</code> in Controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])</span>\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-keyword\">function</span> (<span class=\"cm-def\">$scope</span>) {\n        <span class=\"dim-line\"><span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">title</span> = <span class=\"cm-string\">'Home'</span>;</span>\n    <span class=\"dim-line\">});</span></pre>\n\n<ul>\n<li>The <code>$scope</code> gets automatically “injected” (more later)</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">71</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-72 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$scope</code> in Controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])</span>\n    <span class=\"dim-line\">.<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-keyword\">function</span> (<span class=\"cm-def\">$scope</span>) {</span>\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">title</span> = <span class=\"cm-string\">'Home'</span>;\n    <span class=\"dim-line\">});</span></pre>\n\n<ul>\n<li>In the Scope Life Cycle, angular will set up a watch for <code>title</code></li>\n<li>Any time it changes in the controller, it changes in the view, and visa versa</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">72</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-73 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$scope</code> in Controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"MainCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        {{title}}\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>$scope</code> in a controller is like a “View Model”</li>\n<li>Whatever you put on the <code>$scope</code> is available in the view</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">73</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-74 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$scope</code> in Controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span><span class=\"cm-tag\">&gt;</span> --$rootScope\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"MainCtrl\"</span><span class=\"cm-tag\">&gt;</span> --Child Scope \n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Root scope is on the body</li>\n<li>Child scope for the controller is on the div</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">74</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-75 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$scope</code> in Controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'ContactCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">user</span> = {\n            <span class=\"cm-property\">name</span>: <span class=\"cm-string\">\"\"</span>,\n            <span class=\"cm-property\">email</span>: <span class=\"cm-string\">\"\"</span>,\n            <span class=\"cm-property\">comment</span>: <span class=\"cm-string\">\"\"</span>\n        };\n\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">send</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">name</span>, <span class=\"cm-def\">email</span>, <span class=\"cm-def\">comment</span>) {\n            <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">\"mail sent to: \"</span> + <span class=\"cm-variable-2\">name</span> + <span class=\"cm-string\">\" at \"</span> + <span class=\"cm-variable-2\">email</span>);\n        };\n    });</pre>\n\n<ul>\n<li>Functions on the <code>$scope</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">75</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-76 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$scope</code> in Controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"ContactCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.name\"</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Name\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.email\"</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Email\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;textarea</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.comment\"</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Name\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/textarea</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;button</span> <span class=\"cm-attribute\">ng-click</span>=<span class=\"cm-string\">\"send(user.name, user.email, user.comment)\"</span><span class=\"cm-tag\">&gt;</span>Send<span class=\"cm-tag\">&lt;/button</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Example</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">76</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-77 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$scope</code> in Controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"ContactCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.name\"</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Name\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.email\"</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Email\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;textarea</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.comment\"</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Name\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/textarea</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;button</span> <span class=\"cm-attribute\">ng-click</span>=<span class=\"cm-string\">\"send()\"</span><span class=\"cm-tag\">&gt;</span>Send<span class=\"cm-tag\">&lt;/button</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Or like this, same thing, just… different</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">77</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-78 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dependency Injection</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Dependency injection (DI) is a design pattern that changes how an object gets its dependencies</li>\n<li>Rather than an object having explicit dependencies, they are usually passed in automatically with DI</li>\n<li>Makes things easier to test</li>\n<li>Decouples </li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">78</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-79 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>DI example</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Rather than…</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">MainCtrl</span>() {\n    <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">scope</span> = <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Scope</span>();\n}</pre>\n<ul>\n<li>You have…</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">MainCtrl</span>(<span class=\"cm-def\">scope</span>) {\n    <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">scope</span> = <span class=\"cm-variable-2\">scope</span>;\n}</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">79</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-80 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dependency Injection</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>The dependency is passed in automatically</li>\n<li>Whatever creates an instance of that function ensures its dependencies are properly created</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">80</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-81 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Dependency Injection in angular</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>There are 3 ways to do Dependency Injection in Angular</li>\n<li>Automatic</li>\n<li>Array notation</li>\n<li><code>$inject</code> service</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">81</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-82 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Automatic Dependency Injection</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">title</span> = <span class=\"cm-string\">\"Home\"</span>;\n    });</pre>\n<ul>\n<li>You’ve seen this with <code>$scope</code> already</li>\n<li>When angular creates an instance of this controller, it parses out the arguments of the function and injects the necessary dependencies</li>\n<li>MOAR MAGIC (Function.toString() FTW)</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">82</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-83 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Array notation</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, [<span class=\"cm-string\">'$scope'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">title</span> = <span class=\"cm-string\">\"Home\"</span>;\n    }]);</pre>\n<ul>\n<li>Problem with this is minification, so you can use array notation to fix it</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">83</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-84 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Array notation</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">MainCtrl</span>(<span class=\"cm-def\">$scope</span>) {\n    <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">title</span> = <span class=\"cm-string\">'Home'</span>;\n}\n\n<span class=\"cm-variable\">MainCtrl</span>.<span class=\"cm-property\">$inject</span> = [<span class=\"cm-string\">'$scope'</span>];\n\n<span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-variable\">MainCtrl</span>);</pre>\n<ul>\n<li>Both of those methods are basically just parsing the names of the dependencies and adding them to the <code>$inject</code> list on the function</li>\n<li>Angular does that automatically</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">84</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-85 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope tree</h1>\n\n\n<h2>Prototypical Inheritance</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-keyword\">function</span> (<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-comment\">// $scope.title = 'Home';</span>\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span> <span class=\"cm-attribute\">ng-init</span>=<span class=\"cm-string\">\"title = 'in the root'\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"MainCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        {{title}}\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>The controller scope inherits properties from the <code>$rootscope</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">85</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-86 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope tree</h1>\n\n\n<h2>Prototypical Inheritance Ramifications</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-keyword\">function</span> (<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">title</span> = <span class=\"cm-string\">'Home'</span>;\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span> <span class=\"cm-attribute\">ng-init</span>=<span class=\"cm-string\">\"title = 'in the root'\"</span><span class=\"cm-tag\">&gt;</span>\n    {{title}}\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"MainCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        {{title}}\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>What happens if the child has a title?</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">86</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-87 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scope tree</h1>\n\n\n<h2>Prototypical Inheritance Ramifications</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-keyword\">function</span> (<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">page</span>.<span class=\"cm-property\">title</span> = <span class=\"cm-string\">'Home'</span>;\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span> <span class=\"cm-attribute\">ng-init</span>=<span class=\"cm-string\">\"page.title = 'in the root'\"</span><span class=\"cm-tag\">&gt;</span>\n    {{page.title}}\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"MainCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        {{page.title}}\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>This <em>could</em> be what you want, but generally, TRY to have a “.” in your model</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">87</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-88 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Prototypical inheritance</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">Root</span>() {} \n<span class=\"cm-variable\">Root</span>.<span class=\"cm-property\">prototype</span>.<span class=\"cm-property\">name</span> = <span class=\"cm-string\">\"root\"</span>;\n\n<span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">Child</span>() {}\n<span class=\"cm-variable\">Child</span>.<span class=\"cm-property\">prototype</span> = <span class=\"cm-variable\">Object</span>.<span class=\"cm-property\">create</span>(<span class=\"cm-variable\">Root</span>);\n<span class=\"cm-variable\">Child</span>.<span class=\"cm-property\">prototype</span>.<span class=\"cm-property\">constructor</span> = <span class=\"cm-variable\">Child</span>;</pre>\n<ul>\n<li>This is your typical inheritance scenario</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">88</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-89 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Prototypical inheritance</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">Root</span>() {} \n<span class=\"cm-variable\">Root</span>.<span class=\"cm-property\">prototype</span>.<span class=\"cm-property\">name</span> = <span class=\"cm-string\">\"root\"</span>;\n\n<span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">Child</span>() {}\n<span class=\"cm-variable\">Child</span>.<span class=\"cm-property\">prototype</span> = <span class=\"cm-variable\">Object</span>.<span class=\"cm-property\">create</span>(<span class=\"cm-variable\">Root</span>);\n<span class=\"cm-variable\">Child</span>.<span class=\"cm-property\">prototype</span>.<span class=\"cm-property\">constructor</span> = <span class=\"cm-variable\">Child</span>;\n\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">child</span> = <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Child</span>();\n<span class=\"cm-variable\">child</span>.<span class=\"cm-property\">name</span>; <span class=\"cm-comment\">// \"root\"</span></pre>\n<ul>\n<li>Will look UP the prototype chain to find <code>name</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">89</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-90 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Prototypical inheritance</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">Root</span>() {} \n<span class=\"cm-variable\">Root</span>.<span class=\"cm-property\">prototype</span>.<span class=\"cm-property\">name</span> = <span class=\"cm-string\">\"root\"</span>;\n\n<span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">Child</span>() {}\n<span class=\"cm-variable\">Child</span>.<span class=\"cm-property\">prototype</span> = <span class=\"cm-variable\">Object</span>.<span class=\"cm-property\">create</span>(<span class=\"cm-variable\">Root</span>.<span class=\"cm-property\">prototype</span>);\n<span class=\"cm-variable\">Child</span>.<span class=\"cm-property\">prototype</span>.<span class=\"cm-property\">constructor</span> = <span class=\"cm-variable\">Child</span>;\n\n<span class=\"cm-variable\">Child</span>.<span class=\"cm-property\">prototype</span>.<span class=\"cm-property\">name</span> = <span class=\"cm-string\">\"child\"</span>;\n\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">root</span> = <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Root</span>();\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">child</span> = <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Child</span>();\n<span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable\">root</span>.<span class=\"cm-property\">name</span>, <span class=\"cm-variable\">child</span>.<span class=\"cm-property\">name</span>); <span class=\"cm-comment\">// \"child\"</span></pre>\n<ul>\n<li>Overwrites <code>name</code> here</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">90</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-91 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Prototypical inheritance</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">Scope</span>() {}\n<span class=\"cm-comment\">// ...</span>\n<span class=\"cm-variable\">$new</span>: <span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-keyword\">if</span> (!<span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">$$childScopeClass</span>) {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">$$childScopeClass</span> = <span class=\"cm-keyword\">function</span>() {\n            <span class=\"cm-comment\">// blah blah...</span>\n        };\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">$$childScopeClass</span>.<span class=\"cm-property\">prototype</span> = <span class=\"cm-keyword\">this</span>;\n    }\n    <span class=\"cm-variable\">child</span> = <span class=\"cm-keyword\">new</span> <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">$$childScopeClass</span>();\n    <span class=\"cm-comment\">// ...</span>\n    <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">child</span>;\n}</pre>\n<ul>\n<li>Angular’s scope is merely a constructor function called <code>Scope</code></li>\n<li>Every child scope, prototypically  inherits from it</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">91</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-92 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Controlleras</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>$scope</code> works just fine, but gets messy</li>\n<li>They added <code>controllerAs</code> syntax to clean it up</li>\n<li>Helps with nesting controllers too</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">92</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-93 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ControllerAs</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'ContactCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">user</span> = {\n            <span class=\"cm-property\">name</span>: <span class=\"cm-string\">\"\"</span>,\n            <span class=\"cm-property\">email</span>: <span class=\"cm-string\">\"\"</span>,\n            <span class=\"cm-property\">comment</span>: <span class=\"cm-string\">\"\"</span>\n        };\n\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">send</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">name</span>, <span class=\"cm-def\">email</span>, <span class=\"cm-def\">comment</span>) {\n            <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">\"mail sent to: \"</span> + <span class=\"cm-variable-2\">name</span> + <span class=\"cm-string\">\" at \"</span> + <span class=\"cm-variable-2\">email</span>);\n        };\n    });</pre>\n\n<ul>\n<li>You can add to <code>this</code> rather than <code>$scope</code></li>\n<li>Angular automatically adds it to <code>$scope</code> for you</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">93</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-94 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ControllerAs</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'ContactCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">self</span> = <span class=\"cm-keyword\">this</span>;\n\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">user</span> = {\n            <span class=\"cm-property\">name</span>: <span class=\"cm-string\">\"\"</span>,\n            <span class=\"cm-property\">email</span>: <span class=\"cm-string\">\"\"</span>,\n            <span class=\"cm-property\">comment</span>: <span class=\"cm-string\">\"\"</span>\n        };\n\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">send</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">name</span>, <span class=\"cm-def\">email</span>, <span class=\"cm-def\">comment</span>) {\n            <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable\">self</span>.<span class=\"cm-property\">user</span>);\n        };\n    });</pre>\n<ul>\n<li>Watch out for “this” problems</li>\n<li>Not an Angular issue, just a JavaScript thing</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">94</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-95 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>controlleras in the view</h1>\n\n\n<h2>Example</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"ContactCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"vm.user.name\"</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Name\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"vm.user.email\"</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Email\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;textarea</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"vm.user.comment\"</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Name\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/textarea</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;button</span> <span class=\"cm-attribute\">ng-click</span>=<span class=\"cm-string\">\"send(vm.user.name, vm.user.email, vm.user.comment)\"</span><span class=\"cm-tag\">&gt;</span>Send<span class=\"cm-tag\">&lt;/button</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">95</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-96 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Nested controllers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"FirstCtrl as first\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"SecondCtrl as second\"</span><span class=\"cm-tag\">&gt;</span>\n            {{first.user.name}}\n            {{second.profile.age}}            \n        <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'FirstCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">user</span> = { <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'jonathan'</span> };\n    })\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'SecondCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">profile</span> = { <span class=\"cm-property\">age</span>: <span class=\"cm-number\">26</span> };\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">96</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-97 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Nested controllers</h1>\n\n\n<h2>Without controllerAs</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"FirstCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"SecondCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n            {{user.name}}\n            {{profile.age}}            \n        <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'FirstCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">user</span> = { <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'jonathan'</span> };\n    })\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'SecondCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">profile</span> = { <span class=\"cm-property\">age</span>: <span class=\"cm-number\">26</span> };\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">97</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-98 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Built-in directives</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">98</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-99 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Built-in directives</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>There are many built-in directives</li>\n<li>Many for the different DOM events </li>\n<li><code>ng-click</code>, <code>ng-submit</code>, <code>ng-mouse-over</code>, etc…</li>\n<li>Control page like <code>ng-css</code>, <code>ng-show</code></li>\n<li>There’s a few directives that just add behaviors to existing elements</li>\n<li><code>a</code>, <code>input</code>, <code>form</code>, <code>script</code>, <code>select</code>, and <code>textarea</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">99</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-100 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Events</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>With jQuery you have to explicitly add code to listen for events</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">$</span>(<span class=\"cm-string\">\"#button\"</span>).<span class=\"cm-property\">on</span>(<span class=\"cm-string\">\"click\"</span>, <span class=\"cm-keyword\">function</span>() {});</pre>\n<ul>\n<li>Angular simplifies that which makes testing easier</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">100</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-101 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Events</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>The usual event type suspects…</li>\n<li><code>ng-blur</code>, <code>ng-change</code>, <code>ng-checked</code>, <code>ng-click</code>, <code>ng-copy</code>, <code>ng-cut</code>, <code>ng-dblclick</code>, <code>ng-focus</code>, <code>ng-keydown</code>, <code>ng-keypress</code>, <code>ng-keyup</code>, <code>ng-mousedown</code>, <code>ng-mouseenter</code>, <code>ng-mouseleave</code>, <code>ng-mousemove</code>, <code>ng-mouseover</code>, <code>ng-mouseup</code>, <code>ng-open</code>, <code>ng-paste</code>, <code>ng-submit</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">101</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-102 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Events</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"EventsDemo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"EventsCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"vm.user.name\"</span>\n            <span class=\"cm-attribute\">ng-blur</span>=<span class=\"cm-string\">\"vm.blur()\"</span>\n            <span class=\"cm-attribute\">ng-focus</span>=<span class=\"cm-string\">\"vm.focus()\"</span>\n            <span class=\"cm-attribute\">ng-change</span>=<span class=\"cm-string\">\"vm.change()\"</span><span class=\"cm-tag\">/&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'EventsDemo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'EventsCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">blur</span> = <span class=\"cm-keyword\">function</span>() { <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">'blur'</span>); };\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">change</span> = <span class=\"cm-keyword\">function</span>() { <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">'change'</span>); };\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">focus</span> = <span class=\"cm-keyword\">function</span>() { <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">'focus'</span>); };        \n    });</pre>\n<ul>\n<li><code>ng-change</code> requires an <code>ng-model</code> to be set</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">102</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-103 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-css</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"DirectivesDemo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"DirectivesCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-class</span>=<span class=\"cm-string\">\"{ selected: vm.isSelected() }\"</span><span class=\"cm-tag\">&gt;</span>ohhai<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'DirectivesDemo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'DirectivesCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">isSelected</span> = <span class=\"cm-keyword\">function</span>() {\n            <span class=\"cm-keyword\">return</span> <span class=\"cm-atom\">true</span>;\n        };\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-qualifier\">.selected</span> { <span class=\"cm-property\">outline</span><span class=\"cm-operator\">:</span> <span class=\"cm-number\">1px</span> <span class=\"cm-string-2\">solid</span> <span class=\"cm-keyword\">red</span>; }</pre>\n<ul>\n<li><code>ng-css</code> allows you to evaluate an expression and apply a css class if it’s true</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">103</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-104 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-if</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"DirectivesDemo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"DirectivesCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-if</span>=<span class=\"cm-string\">\"vm.user.name === 'jonathan'\"</span><span class=\"cm-tag\">&gt;</span>shows<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-if</span>=<span class=\"cm-string\">\"vm.user.name != 'jonathan'\"</span><span class=\"cm-tag\">&gt;</span>no show<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'DirectivesDemo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'DirectivesCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">user</span> = { <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'jonathan'</span> };\n    });</pre>\n<ul>\n<li><code>ng-if</code> removes element from the DOM if false</li>\n<li>Creates a new scope</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">104</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-105 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-if</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    Click me: <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"checkbox\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"checked\"</span> <span class=\"cm-attribute\">ng-init</span>=<span class=\"cm-string\">\"checked=true\"</span> <span class=\"cm-tag\">/&gt;</span><span class=\"cm-tag\">&lt;br</span><span class=\"cm-tag\">/&gt;</span>\n    Show when checked:\n    <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-if</span>=<span class=\"cm-string\">\"checked\"</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"animate-if\"</span><span class=\"cm-tag\">&gt;</span>\n      I'm removed when the checkbox is unchecked.\n    <span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>ng-init</code> creates <code>checked</code> on the root scope</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">105</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-106 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-show</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    Click me: <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"checkbox\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"checked\"</span> <span class=\"cm-attribute\">ng-init</span>=<span class=\"cm-string\">\"checked=true\"</span> <span class=\"cm-tag\">/&gt;</span><span class=\"cm-tag\">&lt;br</span><span class=\"cm-tag\">/&gt;</span>\n    Show when checked:\n    <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"checked\"</span><span class=\"cm-tag\">&gt;</span>\n      I'm removed when the checkbox is unchecked.\n    <span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>ng-show</code> merely shows the element if the expression is true</li>\n<li>Doesn’t remove it from the DOM like <code>ng-if</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">106</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-107 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-hide</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    Click me: <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"checkbox\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"checked\"</span> <span class=\"cm-attribute\">ng-init</span>=<span class=\"cm-string\">\"checked=true\"</span> <span class=\"cm-tag\">/&gt;</span><span class=\"cm-tag\">&lt;br</span><span class=\"cm-tag\">/&gt;</span>\n    Show when unchecked:\n    <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-hide</span>=<span class=\"cm-string\">\"checked\"</span><span class=\"cm-tag\">&gt;</span>\n      I'm removed when the checkbox is unchecked.\n    <span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>ng-hide</code> merely hides the element if the expression is true</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">107</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-108 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-disabled/enabled</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;button</span> <span class=\"cm-attribute\">ng-disabled</span>=<span class=\"cm-string\">\"!vm.user.email\"</span><span class=\"cm-tag\">&gt;</span>Send<span class=\"cm-tag\">&lt;/button</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;button</span> <span class=\"cm-attribute\">ng-enabled</span>=<span class=\"cm-string\">\"vm.user.email\"</span><span class=\"cm-tag\">&gt;</span>Clear<span class=\"cm-tag\">&lt;/button</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Toggle the <code>disabled</code> attribute on an element</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">108</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-109 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-switch</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"ExampleController\"</span><span class=\"cm-tag\">&gt;</span>\n  <span class=\"cm-tag\">&lt;select</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"selection\"</span> <span class=\"cm-attribute\">ng-options</span>=<span class=\"cm-string\">\"item for item in items\"</span><span class=\"cm-tag\">&gt;</span>\n  <span class=\"cm-tag\">&lt;/select</span><span class=\"cm-tag\">&gt;</span>\n  <span class=\"cm-tag\">&lt;tt</span><span class=\"cm-tag\">&gt;</span>selection={{selection}}<span class=\"cm-tag\">&lt;/tt</span><span class=\"cm-tag\">&gt;</span>\n  <span class=\"cm-tag\">&lt;hr</span><span class=\"cm-tag\">/&gt;</span>\n  <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"animate-switch-container\"</span>\n    <span class=\"cm-attribute\">ng-switch</span> <span class=\"cm-attribute\">on</span>=<span class=\"cm-string\">\"selection\"</span><span class=\"cm-tag\">&gt;</span>\n      <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"animate-switch\"</span> <span class=\"cm-attribute\">ng-switch-when</span>=<span class=\"cm-string\">\"settings\"</span><span class=\"cm-tag\">&gt;</span>Settings Div<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n      <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"animate-switch\"</span> <span class=\"cm-attribute\">ng-switch-when</span>=<span class=\"cm-string\">\"home\"</span><span class=\"cm-tag\">&gt;</span>Home Span<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n      <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"animate-switch\"</span> <span class=\"cm-attribute\">ng-switch-default</span><span class=\"cm-tag\">&gt;</span>default<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n  <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Works like a <code>switch</code> in JavaScript</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">109</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-110 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-checked</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    Click me: <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"checkbox\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"checked\"</span> <span class=\"cm-attribute\">ng-init</span>=<span class=\"cm-string\">\"checked=true\"</span> <span class=\"cm-tag\">/&gt;</span><span class=\"cm-tag\">&lt;br</span><span class=\"cm-tag\">/&gt;</span>\n    Toggles this: <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"checkbox\"</span> <span class=\"cm-attribute\">ng-checked</span>=<span class=\"cm-string\">\"checked\"</span> <span class=\"cm-tag\">/&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Can set a checkbox to checked</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">110</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-111 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-bind</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n\n<ul>\n<li>While angular is downloading you might see a “page flash” revealing all the bindings</li>\n<li>Useful to stop the “page flash” when using {{}}</li>\n<li>Binds to a single property on the scope</li>\n</ul>\n<p>Rather than..</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;h1</span><span class=\"cm-tag\">&gt;</span>{{user.name}}<span class=\"cm-tag\">&lt;/h1</span><span class=\"cm-tag\">&gt;</span></pre>\n<p>You can do…</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;h1</span> <span class=\"cm-attribute\">ng-bind</span>=<span class=\"cm-string\">\"user.name\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/h1</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">111</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-112 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-bind-template</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;h1</span> <span class=\"cm-attribute\">ng-bind-template</span>=<span class=\"cm-string\">\"Hello {{user.name}}\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/h1</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;title</span> <span class=\"cm-attribute\">ng-bind-template</span>=<span class=\"cm-string\">\"{{site.title}} {{page.title}}\"</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>If you need to do some interpolation, use <code>ng-bind-template</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">112</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-113 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-bind-html</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"Demo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"DemoCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-bind-html</span>=<span class=\"cm-string\">\"vm.html\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'Demo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'DemoCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$sce</span>) {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">html</span> = <span class=\"cm-variable-2\">$sce</span>.<span class=\"cm-property\">trustAsHtml</span>(<span class=\"cm-string\">'&lt;code&gt;angular&lt;/code&gt;'</span>)\n    });</pre>\n<ul>\n<li>If you need to render HTML <code>ng-bind-html</code></li>\n<li>Use the <code>$sce</code> service to allow angular to use the HTML (Strict Contextual Escaping)</li>\n<li>There is also an <code>ngSanitize</code> module that you can import to avoid this</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">113</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-114 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-cloack</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>If you really like the {{}} and don’t want to use <code>ng-bind</code> you can use <code>ng-cloack</code></li>\n<li>After angular finishes loading, <code>ng-cloack</code> gets removed</li>\n<li>You control the <code>ng-cloack</code> css</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\">[<span class=\"cm-tag\">ng\\</span><span class=\"cm-operator\">:</span><span class=\"cm-tag\">cloak</span>], [<span class=\"cm-tag\">ng-cloak</span>], [<span class=\"cm-tag\">data-ng-cloak</span>], [<span class=\"cm-tag\">x-ng-cloak</span>], <span class=\"cm-qualifier\">.ng-cloak</span>, <span class=\"cm-qualifier\">.x-ng-cloak</span> {\n  <span class=\"cm-property\">display</span><span class=\"cm-operator\">:</span> <span class=\"cm-string-2\">none</span> <span class=\"cm-keyword\">!important</span>;\n}</pre>\n<ul>\n<li>Now you can hide un-rendered content until angular loads</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-cloack</span><span class=\"cm-tag\">&gt;</span>\n    {{user.name}}\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">114</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-115 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-href and ng-src</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">ng-href</span>=<span class=\"cm-string\">\"/menu/{{item.id}}\"</span><span class=\"cm-tag\">&gt;</span>Details<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;img</span> <span class=\"cm-attribute\">ng-src</span>=<span class=\"cm-string\">\"/images/menu-{{item.id}}.jpg\"</span> <span class=\"cm-tag\">/&gt;</span></pre>\n<ul>\n<li>When building links or images, these 2 help prevent {{}} from entering your string</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">115</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-116 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-repeat</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Used for rendering lists</li>\n<li>Has a special syntax</li>\n<li>Each iteration gets a scope prototypically inherited from the parent</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">116</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-117 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-repeat</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;ul</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"MenuCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;li</span> <span class=\"cm-attribute\">ng-repeat</span>=<span class=\"cm-string\">\"item in vm.list\"</span><span class=\"cm-tag\">&gt;</span>\n            {{item}}\n        <span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/ul</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MenuCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">list</span> = [<span class=\"cm-string\">'pizza'</span>, <span class=\"cm-string\">'stromboli'</span>, <span class=\"cm-string\">'lasagna'</span>];\n    });</pre>\n<ul>\n<li>Syntax is <code>item</code> in <code>list</code></li>\n<li>There are a few other tracking things in the syntax if you need them</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">117</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-118 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-repeat properties</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>$index</code>  <strong>number</strong>  iterator offset of the repeated element (0..length-1)</li>\n<li><code>$first</code>  <strong>boolean</strong> true if the repeated element is first in the iterator.</li>\n<li><code>$middle</code> <strong>boolean</strong> true if the repeated element is between the first and last in the iterator.</li>\n<li><code>$last</code>   <strong>boolean</strong> true if the repeated element is last in the iterator.</li>\n<li><code>$even</code>   <strong>boolean</strong> true if the iterator position $index is even (otherwise false).</li>\n<li><code>$odd</code>    <strong>boolean</strong> true if the iterator position $index is odd (otherwise false).</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">118</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-119 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-repeat</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;ul</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"MenuCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;li</span> <span class=\"cm-attribute\">ng-repeat</span>=<span class=\"cm-string\">\"item in vm.list\"</span><span class=\"cm-tag\">&gt;</span>\n            {{$index}}: {{item}}\n        <span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/ul</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MenuCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">list</span> = [<span class=\"cm-string\">'pizza'</span>, <span class=\"cm-string\">'stromboli'</span>, <span class=\"cm-string\">'lasagna'</span>];\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">119</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-120 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-include</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-include</span>=<span class=\"cm-string\">\"'/some/page.html'\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Can include an HTML page in the same domain</li>\n<li>Partial name needs single quotes around it</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">120</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-121 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>a</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Automatically prevents default when there’s no <code>href</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">121</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-122 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>form</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Prevents default submission unless there’s a <code>action</code> attribute defined</li>\n<li>Also has built in validation (more later)</li>\n<li>Can listen for the <code>ng-click</code> on the submit button, or <code>ng-submit</code> on the form</li>\n<li>Create’s an instance of <code>FormController</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">122</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-123 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>form</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"FormDemo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;form</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"FormCtrl as vm\"</span> <span class=\"cm-attribute\">ng-submit</span>=<span class=\"cm-string\">\"vm.send(vm.user.name)\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"vm.user.name\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"submit\"</span> <span class=\"cm-attribute\">value</span>=<span class=\"cm-string\">\"Send\"</span> <span class=\"cm-tag\">/&gt;</span>\n    <span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'FormDemo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'FormCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">send</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">name</span>) {\n            <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">'sending to: '</span> + <span class=\"cm-variable-2\">name</span>);\n        };\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">123</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-124 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Select and ng-options</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Use the <code>ng-options</code> to render a list of <code>&lt;option&gt;</code> tags</li>\n<li>Has a similar syntax to <code>ng-repeat</code></li>\n<li>You’ll google for this every time you need to use it</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">124</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-125 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>select</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'NavCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>, <span class=\"cm-def\">$location</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">items</span> = [{ <span class=\"cm-property\">url</span>: <span class=\"cm-string\">'/'</span>, <span class=\"cm-property\">title</span>: <span class=\"cm-string\">'home'</span>}, { <span class=\"cm-property\">url</span>: <span class=\"cm-string\">'/about'</span>, <span class=\"cm-property\">title</span>: <span class=\"cm-string\">'about'</span>}];\n\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">selectedNavItem</span> = <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">items</span>[<span class=\"cm-number\">0</span>]\n\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">goTo</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">url</span>) { <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">url</span>); <span class=\"cm-comment\">/* $location.path(url) */</span> };\n    });</pre>\n\n\n<ul>\n<li>Array of nav items</li>\n<li>First of all, create a placeholder for the selected item</li>\n<li>Here’s a <code>goTo</code> function that we’ll use when the select changes</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">125</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-126 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>select</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"NavCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;select</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"form-control\"</span> \n            <span class=\"cm-attribute\">ng-options</span>=<span class=\"cm-string\">\"item.title for item in items\"</span>\n            <span class=\"cm-attribute\">ng-change</span>=<span class=\"cm-string\">\"goTo(selectedNavItem.url)\"</span> \n            <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"selectedNavItem\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;/select</span><span class=\"cm-tag\">&gt;</span> \n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n\n\n<ul>\n<li>There’s an <code>ng-options</code> here</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">126</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-127 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>select</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span></span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"NavCtrl\"</span><span class=\"cm-tag\">&gt;</span></span>\n        <span class=\"dim-line\"><span class=\"cm-tag\">&lt;select</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"form-control\"</span> </span>\n            <span class=\"cm-attribute\">ng-options</span>=<span class=\"cm-string\">\"item.title for item in items\"</span>\n            <span class=\"dim-line\"><span class=\"cm-attribute\">ng-change</span>=<span class=\"cm-string\">\"goTo(selectedNavItem.url)\"</span> </span>\n            <span class=\"dim-line\"><span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"selectedNavItem\"</span><span class=\"cm-tag\">&gt;</span></span>\n        <span class=\"dim-line\"><span class=\"cm-tag\">&lt;/select</span><span class=\"cm-tag\">&gt;</span> </span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span></span>\n<span class=\"dim-line\"><span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></span></pre>\n\n\n<ul>\n<li><code>items</code> is the loop</li>\n<li><code>item.title</code> tells angular what to use for the option text</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">127</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-128 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>select</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span></span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"NavCtrl\"</span><span class=\"cm-tag\">&gt;</span></span>\n        <span class=\"dim-line\"><span class=\"cm-tag\">&lt;select</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"form-control\"</span> </span>\n            <span class=\"dim-line\"><span class=\"cm-attribute\">ng-options</span>=<span class=\"cm-string\">\"item.title for item in items\"</span></span>\n            <span class=\"dim-line\"><span class=\"cm-attribute\">ng-change</span>=<span class=\"cm-string\">\"goTo(selectedNavItem.url)\"</span> </span>\n            <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"selectedNavItem\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"dim-line\"><span class=\"cm-tag\">&lt;/select</span><span class=\"cm-tag\">&gt;</span> </span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span></span>\n<span class=\"dim-line\"><span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></span></pre>\n\n\n<ul>\n<li>The value will be the actual <code>item</code>, and will be placed on the scope as <code>selectedNavItem</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">128</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-129 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>select</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span></span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"NavCtrl\"</span><span class=\"cm-tag\">&gt;</span></span>\n        <span class=\"dim-line\"><span class=\"cm-tag\">&lt;select</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"form-control\"</span> </span>\n            <span class=\"dim-line\"><span class=\"cm-attribute\">ng-options</span>=<span class=\"cm-string\">\"item.title for item in items\"</span></span>\n            <span class=\"cm-attribute\">ng-change</span>=<span class=\"cm-string\">\"goTo(selectedNavItem.url)\"</span> \n            <span class=\"dim-line\"><span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"selectedNavItem\"</span><span class=\"cm-tag\">&gt;</span></span>\n        <span class=\"dim-line\"><span class=\"cm-tag\">&lt;/select</span><span class=\"cm-tag\">&gt;</span> </span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span></span>\n<span class=\"dim-line\"><span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></span></pre>\n\n\n<ul>\n<li>Whenever the selected item changes, we’ll be able to grab the <code>selectedNavItem.url</code> and pass it to the <code>goTo</code> function on the scope</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">129</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-130 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>select</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"NavCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;select</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"form-control\"</span> \n            <span class=\"cm-attribute\">ng-options</span>=<span class=\"cm-string\">\"item.title for item in items\"</span>\n            <span class=\"cm-attribute\">ng-change</span>=<span class=\"cm-string\">\"goTo(selectedNavItem.url)\"</span> \n            <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"selectedNavItem\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;/select</span><span class=\"cm-tag\">&gt;</span> \n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n\n\n<ul>\n<li>Check it out working…</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">130</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-131 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>script</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;script</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text/ng-template\"</span> <span class=\"cm-attribute\">id</span>=<span class=\"cm-string\">\"/mobileNav.html\"</span><span class=\"cm-tag\">&gt;</span>\n&lt;select ng-model=\"activeItem\" ng-change=\"goTo()\" ng-options=\"item.title for item in items\"&gt;\n    &lt;option value=\"\"&gt;Jump to Page&lt;/option&gt;\n&lt;/select&gt;\n<span class=\"cm-tag\">&lt;/script</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Load the content of a <code>&lt;script&gt;</code> element into $templateCache</li>\n<li>Makes it usable by <code>ngInclude</code>, <code>ngView</code>, or directives</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">131</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-132 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>LAB 2</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><a href=\"http://jcreamer898.github.io/angularjs-training/labs/completed/lab2/lab2.done.html\" target=\"_blank\">http://jcreamer898.github.io/angularjs-training/labs/completed/lab2/lab2.done.html</a></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">132</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-133 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>BREAK</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n<iframe data-blazon-role=\"demo\" style=\"width: 100%; height: auto;\" frameborder=\"0\"></iframe>\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">133</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-134 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Filters</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">134</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-135 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Filters</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<blockquote>\n<p>“A filter formats the value of an expression for display to the user”</p>\n</blockquote>\n<ul>\n<li>Use the <code>|</code> in an expression to format data</li>\n<li>Many built in filters</li>\n<li>Easy to create custom filters</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\">{{ expression | filter }}</pre>\n<p>Chain them with multiple <code>|</code>‘s</p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\">{{ expression | filter1 | filter2 | ... }}</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">135</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-136 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Built in filters</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>currency</code></li>\n<li><code>date</code></li>\n<li><code>filter</code></li>\n<li><code>json</code></li>\n<li><code>limitTo</code></li>\n<li><code>lowercase</code></li>\n<li><code>number</code></li>\n<li><code>orderBy</code></li>\n<li><code>uppercase</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">136</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-137 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Currency</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    {{12345 | currency}}\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Format as a currency value</li>\n<li>Can accept a symbol as an optional argument</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">137</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-138 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Date</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"DateDemo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"DateCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        {{ date | date: 'medium' }}\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'DateDemo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'DateCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">date</span> = <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Date</span>();\n    });</pre>\n<ul>\n<li>Format as a currency value</li>\n<li>Can accept a symbol as an optional argument</li>\n<li>Many different format types, “short”, “fullDate”, etc, and</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">138</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-139 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Filter</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"FilterDemo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"FilterCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"vm.query\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;ul</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;li</span> <span class=\"cm-attribute\">ng-repeat</span>=<span class=\"cm-string\">\"item in vm.list | filter: vm.query\"</span><span class=\"cm-tag\">&gt;</span>\n                {{item.name}}\n            <span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;/ul</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'FilterDemo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'FilterCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">list</span> = [{ <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'spaghetti'</span> }, { <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'lasagna'</span> }, { <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'canoli'</span> }]\n    });</pre>\n<ul>\n<li>Yes, the filter… filter</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">139</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-140 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Filter</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Searches all key’s on an array of objects for a match</li>\n<li>You can also change the query to filter specific keys</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">140</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-141 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Filter</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"FilterDemo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"FilterCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"vm.query.name\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;ul</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;li</span> <span class=\"cm-attribute\">ng-repeat</span>=<span class=\"cm-string\">\"item in vm.list | filter: vm.query\"</span><span class=\"cm-tag\">&gt;</span>\n                {{item.name}}\n            <span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;/ul</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'FilterDemo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'FilterCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">list</span> = [{ <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'spaghetti'</span> }, { <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'lasagna'</span> }, { <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'canoli'</span> }]\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">141</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-142 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>JSON</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;pre</span><span class=\"cm-tag\">&gt;</span>{{ { foo: 'bar' } | json }}<span class=\"cm-tag\">&lt;/pre</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Useful for debugging</li>\n<li>Formats an object as JSON</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">142</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-143 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>limitTo</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span> <span class=\"cm-attribute\">ng-init</span>=<span class=\"cm-string\">\"list = [1,2,3,4,5,6]\"</span><span class=\"cm-tag\">&gt;</span>\n    {{ list | limitTo: 3 }}\n    {{ list | limitTo: -3 }}    \n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Useful for debugging</li>\n<li>Formats an object as JSON</li>\n<li>Positive number is limit from beginning</li>\n<li>Negative number is limit fromend</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">143</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-144 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>lowercase and uppercase</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span><span class=\"cm-tag\">&gt;</span>\n    {{ 'MAY THE FORCE be with you' | lowercase }}\n    {{ 'may the force BE WITH YOU' | uppercase }}\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>case a string</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">144</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-145 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Number</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"NumberDemo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"NumberCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        {{vm.val | number}} <span class=\"cm-tag\">&lt;br</span> <span class=\"cm-tag\">/&gt;</span>\n        {{vm.val | number: 0 }} <span class=\"cm-tag\">&lt;br</span> <span class=\"cm-tag\">/&gt;</span>\n        {{vm.val | number: 2 }} <span class=\"cm-tag\">&lt;br</span> <span class=\"cm-tag\">/&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'NumberDemo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'NumberCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">val</span> = <span class=\"cm-string\">\"1234.56789\"</span>;\n    });</pre>\n<ul>\n<li>Format value as a number, with optional decimal limit</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">145</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-146 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>OrderBy</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"NumberDemo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"NumberCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        {{vm.list | orderBy: 'age'}}\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'NumberDemo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'NumberCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">list</span> = [{ <span class=\"cm-property\">age</span>: <span class=\"cm-number\">50</span> }, { <span class=\"cm-property\">age</span>: <span class=\"cm-number\">26</span> }, { <span class=\"cm-property\">age</span>: <span class=\"cm-number\">48</span> }, { <span class=\"cm-property\">age</span>: <span class=\"cm-number\">24</span> }];\n    });</pre>\n<ul>\n<li>Order a list</li>\n<li>Pass in a string to match a key</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">146</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-147 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>OrderBy</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"NumberDemo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"NumberCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        {{vm.list | orderBy: '-age'}}\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'NumberDemo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'NumberCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">list</span> = [{ <span class=\"cm-property\">age</span>: <span class=\"cm-number\">50</span> }, { <span class=\"cm-property\">age</span>: <span class=\"cm-number\">26</span> }, { <span class=\"cm-property\">age</span>: <span class=\"cm-number\">48</span> }, { <span class=\"cm-property\">age</span>: <span class=\"cm-number\">24</span> }];\n    });</pre>\n<ul>\n<li>Switch to descending with a “-“</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">147</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-148 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>OrderBy</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Can also use an array to sort by multiple keys</li>\n<li>Can pass in a function to customize how it gets ordered if needed</li>\n<li>The result of this function will be sorted using the &lt;, =, &gt; operator.</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">148</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-149 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Custom filter</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">filter</span>(<span class=\"cm-string\">'phone'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">input</span>, <span class=\"cm-def\">options</span>) {\n            <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">area</span> = <span class=\"cm-variable-2\">input</span>.<span class=\"cm-property\">substr</span>(<span class=\"cm-number\">0</span>, <span class=\"cm-number\">3</span>),\n                <span class=\"cm-def\">middle</span> = <span class=\"cm-variable-2\">input</span>.<span class=\"cm-property\">substr</span>(<span class=\"cm-number\">2</span>, <span class=\"cm-number\">3</span>),\n                <span class=\"cm-def\">end</span> = <span class=\"cm-variable-2\">input</span>.<span class=\"cm-property\">substr</span>(<span class=\"cm-number\">6</span>, <span class=\"cm-number\">4</span>);\n\n            <span class=\"cm-keyword\">return</span> [<span class=\"cm-variable-2\">area</span>, <span class=\"cm-variable-2\">middle</span>, <span class=\"cm-variable-2\">end</span>].<span class=\"cm-property\">join</span>(<span class=\"cm-string\">\"-\"</span>); \n        };\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    {{ '6155551234' | phone }}\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Add a filter to your module with <code>.filter()</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">149</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-150 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Custom Directives</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">150</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-151 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Custom Directives</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Easily create your own custom directives</li>\n<li>Can be your own DSL for your application</li>\n<li>Best practice to prefix your directives with a few letters to distinguish</li>\n<li>Only recommended place in angular app to do DOM manipulation and transformation</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">151</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-152 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Custom Directives</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"date\"</span> <span class=\"cm-attribute\">a2-date-picker</span> <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Date\"</span><span class=\"cm-tag\">/&gt;</span>\n    Your Date: {{date}}\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2DatePicker'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'A'</span>,\n            <span class=\"cm-property\">link</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">$el</span>, <span class=\"cm-def\">attrs</span>) {\n                <span class=\"cm-variable-2\">$el</span>.<span class=\"cm-property\">datepicker</span>({\n                    <span class=\"cm-property\">onSelect</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">date</span>) {\n                        <span class=\"cm-variable\">scope</span>.<span class=\"cm-property\">date</span> = <span class=\"cm-variable-2\">date</span>;\n                        <span class=\"cm-variable\">scope</span>.<span class=\"cm-property\">$apply</span>();\n                    }\n                });\n            }\n        };\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">152</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-153 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Creating a directive</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2DatePicker'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-comment\">// Directive options</span>\n        };\n    });</pre>\n<ul>\n<li>Can use a directive object to configure</li>\n<li>This is the preferred way, but there is another</li>\n<li>Directive name is camelCase, use in HTML is lower dash case</li>\n<li><code>a2DatePicker</code> = <code>a2-date-picker</code></li>\n<li>Always watch for that, because it’s super easy to forget</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">153</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-154 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Creating a directive</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2DatePicker'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">element</span>, <span class=\"cm-def\">attrs</span>) {\n            <span class=\"cm-comment\">// set it up</span>\n        };\n    });</pre>\n<ul>\n<li>Can also only return the <code>link</code> function</li>\n<li>This is the same as if you only returned an object with <code>{ link: function() {} }</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">154</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-155 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>link</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2DatePicker'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">link</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">element</span>, <span class=\"cm-def\">attrs</span>) {\n                <span class=\"cm-comment\">// Add behavior to element</span>\n            }\n        };\n    });</pre>\n<ul>\n<li>Executed after the template has been cloned from the DOM and all child elements have been linked to a scope</li>\n<li>Register DOM events, and update the DOM in this step</li>\n<li><code>scope</code> is the scope on this element or it’s parent, <code>element</code> is the jQLite or jQuery wrapped element</li>\n<li><code>attrs</code> contains an object of all the attributes on the element</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">155</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-156 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Be a good event citizen</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">myClick</span>() {}\n\n<span class=\"cm-variable\">element</span>.<span class=\"cm-property\">on</span>(<span class=\"cm-string\">'click'</span>, <span class=\"cm-variable\">myClick</span>);\n\n<span class=\"cm-variable\">scope</span>.<span class=\"cm-property\">$on</span>(<span class=\"cm-string\">'$destroy'</span>,<span class=\"cm-keyword\">function</span>(){\n    <span class=\"cm-variable\">element</span>.<span class=\"cm-property\">off</span>(<span class=\"cm-string\">'click'</span>, <span class=\"cm-variable\">myClick</span>);\n});</pre>\n<ul>\n<li>If you create an event handler, be sure to remove the handler when the scope is destroyed</li>\n<li>You can create memory leaks if you do not remove events</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">156</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-157 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>link</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2DatePicker'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">link</span>: {\n                <span class=\"cm-property\">pre</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">element</span>, <span class=\"cm-def\">attrs</span>) {\n                    <span class=\"cm-comment\">// Not linked, so don't transform the DOM</span>\n                },\n                <span class=\"cm-property\">post</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">element</span>, <span class=\"cm-def\">attrs</span>) {\n                    <span class=\"cm-comment\">// Linked, add your behaviors</span>\n                }\n            }\n        };\n    });</pre>\n<ul>\n<li>Can also pass an object with <code>pre</code> and <code>post</code></li>\n<li>Just a function means you’re doing <code>post</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">157</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-158 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>compile</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2DatePicker'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">compile</span>: {\n                <span class=\"cm-property\">pre</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">element</span>, <span class=\"cm-def\">attrs</span>) {\n\n                },\n                <span class=\"cm-property\">post</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">element</span>, <span class=\"cm-def\">attrs</span>) {\n\n                }\n            }\n        };\n    });</pre>\n<ul>\n<li>Allows you to transform the DOM before linking</li>\n<li>Not used often, but good to know</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">158</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-159 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>priority</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2DatePicker'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">priority</span>: <span class=\"cm-number\">100</span>\n        };\n    });</pre>\n<ul>\n<li><p>Default priority is 0</p>\n</li>\n<li><p>You can have multiple directives on an element</p>\n</li>\n<li>Priority sorts which one runs first</li>\n<li>They are all added, and then sorted by priority</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">159</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-160 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Restrict</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2DatePicker'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'EA'</span>\n        };\n    });</pre>\n<ul>\n<li>Tells angular where the directive can be used</li>\n<li>A: Attribute, E: Element, C: Comment</li>\n<li>As of 1.3, the default is <code>EA</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">160</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-161 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Template</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'Demo'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2H1'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'AE'</span>,\n            <span class=\"cm-property\">template</span>: <span class=\"cm-string\">'&lt;h1&gt;hello world&lt;/h1&gt;'</span>\n        };\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"Demo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;a2-h1</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/a2-h1</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Can include an HTML template</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">161</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-162 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>transclude</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'Demo'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2H1'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'AE'</span>,\n            <span class=\"cm-property\">transclude</span>: <span class=\"cm-atom\">true</span>,\n            <span class=\"cm-property\">template</span>: <span class=\"cm-string\">'&lt;h1&gt;hello &lt;span ng-transclude&gt;&lt;/span&gt;&lt;/h1&gt;'</span>\n        };\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"Demo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;a2-h1</span><span class=\"cm-tag\">&gt;</span>jonathan<span class=\"cm-tag\">&lt;/a2-h1</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Fancy word that means include what was in the original template</li>\n<li>Allows you to wrap existing content </li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">162</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-163 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>transclude</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'Demo'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2Header'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'AE'</span>,\n            <span class=\"cm-property\">transclude</span>: <span class=\"cm-atom\">true</span>,\n            <span class=\"cm-property\">template</span>: <span class=\"cm-string\">'&lt;header ng-transclude&gt;&lt;/header&gt;'</span>\n        };\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"Demo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;a2-header</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/home\"</span><span class=\"cm-tag\">&gt;</span>Home<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/a2-header</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">163</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-164 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>scope</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'Demo'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2Header'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'AE'</span>,\n            <span class=\"cm-property\">scope</span>: <span class=\"cm-atom\">false</span> <span class=\"cm-comment\">// default</span>\n        };\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"Demo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;a2-header</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/a2-header</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Allows you to control how the scope of the directive gets cteated</li>\n<li><code>scope: false</code> means you’re acting directly on the parent scope of the directive</li>\n<li>In this case you’d be working directly on the root scope</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">164</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-165 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>scope</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'Demo'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2Header'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'AE'</span>,\n            <span class=\"cm-property\">scope</span>: <span class=\"cm-atom\">true</span> <span class=\"cm-comment\">// default</span>\n        };\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"Demo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;a2-header</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/a2-header</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>scope: true</code> gets a new child scope inherited from its parent</li>\n<li>Basically the same as if it were a controller</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">165</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-166 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>scope</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'Demo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'DemoCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">user</span> = { <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'Han'</span> };\n    })\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2Header'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'E'</span>,\n            <span class=\"cm-property\">scope</span>: <span class=\"cm-atom\">true</span>,\n            <span class=\"cm-property\">link</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">element</span>, <span class=\"cm-def\">attrs</span>) {\n                <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">scope</span>.<span class=\"cm-property\">user</span>.<span class=\"cm-property\">name</span>); <span class=\"cm-comment\">// \"han\"</span>\n            }\n        };\n    });</pre>\n<ul>\n<li>Can change the parent’s properties</li>\n<li>Can add it’s own scope properties</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">166</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-167 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>scope</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'Demo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'DemoCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">user</span> = { <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'Han'</span> };\n    })\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2Header'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'E'</span>,\n            <span class=\"cm-property\">scope</span>: {\n\n            },\n            <span class=\"cm-property\">link</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">element</span>, <span class=\"cm-def\">attrs</span>) {\n                <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">scope</span>.<span class=\"cm-property\">user</span>.<span class=\"cm-property\">name</span>); <span class=\"cm-comment\">// undefined</span>\n            }\n        };\n    });</pre>\n<ul>\n<li>Scope with an object creates an “isolate” scope</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">167</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-168 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>scope</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'Demo'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'DemoCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">user</span> = { <span class=\"cm-property\">name</span>: <span class=\"cm-string\">'Han'</span> };\n    })\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2Header'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'E'</span>,\n            <span class=\"cm-property\">scope</span>: {\n                <span class=\"cm-property\">user</span>: <span class=\"cm-string\">'='</span>\n            },\n            <span class=\"cm-property\">link</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">element</span>, <span class=\"cm-def\">attrs</span>) {\n                <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">scope</span>.<span class=\"cm-property\">user</span>.<span class=\"cm-property\">name</span>); <span class=\"cm-comment\">// \"han\"</span>\n            }\n        };\n    });</pre>\n<ul>\n<li>Pass in items you want to grab off of the parent scope through attributes</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">168</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-169 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>scope</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"Demo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"DemoCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;a2-header</span> <span class=\"cm-attribute\">user</span>=<span class=\"cm-string\">\"user\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/a2-header</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\">.<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2Header'</span>, <span class=\"cm-keyword\">function</span>() {</span>\n    <span class=\"dim-line\"><span class=\"cm-keyword\">return</span> {</span>\n        <span class=\"dim-line\"><span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'E'</span>,</span>\n        <span class=\"dim-line\"><span class=\"cm-property\">scope</span>: {</span>\n            <span class=\"cm-property\">user</span>: <span class=\"cm-string\">'='</span>\n        <span class=\"dim-line\">},</span>\n        <span class=\"dim-line\"><span class=\"cm-property\">link</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">element</span>, <span class=\"cm-def\">attrs</span>) {</span>\n            <span class=\"dim-line\"><span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">scope</span>.<span class=\"cm-property\">user</span>.<span class=\"cm-property\">name</span>); <span class=\"cm-comment\">// \"han\"</span></span>\n        <span class=\"dim-line\">}</span>\n    <span class=\"dim-line\">};</span>\n<span class=\"dim-line\">});</span></pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">169</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-170 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>scope</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>3 ways to pass variables to an isolate scope</li>\n<li><code>=</code> pass in a property off of the scope</li>\n<li><code>@</code> string or interpolated value</li>\n<li><code>&amp;</code> an expression</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">170</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-171 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>key: ‘=’</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">scope</span>: {\n    <span class=\"cm-variable\">user</span>: <span class=\"cm-string\">'='</span> <span class=\"cm-comment\">// or '=attr' if you want to change how it's used on the element</span>\n}</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;a2-header</span> <span class=\"cm-attribute\">user</span>=<span class=\"cm-string\">\"user\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/a2-header</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Basically 2 way binding</li>\n<li>Maps to a property on the scope of the directive’s parent </li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">171</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-172 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>key: ‘=’</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">scope</span>: {\n    <span class=\"cm-variable\">user</span>: <span class=\"cm-string\">'=myUser'</span>\n}</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"Demo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"DemoCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;a2-header</span> <span class=\"cm-attribute\">my-user</span>=<span class=\"cm-string\">\"user\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/a2-header</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>=attr</code> if you want to change how it’s used on the element </li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">172</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-173 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>key: ‘@’</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">scope</span>: {\n    <span class=\"cm-variable\">user</span>: <span class=\"cm-string\">'='</span>,\n    <span class=\"cm-variable\">age</span>: <span class=\"cm-string\">'@'</span>\n}</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"Demo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"DemoCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;a2-header</span> <span class=\"cm-attribute\">user</span>=<span class=\"cm-string\">\"user\"</span> <span class=\"cm-attribute\">age</span>=<span class=\"cm-string\">\"72\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/a2-header</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Directly pass a string to the scope</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">173</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-174 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>key: ‘@’</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">scope</span>: {\n    <span class=\"cm-variable\">user</span>: <span class=\"cm-string\">'='</span>,\n    <span class=\"cm-variable\">age</span>: <span class=\"cm-string\">'@'</span>\n}</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"Demo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"DemoCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;a2-header</span> <span class=\"cm-attribute\">user</span>=<span class=\"cm-string\">\"user\"</span> <span class=\"cm-attribute\">age</span>=<span class=\"cm-string\">\"{{user.name}} is 72\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/a2-header</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Or interpolate a value</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">174</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-175 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>key: ‘&amp;’</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>This one is complicated…</li>\n</ul>\n<p><img src=\"images/7Z1enpi_1133d5fe4167d52cc9ff14c73d7006c8cfa4e2e7.gif\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">175</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-176 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>key: ‘&amp;’</h1>\n\n\n<h2>a2Order directive</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">\"Demo\"</span>, [])\n  .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">\"foo\"</span>, <span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-keyword\">return</span> {\n      <span class=\"cm-property\">scope</span>: {\n        <span class=\"cm-property\">localFn</span>: <span class=\"cm-string\">\"&amp;expr\"</span>\n      },\n      <span class=\"cm-property\">template</span>: <span class=\"cm-string\">\"{{localFn()}}\"</span>\n    };\n  });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"Demo\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;foo</span> <span class=\"cm-attribute\">expr</span>=<span class=\"cm-string\">\"2 + 2\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/foo</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Utilizes <code>$parse</code> to parse an expression</li>\n<li>Pass in the expression as <code>expr</code>, </li>\n<li>Run it in the directive’s template with <code>localFn()</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">176</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-177 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>key: ‘&amp;’</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'OrderCtrl'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">items</span> = [<span class=\"cm-string\">'pizza'</span>, <span class=\"cm-string\">'spaghetti'</span>, <span class=\"cm-string\">'calzone'</span>]\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">order</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">item</span>) { <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">\"order: \"</span> + <span class=\"cm-variable-2\">item</span> ); }\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"OrderCtrl as vm\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;ul</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;li</span> <span class=\"cm-attribute\">ng-repeat</span>=<span class=\"cm-string\">\"bar in vm.items\"</span><span class=\"cm-tag\">&gt;</span>\n                <span class=\"cm-tag\">&lt;a2-order</span> <span class=\"cm-attribute\">process</span>=<span class=\"cm-string\">\"vm.order(item)\"</span> <span class=\"cm-attribute\">data</span>=<span class=\"cm-string\">\"bar\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/a2-order</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;/ul</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Evaluate expression in the parent’s context </li>\n<li>Pass an expression into the <code>process</code> attribute</li>\n<li>This expression will be parsed</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">177</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-178 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>key: ‘&amp;’</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'a2Order'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'E'</span>,\n            <span class=\"cm-property\">scope</span>: {\n                <span class=\"cm-property\">process</span>: <span class=\"cm-string\">'&amp;'</span>,\n                <span class=\"cm-property\">data</span>: <span class=\"cm-string\">'='</span>\n            },\n            <span class=\"cm-property\">template</span>: <span class=\"cm-string\">'&lt;button ng-click=\"process({ item: processed })\"&gt;{{processed}}&lt;/button&gt;'</span>,\n            <span class=\"cm-property\">link</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">el</span>, <span class=\"cm-def\">scope</span>) {\n                <span class=\"cm-comment\">// Process the data some how</span>\n                <span class=\"cm-variable-2\">scope</span>.<span class=\"cm-property\">processed</span> = <span class=\"cm-variable\">data</span>;\n            }\n        };\n    });</pre>\n\n<ul>\n<li><code>process</code> contains the expression</li>\n<li><code>data</code> contains the item we want to process</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">178</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-179 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>key: ‘&amp;’</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'E'</span>,</span>\n<span class=\"dim-line\"><span class=\"cm-property\">scope</span>: {</span>\n    <span class=\"cm-property\">process</span>: <span class=\"cm-string\">'&amp;'</span>,\n    <span class=\"dim-line\"><span class=\"cm-property\">data</span>: <span class=\"cm-string\">'='</span></span>\n<span class=\"dim-line\">},</span>\n<span class=\"cm-property\">template</span>: <span class=\"cm-string\">'&lt;button ng-click=\"process({ item: processed })\"&gt;{{processed}}&lt;/button&gt;'</span>,\n<span class=\"dim-line\"><span class=\"cm-property\">link</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">el</span>, <span class=\"cm-def\">scope</span>) {</span></pre>\n\n\n<ul>\n<li>Basically this happens</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">getter</span> = <span class=\"cm-variable\">$parse</span>(<span class=\"cm-string\">\"vm.order(item)\"</span>);<span class=\"cm-variable\">`</span>\n\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">process</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">locals</span>) {\n    <span class=\"cm-variable\">getter</span>(<span class=\"cm-variable\">scope</span>, <span class=\"cm-variable-2\">locals</span>);\n};</pre>\n<ul>\n<li><code>process</code> is a function, like before, that can accept locals</li>\n<li>The scope gets set as the controller’s scope automatically</li>\n<li>Pass in <code>item</code> as a local from <code>{ item: processed }</code> to <code>vm.order(item)</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">179</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-180 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>controller</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'DirectiveCommunication'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'myFirst'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">controller</span>: <span class=\"cm-keyword\">function</span>() {\n                <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">name</span> = <span class=\"cm-string\">\"myFirst controller\"</span>;\n            }\n        };\n    });</pre>\n<ul>\n<li>Directives can communicate with each other when they define a controller</li>\n<li>Place for specific logic</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">180</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-181 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>require</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'DirectiveCommunication'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'myFirst'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">controller</span>: <span class=\"cm-keyword\">function</span>() {\n                <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">name</span> = <span class=\"cm-string\">\"myFirst controller\"</span>;\n            }\n        };\n    })\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'mySecond'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">restrict</span>: <span class=\"cm-string\">'E'</span>,\n            <span class=\"cm-property\">require</span>: <span class=\"cm-string\">'myFirst'</span>,\n            <span class=\"cm-property\">link</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">element</span>, <span class=\"cm-def\">attrs</span>, <span class=\"cm-def\">ctrls</span>) {\n                <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">ctrls</span>);\n            }\n        };\n    });</pre>\n\n<ul>\n<li>Require pulls the controller into the <code>ctrls</code> arugment</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">181</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-182 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>require</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"DirectiveCommunication\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;my-second</span> <span class=\"cm-attribute\">my-first</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/my-second</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>myFirst</code> is a sibling directive since it’s on the same element as <code>my-second</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">182</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-183 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>require</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-property\">require</span>: <span class=\"cm-string\">'?myFirst'</span>,</pre>\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"DirectiveCommunication\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;my-second</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/my-second</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>If you try to require a directive not present on the element you’ll get an error </li>\n<li>Unless you use the <code>?</code> when you require the directive</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">183</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-184 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>require</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-property\">require</span>: <span class=\"cm-string\">'?^myFirst'</span>,</pre>\n\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"DirectiveCommunication\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">my-first</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;my-second</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/my-second</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>You can also require a directive from the parent with <code>^</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">184</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-185 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ControllerAs</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'DirectiveCommunication'</span>, [])\n    .<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'myFirst'</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">controller</span>: <span class=\"cm-keyword\">function</span>() {\n                <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">name</span> = <span class=\"cm-string\">\"myFirst controller\"</span>;\n            },\n            <span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">\"ctrl\"</span>,\n            <span class=\"cm-property\">template</span>: <span class=\"cm-string\">\"&lt;div&gt;{{ctrl.name}}&lt;/dib&gt;\"</span>\n        };\n    });</pre>\n<ul>\n<li>Can use <code>controllerAs</code> in templates</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">185</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-186 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Lab 3</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><a href=\"http://jcreamer898.github.io/angularjs-training/labs/completed/lab3/lab3.done.html\" target=\"_blank\">http://jcreamer898.github.io/angularjs-training/labs/completed/lab3/lab3.done.html</a></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">186</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-187 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>BREAK</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n<iframe data-blazon-role=\"demo\" style=\"width: 100%; height: auto;\" frameborder=\"0\"></iframe>\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">187</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-188 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>services</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">188</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-189 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Models in angular</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Models in angular are just objects on the scope</li>\n<li>That’s IT! Plain old JS objects</li>\n<li>Since angular is MVC, you need something that gives the controller a way to get data from the server and add it to the scope as a “model”</li>\n<li>That’s where services come into play</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">189</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-190 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>What are services?</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>You can use services to organize and share code across your app.</li>\n<li>They are singletons and are lazily created when they’re needed</li>\n<li>There are a few different ways to create a “service” in angular</li>\n<li>Many built in services, including a few we’ve already seen</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">190</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-191 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Built in services</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">191</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-192 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Built in services</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Lots of built in services to help build applications</li>\n<li>We’ll cover a few of them</li>\n<li><code>$anchorScroll</code>, <code>$animate</code>, <code>$cacheFactory</code>, <code>$compile</code>, <code>$controller</code>, <code>$document</code>, <code>$exceptionHandler</code>, <code>$filter</code>, <code>$http</code>, <code>$httpBackend</code>, <code>$interpolate</code>, <code>$interval</code>, <code>$locale</code>, <code>$location</code>, <code>$log</code>, <code>$parse</code>, <code>$q</code>, <code>$rootElement</code>, <code>$rootScope</code>, <code>$sce</code>, <code>$sceDelegate</code>, <code>$templateCache</code>, <code>$timeout</code>, <code>$window</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">192</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-193 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Built in services</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Lots of built in services to help build applications</li>\n<li>Already seen <code>$rootScope</code>, and <code>$location</code></li>\n<li>We’ll cover a few more of them</li>\n<li><code>$anchorScroll</code>, <code>$animate</code>, <code>$cacheFactory</code>, <code>$compile</code>, <code>$controller</code>, <code>$document</code>, <code>$exceptionHandler</code>, <code>$filter</code>, <code>$http</code>, <code>$httpBackend</code>, <code>$interpolate</code>, <code>$interval</code>, <code>$locale</code>, <code>$location</code>, <code>$log</code>, <code>$parse</code>, <code>$q</code>, <code>$rootElement</code>, <code>$rootScope</code>, <code>$sce</code>, <code>$sceDelegate</code>, <code>$templateCache</code>, <code>$timeout</code>, <code>$window</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">193</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-194 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>$q</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>A JavaScript promise implementation</li>\n<li>Promises make working with async code easier</li>\n<li>You execute a piece of async code and get a promise back that allows you to chain  async calls together</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">194</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-195 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>$q</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">function</span> <span class=\"cm-variable\">doAsyncThing</span>() {\n    <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">dfd</span> = <span class=\"cm-variable\">$q</span>.<span class=\"cm-property\">defer</span>();\n\n    <span class=\"cm-variable\">setTimeout</span>(<span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-variable\">dfd</span>.<span class=\"cm-property\">resolve</span>([<span class=\"cm-number\">1</span>,<span class=\"cm-number\">2</span>,<span class=\"cm-number\">3</span>]);\n    }, <span class=\"cm-number\">0</span>);\n\n    <span class=\"cm-keyword\">return</span> <span class=\"cm-variable-2\">dfd</span>.<span class=\"cm-property\">promise</span>;\n}\n\n<span class=\"cm-variable\">doAsyncThing</span>().<span class=\"cm-property\">then</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">arr</span>) {\n    <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">arr</span>); <span class=\"cm-comment\">// [1,2,3]</span>\n});</pre>\n<ul>\n<li><code>then</code> allows you to grab the resolved promises’ data</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">195</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-196 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>$timeout and $interval</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">setTimeout</span>(<span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-variable\">$scope</span>.<span class=\"cm-property\">user</span>.<span class=\"cm-property\">name</span> = <span class=\"cm-string\">\"test\"</span>; <span class=\"cm-comment\">// Won't work</span>\n}, <span class=\"cm-number\">500</span>);</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">setTimeout</span>(<span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-variable\">$scope</span>.<span class=\"cm-property\">user</span>.<span class=\"cm-property\">name</span> = <span class=\"cm-string\">\"test\"</span>;\n    <span class=\"cm-variable\">$scope</span>.<span class=\"cm-property\">$apply</span>(); <span class=\"cm-comment\">// Have to manually call it</span>\n}, <span class=\"cm-number\">500</span>);</pre>\n<ul>\n<li>As mentioned previously if you try to do anything outside of the context of angular, you’ll have issues and potentially have to call <code>$scope.$apply()</code></li>\n<li><code>setTimeout</code> and <code>setInterval</code> would cause issues</li>\n<li>Angular has <code>$timeout</code>, and <code>$interval</code>, that keep things in the angular life cycle</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">196</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-197 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>$http</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Retrieves data via ajax</li>\n<li>Works with all HTTP methods</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">$http</span>({ \n    <span class=\"cm-property\">url</span>: <span class=\"cm-string\">'/api/items'</span>,\n    <span class=\"cm-property\">type</span>: <span class=\"cm-string\">'GET'</span>\n});</pre>\n<p>OR with http methods (<code>get</code>, <code>post</code>, <code>delete</code>, <code>put</code>, <code>patch</code>) and <code>jsonp</code></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">$http</span>.<span class=\"cm-property\">get</span>(<span class=\"cm-string\">'/api/items'</span>); \n<span class=\"cm-variable\">$http</span>.<span class=\"cm-property\">post</span>(<span class=\"cm-string\">'/api/items'</span>, <span class=\"cm-variable\">data</span>);</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">197</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-198 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>$http</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>All the methods return a <code>promise</code> that has extra <code>success</code> and <code>error</code> methods</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">$http</span>({ \n    <span class=\"cm-property\">url</span>: <span class=\"cm-string\">'/api/items'</span>,\n    <span class=\"cm-property\">type</span>: <span class=\"cm-string\">'GET'</span>\n}).<span class=\"cm-property\">success</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">items</span>) {\n    <span class=\"cm-comment\">// do something with items</span>\n}).<span class=\"cm-property\">error</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">err</span>) {\n    <span class=\"cm-comment\">// uh oh error</span>\n});</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">198</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-199 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>$http</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Can use <code>params</code> to add to the query string</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">$http</span>({ \n    <span class=\"cm-property\">url</span>: <span class=\"cm-string\">'/api/items'</span>,\n    <span class=\"cm-property\">type</span>: <span class=\"cm-string\">'GET'</span>,\n    <span class=\"cm-property\">params</span>: {\n        <span class=\"cm-property\">query</span>: <span class=\"cm-string\">'params'</span>\n    }\n});</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">199</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-200 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>$http</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Can use <code>data</code> to add to data the request</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">$http</span>({ \n    <span class=\"cm-property\">url</span>: <span class=\"cm-string\">'/api/items'</span>,\n    <span class=\"cm-property\">type</span>: <span class=\"cm-string\">'POST'</span>,\n    <span class=\"cm-property\">data</span>: {\n        <span class=\"cm-property\">foo</span>: <span class=\"cm-string\">'bar'</span>\n    }\n});</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">200</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-201 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Factory</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>The <code>factory</code> API allows you to create a service by returning an object API</li>\n<li>The function you pass in will be the constructor for the service and will run once</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">factory</span>(<span class=\"cm-string\">'Menu'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$http</span>) {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">list</span>: <span class=\"cm-keyword\">function</span>() {\n                <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">$http</span>({ \n                    <span class=\"cm-property\">url</span>: <span class=\"cm-string\">'/api/items'</span>,\n                    <span class=\"cm-property\">type</span>: <span class=\"cm-string\">'GET'</span>\n                });\n            }\n        };\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">201</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-202 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Factory</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Let your logic live in services that the controllers use with DI</li>\n<li>Makes things cleaner, and more testable</li>\n<li>As stated before, controllers are thin, logic-less as possible, and state-less as possible</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MenuCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">Menu</span>, <span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">Menu</span>.<span class=\"cm-property\">list</span>().<span class=\"cm-property\">success</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">list</span>) {\n            <span class=\"cm-variable\">$scope</span>.<span class=\"cm-property\">list</span> = <span class=\"cm-variable-2\">list</span>; \n        }); \n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">202</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-203 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>provider</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Whatever you return from the <code>$get</code> in the provider will be returned when you DI it</li>\n<li><p>Only thing you can configure with <code>.config()</code></p>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n  .<span class=\"cm-property\">provider</span>(<span class=\"cm-string\">'Navigation'</span>, <span class=\"cm-keyword\">function</span>() {\n      <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">items</span> = []\n\n      <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">setNavigation</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">navItems</span>) {\n          <span class=\"cm-variable\">items</span> = <span class=\"cm-variable-2\">navItems</span>;\n      };\n\n      <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">$get</span> = <span class=\"cm-keyword\">function</span>() {\n          <span class=\"cm-keyword\">return</span> {\n              <span class=\"cm-property\">list</span>: <span class=\"cm-variable\">items</span>\n          };\n      };\n  });</pre>\n</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">203</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-204 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>provider</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Now whenever you set up your app, you can call <code>.config</code> and configure it</li>\n<li>When configuring, the <code>Provider</code> suffix is added automatically</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">config</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">NavigationProvider</span>) {\n        <span class=\"cm-variable-2\">NavigationProvider</span>.<span class=\"cm-property\">setNavigation</span>([{\n            <span class=\"cm-property\">url</span>: <span class=\"cm-string\">'/'</span>,\n            <span class=\"cm-property\">title</span>: <span class=\"cm-string\">'Home'</span>\n        }])\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">204</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-205 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>provider</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Then in a controller, whatever you provided as the <code>$get</code> in the provider will be returned</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'NavCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">Navigation</span>) {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">list</span> = <span class=\"cm-variable-2\">Navigation</span>.<span class=\"cm-property\">list</span>;\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">205</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-206 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Value</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>A simple service for returning any value</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">model</span>(<span class=\"cm-string\">'introToAngularApp.services'</span>)\n    .<span class=\"cm-property\">value</span>(<span class=\"cm-string\">'apiToken'</span>, <span class=\"cm-string\">'123456789'</span>);</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">206</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-207 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Service</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Similar to factory, but you don’t actually return anything</li>\n<li>You set up functions and properties on the <code>this</code> of the service</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp.services`)</span>\n    .<span class=\"cm-property\">service</span>(<span class=\"cm-string\">'Oauth'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">apiToken</span>) {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">apiToken</span> = <span class=\"cm-variable-2\">apiToken</span>;\n\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">getRequestToken</span> = <span class=\"cm-keyword\">function</span>() {\n            <span class=\"cm-comment\">// use apiToken value</span>\n        };\n    });</pre>\n<ul>\n<li>Basically returns a <code>new</code> of whatever function you pass in</li>\n<li>Still a singleton like all other services</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">207</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-208 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Service</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Similar to factory, but you don’t actually return anything</li>\n<li>You set up functions and properties on the <code>this</code> of the service</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp.services`)</span>\n    .<span class=\"cm-property\">service</span>(<span class=\"cm-string\">'Oauth'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">apiToken</span>) {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">getRequestToken</span> = <span class=\"cm-keyword\">function</span>() {\n            <span class=\"cm-comment\">// use apiToken</span>\n        };\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">208</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-209 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>constant</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">model</span>(<span class=\"cm-string\">'introToAngularApp.services'</span>)\n    .<span class=\"cm-property\">const</span>(<span class=\"cm-string\">'apiToken'</span>, <span class=\"cm-string\">'123456789'</span>)\n    .<span class=\"cm-property\">config</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">apiToken</span>, <span class=\"cm-def\">oauthProvider</span>) {\n        <span class=\"cm-variable-2\">oauthProvider</span>.<span class=\"cm-property\">setToken</span>(<span class=\"cm-variable-2\">apiToken</span>);\n    });</pre>\n<ul>\n<li>You can have access to a constant in the config step of the application like you can with a <code>provider</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">209</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-210 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>$resource</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">210</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-211 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$resource</code></h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>REST APIs are very common these days</li>\n<li>REST = Representational State Transfer</li>\n<li><code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>, etc</li>\n<li>GET <code>api/user</code></li>\n<li>GET <code>api/user/:id</code></li>\n<li>POST <code>api/user/:id</code></li>\n<li>PUT <code>api/user/:id</code></li>\n<li>DELETE <code>api/user/:id</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">211</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-212 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$resource</code></h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp.services'</span>, [<span class=\"cm-string\">'ngResource'</span>])\n    .<span class=\"cm-property\">factory</span>(<span class=\"cm-string\">'Reservations'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$resource</span>) {\n        <span class=\"cm-keyword\">return</span> <span class=\"cm-variable-2\">$resource</span>(<span class=\"cm-string\">'/api/reservations/:id'</span>, {\n            <span class=\"cm-property\">id</span>: <span class=\"cm-string\">'@id'</span>\n        },\n        {\n           <span class=\"cm-string cm-property\">'update'</span>: { <span class=\"cm-property\">method</span>:<span class=\"cm-string\">'PUT'</span> }\n        });\n    })</pre>\n<ul>\n<li><code>ngResource</code> is a first party plugin to easily consume a RESTFull API</li>\n<li>The <code>:id</code> in the url gets set by the object you pass in as the second argument</li>\n<li>Can use that object to create default parameters or use the <code>@</code> to set it with a property on the incoming data</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">212</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-213 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$resource</code></h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\">  { <span class=\"cm-string\">'get'</span>:    {<span class=\"cm-variable\">method</span>:<span class=\"cm-string\">'GET'</span>},\n    <span class=\"cm-string\">'save'</span>:   {<span class=\"cm-variable\">method</span>:<span class=\"cm-string\">'POST'</span>},\n    <span class=\"cm-string\">'query'</span>:  {<span class=\"cm-variable\">method</span>:<span class=\"cm-string\">'GET'</span>, <span class=\"cm-variable\">isArray</span>:<span class=\"cm-atom\">true</span>},\n    <span class=\"cm-string\">'remove'</span>: {<span class=\"cm-variable\">method</span>:<span class=\"cm-string\">'DELETE'</span>},\n    <span class=\"cm-string\">'delete'</span>: {<span class=\"cm-variable\">method</span>:<span class=\"cm-string\">'DELETE'</span>} };</pre>\n<ul>\n<li><code>$resource</code> returns an object with the following API by default</li>\n<li>Easy to add other methods</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">213</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-214 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$resource</code></h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp.controllers'</span>) \n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'ReservationsCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">Reservations</span>, <span class=\"cm-def\">$scope</span>, <span class=\"cm-def\">$filter</span>) {\n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">self</span> = <span class=\"cm-keyword\">this</span>;\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">reservation</span> = {};\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">reservations</span> = <span class=\"cm-variable-2\">Reservations</span>.<span class=\"cm-property\">query</span>();\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">createReservation</span> = <span class=\"cm-keyword\">function</span>() {\n        };\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">edit</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">id</span>) {\n        };\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">remove</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">id</span>) {\n        };\n        };\n    })</pre>\n\n<ul>\n<li><code>Reservations.query()</code> will <code>GET</code> <code>/api/reservations</code></li>\n<li>Notice how there’s no <code>success</code> on the <code>query</code>.</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">214</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-215 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$resource</code> create</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">createReservation</span> = <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">if</span> (!<span class=\"cm-variable\">self</span>.<span class=\"cm-property\">reservation</span>.<span class=\"cm-property\">id</span>) {\n                <span class=\"cm-variable-2\">reservation</span> = <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Reservations</span>({\n                    <span class=\"cm-property\">time</span>: <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Date</span>(<span class=\"cm-variable-2\">date</span>),\n                    <span class=\"cm-property\">qty</span>: <span class=\"cm-variable\">self</span>.<span class=\"cm-property\">reservation</span>.<span class=\"cm-property\">qty</span>,\n                    <span class=\"cm-property\">name</span>: <span class=\"cm-variable\">self</span>.<span class=\"cm-property\">reservation</span>.<span class=\"cm-property\">name</span>\n                });\n\n            <span class=\"cm-variable-2\">reservation</span>.<span class=\"cm-property\">$save</span>().<span class=\"cm-property\">then</span>(<span class=\"cm-keyword\">function</span>() {\n                <span class=\"cm-variable\">self</span>.<span class=\"cm-property\">reservations</span> = <span class=\"cm-variable\">Reservations</span>.<span class=\"cm-property\">query</span>();\n            });\n        }\n};</pre>\n\n<ul>\n<li>Will <code>POST</code> to <code>/api/reservations/:id</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">215</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-216 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$resource</code> update</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">createReservation</span> = <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">if</span> (!<span class=\"cm-variable\">self</span>.<span class=\"cm-property\">reservation</span>.<span class=\"cm-property\">id</span>) {\n        }\n        <span class=\"cm-keyword\">else</span> {\n            <span class=\"cm-variable\">Reservations</span>.<span class=\"cm-property\">update</span>({\n                <span class=\"cm-property\">id</span>: <span class=\"cm-variable\">self</span>.<span class=\"cm-property\">reservation</span>.<span class=\"cm-property\">id</span>,\n                <span class=\"cm-property\">time</span>: <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Date</span>(<span class=\"cm-variable-2\">date</span>),\n                <span class=\"cm-property\">qty</span>: <span class=\"cm-variable\">self</span>.<span class=\"cm-property\">reservation</span>.<span class=\"cm-property\">qty</span>,\n                <span class=\"cm-property\">name</span>: <span class=\"cm-variable\">self</span>.<span class=\"cm-property\">reservation</span>.<span class=\"cm-property\">name</span>\n            }, <span class=\"cm-keyword\">function</span>() {\n                <span class=\"cm-variable\">self</span>.<span class=\"cm-property\">reservations</span> = <span class=\"cm-variable\">Reservations</span>.<span class=\"cm-property\">query</span>();\n            });\n        }\n};</pre>\n\n<ul>\n<li>Will <code>put</code> to <code>/api/reservations/:id</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">216</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-217 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1><code>$resource</code> delete</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">remove</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">id</span>) {\n    <span class=\"cm-variable\">Reservations</span>.<span class=\"cm-property\">remove</span>({\n        <span class=\"cm-property\">id</span>: <span class=\"cm-variable-2\">id</span>\n    }, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-variable\">self</span>.<span class=\"cm-property\">reservations</span> = <span class=\"cm-variable\">Reservations</span>.<span class=\"cm-property\">query</span>();\n\n        <span class=\"cm-variable\">self</span>.<span class=\"cm-property\">clear</span>();\n    });\n};</pre>\n\n<ul>\n<li>Will <code>DELETE</code> to <code>/api/reservations/:id</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">217</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-218 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Routing</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">218</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-219 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Routing</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>How to make an angular app a SPA?</li>\n<li>Uses hash changes or HTML5 push state</li>\n<li><code>$routeProvider</code> to configure routes</li>\n<li><code>$route</code> service to get current route</li>\n<li>What is it, why is it?</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">219</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-220 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Setup routing</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>It’s another extra module you ask for when you set up the app</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [<span class=\"cm-string\">'ngRoute'</span>])\n.<span class=\"cm-property\">config</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$routeProvider</span>) {\n    <span class=\"cm-variable-2\">$routeProvider</span>\n        .<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/'</span>, {\n            <span class=\"cm-property\">controller</span>: <span class=\"cm-string\">'MainCtrl'</span>,\n            <span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">'vm'</span>,\n            <span class=\"cm-property\">templateUrl</span>: <span class=\"cm-string\">'partials/main.html'</span>\n        })\n        .<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/contact'</span>, {\n            <span class=\"cm-property\">templateUrl</span>: <span class=\"cm-string\">'partials/contact.html'</span>,\n            <span class=\"cm-property\">controller</span>: <span class=\"cm-string\">'ContactCtrl'</span>,\n            <span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">'vm'</span>\n        })\n        .<span class=\"cm-property\">otherwise</span>({\n            <span class=\"cm-property\">redirectTo</span>: <span class=\"cm-string\">'/'</span>\n        });\n});</pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">220</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-221 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Setup routing</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [<span class=\"cm-string\">'ngRoute'</span>])</span>\n.<span class=\"cm-property\">config</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$routeProvider</span>) {\n    <span class=\"dim-line\"><span class=\"cm-variable-2\">$routeProvider</span></span>\n        <span class=\"dim-line\">.<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/'</span>, {</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controller</span>: <span class=\"cm-string\">'MainCtrl'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">'vm'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">templateUrl</span>: <span class=\"cm-string\">'partials/main.html'</span></span>\n        <span class=\"dim-line\">})</span>\n        <span class=\"dim-line\">.<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/contact'</span>, {</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">templateUrl</span>: <span class=\"cm-string\">'partials/contact.html'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controller</span>: <span class=\"cm-string\">'ContactCtrl'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">'vm'</span></span>\n        <span class=\"dim-line\">})</span>\n        <span class=\"dim-line\">.<span class=\"cm-property\">otherwise</span>({</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">redirectTo</span>: <span class=\"cm-string\">'/'</span></span>\n        <span class=\"dim-line\">});</span>\n<span class=\"dim-line\">});</span></pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">221</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-222 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Setup routing</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [<span class=\"cm-string\">'ngRoute'</span>])</span>\n<span class=\"dim-line\">.<span class=\"cm-property\">config</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$routeProvider</span>) {</span>\n    <span class=\"cm-variable-2\">$routeProvider</span>\n        .<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/'</span>, {\n            <span class=\"cm-property\">controller</span>: <span class=\"cm-string\">'MainCtrl'</span>,\n            <span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">'vm'</span>,\n            <span class=\"cm-property\">templateUrl</span>: <span class=\"cm-string\">'partials/main.html'</span>\n        })\n        <span class=\"dim-line\">.<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/contact'</span>, {</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">templateUrl</span>: <span class=\"cm-string\">'partials/contact.html'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controller</span>: <span class=\"cm-string\">'ContactCtrl'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">'vm'</span></span>\n        <span class=\"dim-line\">})</span>\n        <span class=\"dim-line\">.<span class=\"cm-property\">otherwise</span>({</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">redirectTo</span>: <span class=\"cm-string\">'/'</span></span>\n        <span class=\"dim-line\">});</span>\n<span class=\"dim-line\">});</span></pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">222</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-223 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Setup routing</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [<span class=\"cm-string\">'ngRoute'</span>])</span>\n<span class=\"dim-line\">.<span class=\"cm-property\">config</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$routeProvider</span>) {</span>\n    <span class=\"dim-line\"><span class=\"cm-variable-2\">$routeProvider</span></span>\n        <span class=\"dim-line\">.<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/'</span>, {</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controller</span>: <span class=\"cm-string\">'MainCtrl'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">'vm'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">templateUrl</span>: <span class=\"cm-string\">'partials/main.html'</span></span>\n        <span class=\"dim-line\">})</span>\n        .<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/contact'</span>, {\n            <span class=\"cm-property\">templateUrl</span>: <span class=\"cm-string\">'partials/contact.html'</span>,\n            <span class=\"cm-property\">controller</span>: <span class=\"cm-string\">'ContactCtrl'</span>,\n            <span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">'vm'</span>\n        })\n        <span class=\"dim-line\">.<span class=\"cm-property\">otherwise</span>({</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">redirectTo</span>: <span class=\"cm-string\">'/'</span></span>\n        <span class=\"dim-line\">});</span>\n<span class=\"dim-line\">});</span></pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">223</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-224 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Setup routing</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [<span class=\"cm-string\">'ngRoute'</span>])</span>\n<span class=\"dim-line\">.<span class=\"cm-property\">config</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$routeProvider</span>) {</span>\n    <span class=\"dim-line\"><span class=\"cm-variable-2\">$routeProvider</span></span>\n        <span class=\"dim-line\">.<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/'</span>, {</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controller</span>: <span class=\"cm-string\">'MainCtrl'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">'vm'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">templateUrl</span>: <span class=\"cm-string\">'partials/main.html'</span></span>\n        <span class=\"dim-line\">})</span>\n        <span class=\"dim-line\">.<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/contact'</span>, {</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">templateUrl</span>: <span class=\"cm-string\">'partials/contact.html'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controller</span>: <span class=\"cm-string\">'ContactCtrl'</span>,</span>\n            <span class=\"dim-line\"><span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">'vm'</span></span>\n        <span class=\"dim-line\">})</span>\n        .<span class=\"cm-property\">otherwise</span>({\n            <span class=\"cm-property\">redirectTo</span>: <span class=\"cm-string\">'/'</span>\n        });\n<span class=\"dim-line\">});</span></pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">224</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-225 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ng-view</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-view</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"container\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-comment\">&lt;!-- template renders here --&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Views render here</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">225</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-226 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Route Options</h1>\n\n\n<h2>template</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n    .<span class=\"cm-property\">config</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$routeProvider</span>) {\n        <span class=\"cm-variable-2\">$routeProvider</span>\n            .<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/menu'</span>, {\n                <span class=\"cm-property\">controller</span>: <span class=\"cm-string\">'MenuCtrl'</span>,\n                <span class=\"cm-property\">controllerAs</span>: <span class=\"cm-string\">'vm'</span>,\n                <span class=\"cm-property\">template</span>: <span class=\"cm-string\">'&lt;div&gt;Template {{vm.foo}}&lt;/div&gt;'</span>,\n            });\n    });</pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">226</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-227 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Route Options</h1>\n\n\n<h2>resolve</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n    .<span class=\"cm-property\">config</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$routeProvider</span>) {\n        <span class=\"cm-variable-2\">$routeProvider</span>\n            .<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/menu'</span>, {\n                <span class=\"cm-property\">resolve</span>: {\n                    <span class=\"cm-property\">list</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">Menu</span>, <span class=\"cm-def\">$q</span>) {\n                        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">dfd</span> = <span class=\"cm-variable-2\">$q</span>.<span class=\"cm-property\">defer</span>();\n                        \n                        <span class=\"cm-variable-2\">Menu</span>.<span class=\"cm-property\">list</span>().<span class=\"cm-property\">success</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">data</span>) {\n                            <span class=\"cm-variable\">dfd</span>.<span class=\"cm-property\">resolve</span>(<span class=\"cm-variable-2\">data</span>);\n                        });\n\n                        <span class=\"cm-keyword\">return</span> <span class=\"cm-variable-2\">dfd</span>.<span class=\"cm-property\">promise</span>;\n                    }\n                },\n            });\n    });</pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">227</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-228 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Route Options</h1>\n\n\n<h2>Resolve works with a promise</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">list</span>) {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">list</span> = <span class=\"cm-variable-2\">list</span>;\n    });</pre>\n\n<ul>\n<li>The resolve injects the data so you don’t have promises in the controller</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">228</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-229 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Route Options</h1>\n\n\n<h2>A few more options</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable-2\">$routeProvider</span>\n    .<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/menu'</span>, {\n        <span class=\"cm-property\">redirectTo</span>: <span class=\"cm-string\">'/redirect-somewhere'</span>,\n        <span class=\"cm-property\">reloadOnSearch</span>: <span class=\"cm-atom\">true</span>,\n        <span class=\"cm-property\">caseInsensitiveMath</span>: <span class=\"cm-atom\">false</span>\n    });</pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">229</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-230 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>$route service</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Can inject into controller</li>\n<li>Used with <code>ng-view</code> directive and <code>$routeParams</code></li>\n<li>Gives you the current “route” and all route configs</li>\n<li>Can listen for routing events</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">230</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-231 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Messaging</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">231</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-232 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>What is messaging?</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Event Driven messaging is a design pattern</li>\n<li>Allows you to listen for certain “events”</li>\n<li>When some event occurs, a message is published</li>\n<li>Any object interested can listen</li>\n<li>Decouples the application by not creating direct references</li>\n<li>Often referred too as “pub/sub” for publish/subscribe</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">232</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-233 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewbox=\"0 0 684 346\" enable-background=\"new 0 0 684 346\" xml:space=\"preserve\"> <g> <line fill=\"none\" stroke=\"#000000\" stroke-width=\"5\" stroke-miterlimit=\"10\" x1=\"270.111\" y1=\"213.625\" x2=\"325.077\" y2=\"130.716\"></line> <line fill=\"none\" stroke=\"#000000\" stroke-width=\"5\" stroke-miterlimit=\"10\" x1=\"432\" y1=\"211\" x2=\"372.969\" y2=\"124.944\"></line> <line fill=\"none\" stroke=\"#000000\" stroke-width=\"5\" stroke-miterlimit=\"10\" x1=\"612\" y1=\"211\" x2=\"395.366\" y2=\"103.924\"></line> <line fill=\"none\" stroke=\"#000000\" stroke-width=\"5\" stroke-miterlimit=\"10\" x1=\"102.543\" y1=\"218.818\" x2=\"303\" y2=\"103.924\"></line> <circle fill=\"#FFFFFF\" cx=\"72\" cy=\"274.5\" r=\"63.5\"></circle> <g> <path d=\"M34.268,265.418c1.085,0.624,2.713,1.166,4.422,1.166c2.143,0,3.337-1.004,3.337-2.496c0-1.384-0.922-2.197-3.255-3.038 c-3.012-1.085-4.938-2.687-4.938-5.317c0-2.984,2.496-5.264,6.457-5.264c1.98,0,3.446,0.435,4.395,0.923l-0.814,2.686 c-0.651-0.353-1.926-0.868-3.635-0.868c-2.116,0-3.039,1.14-3.039,2.197c0,1.411,1.058,2.062,3.5,3.012 c3.174,1.193,4.72,2.794,4.72,5.426c0,2.931-2.225,5.48-6.945,5.48c-1.926,0-3.934-0.543-4.938-1.14L34.268,265.418z\"></path> <path d=\"M50.82,263.383c0.082,2.388,1.954,3.418,4.069,3.418c1.546,0,2.659-0.217,3.663-0.597l0.488,2.307 c-1.139,0.461-2.713,0.813-4.612,0.813c-4.287,0-6.81-2.632-6.81-6.674c0-3.663,2.225-7.108,6.457-7.108 c4.286,0,5.697,3.527,5.697,6.43c0,0.624-0.054,1.112-0.109,1.411H50.82z M56.625,261.05c0.027-1.221-0.515-3.229-2.74-3.229 c-2.062,0-2.93,1.872-3.066,3.229H56.625z\"></path> <path d=\"M69.895,269.053l-0.217-1.465h-0.082c-0.814,1.031-2.197,1.764-3.907,1.764c-2.659,0-4.151-1.927-4.151-3.934 c0-3.338,2.957-5.02,7.841-4.992v-0.217c0-0.868-0.353-2.307-2.686-2.307c-1.302,0-2.659,0.407-3.554,0.977l-0.651-2.17 c0.977-0.597,2.686-1.167,4.775-1.167c4.232,0,5.453,2.687,5.453,5.562v4.775c0,1.193,0.054,2.36,0.19,3.174H69.895z M69.461,262.596c-2.36-0.054-4.612,0.462-4.612,2.469c0,1.303,0.841,1.899,1.899,1.899c1.33,0,2.306-0.868,2.604-1.817 c0.082-0.244,0.108-0.516,0.108-0.732V262.596z\"></path> <path d=\"M76.246,260.1c0-1.79-0.027-3.065-0.108-4.259h2.903l0.108,2.522h0.109c0.651-1.871,2.197-2.821,3.608-2.821 c0.326,0,0.516,0.027,0.787,0.082v3.146c-0.271-0.054-0.57-0.108-0.977-0.108c-1.601,0-2.686,1.031-2.984,2.523 c-0.055,0.298-0.109,0.65-0.109,1.03v6.837h-3.337V260.1z\"></path> <path d=\"M95.375,268.646c-0.706,0.325-2.089,0.678-3.744,0.678c-4.124,0-6.81-2.632-6.81-6.729c0-3.961,2.713-7.054,7.352-7.054 c1.221,0,2.469,0.271,3.229,0.624l-0.597,2.496c-0.543-0.244-1.33-0.516-2.523-0.516c-2.55,0-4.069,1.872-4.042,4.287 c0,2.713,1.763,4.259,4.042,4.259c1.167,0,1.98-0.244,2.632-0.516L95.375,268.646z\"></path> <path d=\"M97.846,249.791h3.364v7.867h0.054c0.407-0.624,0.95-1.14,1.655-1.52c0.651-0.38,1.438-0.597,2.279-0.597 c2.251,0,4.612,1.492,4.612,5.725v7.786h-3.337v-7.406c0-1.927-0.706-3.364-2.55-3.364c-1.302,0-2.225,0.868-2.577,1.872 c-0.109,0.271-0.136,0.624-0.136,1.004v7.895h-3.364V249.791z\"></path> <path d=\"M43.314,301.073c-0.787,0.407-2.523,0.814-4.721,0.814c-5.806,0-9.333-3.636-9.333-9.197c0-6.023,4.178-9.658,9.767-9.658 c2.197,0,3.771,0.461,4.449,0.813l-0.732,2.659c-0.868-0.38-2.062-0.706-3.581-0.706c-3.717,0-6.403,2.333-6.403,6.729 c0,4.016,2.36,6.593,6.375,6.593c1.356,0,2.767-0.271,3.635-0.679L43.314,301.073z\"></path> <path d=\"M58.158,294.888c0,4.856-3.418,7.026-6.783,7.026c-3.744,0-6.62-2.577-6.62-6.81c0-4.341,2.849-6.999,6.836-6.999 C55.526,288.105,58.158,290.872,58.158,294.888z M48.201,295.023c0,2.55,1.248,4.477,3.283,4.477c1.899,0,3.229-1.872,3.229-4.531 c0-2.062-0.922-4.422-3.201-4.422C49.151,290.547,48.201,292.826,48.201,295.023z\"></path> <path d=\"M60.901,292.338c0-1.52-0.027-2.795-0.108-3.935h2.93l0.163,1.98h0.082c0.569-1.03,2.007-2.278,4.205-2.278 c2.306,0,4.693,1.492,4.693,5.67v7.841h-3.337v-7.461c0-1.899-0.706-3.337-2.523-3.337c-1.33,0-2.252,0.949-2.604,1.953 c-0.109,0.299-0.136,0.705-0.136,1.085v7.76h-3.364V292.338z\"></path> <path d=\"M80.112,284.633v3.771h3.174v2.496h-3.174v5.833c0,1.601,0.434,2.441,1.709,2.441c0.57,0,1.004-0.081,1.302-0.162 l0.054,2.55c-0.488,0.19-1.356,0.326-2.415,0.326c-1.221,0-2.252-0.407-2.876-1.086c-0.705-0.76-1.031-1.953-1.031-3.689v-6.213 h-1.899v-2.496h1.899v-2.984L80.112,284.633z\"></path> <path d=\"M85.812,292.663c0-1.791-0.027-3.065-0.108-4.26h2.903l0.108,2.523h0.109c0.651-1.872,2.197-2.821,3.608-2.821 c0.326,0,0.516,0.026,0.787,0.081v3.147c-0.271-0.055-0.57-0.108-0.977-0.108c-1.601,0-2.686,1.03-2.984,2.522 c-0.055,0.299-0.109,0.651-0.109,1.031v6.837h-3.337V292.663z\"></path> <path d=\"M107.79,294.888c0,4.856-3.418,7.026-6.783,7.026c-3.744,0-6.62-2.577-6.62-6.81c0-4.341,2.849-6.999,6.836-6.999 C105.158,288.105,107.79,290.872,107.79,294.888z M97.833,295.023c0,2.55,1.248,4.477,3.283,4.477 c1.899,0,3.229-1.872,3.229-4.531c0-2.062-0.922-4.422-3.201-4.422C98.782,290.547,97.833,292.826,97.833,295.023z\"></path> <path d=\"M110.532,282.354h3.364v19.263h-3.364V282.354z\"></path> </g> <circle fill=\"#FFFFFF\" cx=\"252\" cy=\"274.5\" r=\"63.5\"></circle> <g> <path d=\"M211.88,268.012c1.248-0.218,3.12-0.38,5.046-0.38c2.631,0,4.422,0.434,5.643,1.465c1.003,0.841,1.573,2.116,1.573,3.662 c0,2.36-1.601,3.961-3.31,4.585v0.082c1.302,0.488,2.089,1.764,2.55,3.526c0.57,2.279,1.058,4.396,1.438,5.101h-3.445 c-0.271-0.542-0.706-2.034-1.221-4.313c-0.516-2.388-1.384-3.147-3.283-3.201h-1.682v7.515h-3.31V268.012z M215.19,276.097h1.98 c2.251,0,3.663-1.194,3.663-3.012c0-2.008-1.411-2.931-3.582-2.931c-1.058,0-1.736,0.082-2.062,0.163V276.097z\"></path> <path d=\"M229.626,280.383c0.082,2.388,1.954,3.418,4.069,3.418c1.547,0,2.659-0.217,3.663-0.597l0.489,2.307 c-1.14,0.461-2.713,0.813-4.612,0.813c-4.287,0-6.81-2.632-6.81-6.674c0-3.663,2.225-7.108,6.457-7.108 c4.286,0,5.697,3.527,5.697,6.43c0,0.624-0.054,1.112-0.109,1.411H229.626z M235.432,278.05c0.027-1.221-0.515-3.229-2.74-3.229 c-2.062,0-2.93,1.872-3.066,3.229H235.432z\"></path> <path d=\"M241.105,282.987c0.759,0.461,2.197,0.949,3.391,0.949c1.465,0,2.116-0.597,2.116-1.465c0-0.896-0.542-1.356-2.17-1.926 c-2.578-0.896-3.663-2.307-3.635-3.853c0-2.333,1.926-4.151,4.992-4.151c1.465,0,2.74,0.38,3.5,0.787l-0.651,2.36 c-0.57-0.326-1.628-0.76-2.794-0.76c-1.194,0-1.845,0.569-1.845,1.384c0,0.841,0.624,1.248,2.306,1.845 c2.387,0.868,3.5,2.089,3.527,4.042c0,2.388-1.872,4.124-5.372,4.124c-1.601,0-3.038-0.38-4.015-0.923L241.105,282.987z\"></path> <path d=\"M264.412,282.092c0,1.573,0.054,2.876,0.109,3.961h-2.93l-0.163-2.008h-0.055c-0.569,0.95-1.872,2.307-4.232,2.307 c-2.415,0-4.612-1.438-4.612-5.752v-7.759h3.337v7.189c0,2.197,0.706,3.608,2.469,3.608c1.33,0,2.198-0.95,2.55-1.791 c0.108-0.298,0.19-0.651,0.19-1.031v-7.976h3.337V282.092z\"></path> <path d=\"M268.023,266.791h3.364v19.262h-3.364V266.791z\"></path> <path d=\"M278.822,269.069v3.771h3.174v2.496h-3.174v5.833c0,1.601,0.434,2.441,1.709,2.441c0.57,0,1.004-0.081,1.302-0.163 l0.054,2.551c-0.488,0.189-1.356,0.325-2.415,0.325c-1.221,0-2.252-0.407-2.876-1.085c-0.705-0.76-1.031-1.953-1.031-3.689v-6.213 h-1.899v-2.496h1.899v-2.984L278.822,269.069z\"></path> <path d=\"M284.358,282.987c0.76,0.461,2.197,0.949,3.391,0.949c1.465,0,2.116-0.597,2.116-1.465c0-0.896-0.542-1.356-2.17-1.926 c-2.577-0.896-3.663-2.307-3.635-3.853c0-2.333,1.926-4.151,4.992-4.151c1.465,0,2.74,0.38,3.5,0.787l-0.651,2.36 c-0.57-0.326-1.628-0.76-2.794-0.76c-1.194,0-1.845,0.569-1.845,1.384c0,0.841,0.624,1.248,2.306,1.845 c2.387,0.868,3.5,2.089,3.527,4.042c0,2.388-1.872,4.124-5.372,4.124c-1.601,0-3.039-0.38-4.016-0.923L284.358,282.987z\"></path> </g> <circle fill=\"#FFFFFF\" cx=\"432\" cy=\"274.5\" r=\"63.5\"></circle> <g> <path d=\"M410.697,270.562h-5.209v-2.795h13.81v2.795h-5.264v15.491h-3.337V270.562z\"></path> <path d=\"M426.978,286.054l-0.217-1.465h-0.081c-0.814,1.03-2.197,1.763-3.907,1.763c-2.658,0-4.15-1.926-4.15-3.934 c0-3.337,2.957-5.019,7.841-4.992v-0.217c0-0.868-0.354-2.306-2.687-2.306c-1.302,0-2.658,0.406-3.554,0.977l-0.651-2.171 c0.977-0.597,2.686-1.166,4.775-1.166c4.231,0,5.453,2.686,5.453,5.562v4.774c0,1.194,0.054,2.36,0.189,3.175H426.978z M426.544,279.597c-2.36-0.055-4.612,0.461-4.612,2.469c0,1.302,0.841,1.899,1.899,1.899c1.329,0,2.306-0.868,2.604-1.818 c0.081-0.244,0.108-0.516,0.108-0.732V279.597z\"></path> <path d=\"M433.221,286.054c0.055-0.896,0.108-2.36,0.108-3.717v-15.546h3.337v7.868h0.055c0.813-1.275,2.252-2.116,4.232-2.116 c3.229,0,5.534,2.686,5.507,6.701c0,4.747-3.011,7.107-5.995,7.107c-1.709,0-3.229-0.65-4.179-2.278h-0.054l-0.163,1.98H433.221z M436.666,280.601c0,0.271,0.027,0.542,0.082,0.786c0.353,1.33,1.52,2.334,2.957,2.334c2.089,0,3.364-1.683,3.364-4.341 c0-2.334-1.112-4.232-3.337-4.232c-1.356,0-2.578,0.977-2.957,2.441c-0.055,0.244-0.109,0.543-0.109,0.868V280.601z\"></path> <path d=\"M449.041,282.987c0.76,0.462,2.197,0.95,3.391,0.95c1.465,0,2.116-0.597,2.116-1.465c0-0.896-0.542-1.356-2.17-1.927 c-2.577-0.896-3.663-2.306-3.636-3.853c0-2.333,1.927-4.15,4.992-4.15c1.465,0,2.74,0.38,3.5,0.786l-0.651,2.36 c-0.57-0.325-1.628-0.76-2.795-0.76c-1.193,0-1.845,0.57-1.845,1.384c0,0.842,0.624,1.248,2.307,1.845 c2.387,0.868,3.499,2.09,3.526,4.043c0,2.388-1.872,4.124-5.371,4.124c-1.602,0-3.039-0.38-4.016-0.923L449.041,282.987z\"></path> </g> <circle fill=\"#FFFFFF\" cx=\"612\" cy=\"274.5\" r=\"63.5\"></circle> <g> <path d=\"M573.386,268.012c1.465-0.244,3.337-0.38,5.317-0.38c3.418,0,5.779,0.706,7.461,2.116 c1.764,1.438,2.849,3.608,2.849,6.729c0,3.256-1.112,5.697-2.849,7.271c-1.818,1.655-4.721,2.496-8.275,2.496 c-1.953,0-3.418-0.108-4.503-0.244V268.012z M576.723,283.503c0.461,0.082,1.166,0.082,1.845,0.082 c4.341,0.026,6.919-2.36,6.919-7c0.026-4.042-2.307-6.349-6.484-6.349c-1.059,0-1.818,0.082-2.279,0.19V283.503z\"></path> <path d=\"M594.145,280.383c0.081,2.388,1.953,3.419,4.068,3.419c1.547,0,2.66-0.217,3.663-0.597l0.488,2.306 c-1.14,0.461-2.713,0.814-4.612,0.814c-4.286,0-6.809-2.632-6.809-6.675c0-3.662,2.225-7.107,6.457-7.107 c4.285,0,5.697,3.526,5.697,6.43c0,0.624-0.055,1.112-0.109,1.41H594.145z M599.949,278.05c0.027-1.221-0.515-3.229-2.739-3.229 c-2.062,0-2.931,1.872-3.065,3.229H599.949z\"></path> <path d=\"M609.611,269.07v3.771h3.174v2.496h-3.174v5.833c0,1.601,0.434,2.441,1.709,2.441c0.57,0,1.004-0.081,1.303-0.162 l0.054,2.55c-0.488,0.19-1.356,0.326-2.415,0.326c-1.221,0-2.252-0.407-2.875-1.086c-0.705-0.76-1.031-1.953-1.031-3.689v-6.213 h-1.898v-2.496h1.898v-2.984L609.611,269.07z\"></path> <path d=\"M622.744,286.054l-0.217-1.465h-0.082c-0.814,1.03-2.197,1.763-3.906,1.763c-2.659,0-4.151-1.926-4.151-3.934 c0-3.337,2.957-5.019,7.841-4.992v-0.217c0-0.868-0.354-2.306-2.686-2.306c-1.303,0-2.659,0.406-3.555,0.977l-0.65-2.171 c0.977-0.597,2.686-1.166,4.774-1.166c4.231,0,5.453,2.686,5.453,5.562v4.774c0,1.194,0.054,2.36,0.19,3.175H622.744z M622.31,279.597c-2.36-0.055-4.612,0.461-4.612,2.469c0,1.302,0.842,1.899,1.899,1.899c1.329,0,2.306-0.868,2.604-1.818 c0.082-0.244,0.108-0.516,0.108-0.732V279.597z\"></path> <path d=\"M632.649,269.151c0,1.004-0.732,1.791-1.899,1.791c-1.112,0-1.845-0.787-1.845-1.791c0-1.031,0.76-1.817,1.872-1.817 C631.917,267.334,632.622,268.12,632.649,269.151z M629.096,286.054v-13.213h3.363v13.213H629.096z\"></path> <path d=\"M636.041,266.791h3.365v19.263h-3.365V266.791z\"></path> <path d=\"M642.853,282.987c0.76,0.462,2.197,0.95,3.392,0.95c1.465,0,2.115-0.597,2.115-1.465c0-0.896-0.542-1.356-2.17-1.927 c-2.577-0.896-3.662-2.306-3.635-3.853c0-2.333,1.926-4.15,4.991-4.15c1.465,0,2.74,0.38,3.5,0.786l-0.651,2.36 c-0.57-0.325-1.628-0.76-2.795-0.76c-1.193,0-1.844,0.57-1.844,1.384c0,0.842,0.623,1.248,2.306,1.845 c2.388,0.868,3.499,2.09,3.526,4.043c0,2.388-1.871,4.124-5.371,4.124c-1.602,0-3.039-0.38-4.016-0.923L642.853,282.987z\"></path> </g> <circle fill=\"#FFFFFF\" cx=\"348\" cy=\"71.5\" r=\"63.5\"></circle> <g> <path d=\"M329.153,72.872l-1.574,5.182h-3.445l5.86-18.286h4.26l5.941,18.286h-3.581l-1.655-5.182H329.153z M334.389,70.348 l-1.438-4.503c-0.353-1.112-0.651-2.36-0.922-3.418h-0.055c-0.271,1.058-0.542,2.333-0.868,3.418l-1.411,4.503H334.389z\"></path> <path d=\"M342.478,69.236c0-1.736-0.054-3.147-0.108-4.395h2.93l0.163,2.035h0.054c0.977-1.492,2.523-2.333,4.531-2.333 c3.038,0,5.562,2.604,5.562,6.728c0,4.775-3.012,7.081-6.022,7.081c-1.655,0-3.039-0.705-3.718-1.763h-0.054v6.836h-3.337V69.236z M345.814,72.519c0,0.326,0.027,0.624,0.108,0.922c0.325,1.356,1.52,2.333,2.93,2.333c2.116,0,3.364-1.764,3.364-4.368 c0-2.333-1.14-4.232-3.282-4.232c-1.384,0-2.659,1.004-2.984,2.469c-0.082,0.271-0.136,0.569-0.136,0.841V72.519z\"></path> <path d=\"M358.352,69.236c0-1.736-0.054-3.147-0.108-4.395h2.931l0.162,2.035h0.055c0.977-1.492,2.522-2.333,4.53-2.333 c3.039,0,5.562,2.604,5.562,6.728c0,4.775-3.011,7.081-6.022,7.081c-1.655,0-3.038-0.705-3.717-1.763h-0.055v6.836h-3.337V69.236z M361.688,72.519c0,0.326,0.027,0.624,0.109,0.922c0.325,1.356,1.519,2.333,2.93,2.333c2.116,0,3.364-1.764,3.364-4.368 c0-2.333-1.14-4.232-3.283-4.232c-1.384,0-2.658,1.004-2.984,2.469c-0.081,0.271-0.136,0.569-0.136,0.841V72.519z\"></path> </g> </g> </svg>\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">233</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-234 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewbox=\"0 0 859 314\" enable-background=\"new 0 0 859 314\" xml:space=\"preserve\"> <g> <line fill=\"none\" stroke=\"#000000\" stroke-width=\"5\" stroke-miterlimit=\"10\" x1=\"72.5\" y1=\"175\" x2=\"72.5\" y2=\"56\"></line> <circle fill=\"#FFFFFF\" cx=\"246\" cy=\"238.5\" r=\"63.5\"></circle> <g> <path d=\"M208.268,229.418c1.085,0.624,2.713,1.166,4.422,1.166c2.143,0,3.337-1.004,3.337-2.496c0-1.384-0.922-2.197-3.255-3.038 c-3.012-1.085-4.938-2.687-4.938-5.317c0-2.984,2.496-5.264,6.457-5.264c1.98,0,3.446,0.435,4.395,0.923l-0.814,2.686 c-0.651-0.353-1.926-0.868-3.635-0.868c-2.116,0-3.039,1.14-3.039,2.197c0,1.411,1.058,2.062,3.5,3.012 c3.174,1.193,4.72,2.794,4.72,5.426c0,2.931-2.225,5.48-6.945,5.48c-1.926,0-3.934-0.543-4.938-1.14L208.268,229.418z\"></path> <path d=\"M224.82,227.383c0.082,2.388,1.954,3.418,4.069,3.418c1.546,0,2.659-0.217,3.663-0.597l0.488,2.307 c-1.139,0.461-2.713,0.813-4.612,0.813c-4.287,0-6.81-2.632-6.81-6.674c0-3.663,2.225-7.108,6.457-7.108 c4.286,0,5.697,3.527,5.697,6.43c0,0.624-0.054,1.112-0.109,1.411H224.82z M230.625,225.05c0.027-1.221-0.515-3.229-2.74-3.229 c-2.062,0-2.93,1.872-3.066,3.229H230.625z\"></path> <path d=\"M243.895,233.053l-0.217-1.465h-0.082c-0.814,1.031-2.197,1.764-3.907,1.764c-2.659,0-4.151-1.927-4.151-3.934 c0-3.338,2.957-5.02,7.841-4.992v-0.217c0-0.868-0.353-2.307-2.686-2.307c-1.302,0-2.659,0.407-3.554,0.977l-0.651-2.17 c0.977-0.597,2.686-1.167,4.775-1.167c4.232,0,5.453,2.687,5.453,5.562v4.775c0,1.193,0.054,2.36,0.19,3.174H243.895z M243.461,226.596c-2.36-0.054-4.612,0.462-4.612,2.469c0,1.303,0.841,1.899,1.899,1.899c1.33,0,2.306-0.868,2.604-1.817 c0.082-0.244,0.108-0.516,0.108-0.732V226.596z\"></path> <path d=\"M250.246,224.1c0-1.79-0.027-3.065-0.108-4.259h2.903l0.108,2.522h0.109c0.651-1.871,2.197-2.821,3.608-2.821 c0.326,0,0.516,0.027,0.787,0.082v3.146c-0.271-0.054-0.57-0.108-0.977-0.108c-1.601,0-2.686,1.031-2.984,2.523 c-0.055,0.298-0.109,0.65-0.109,1.03v6.837h-3.337V224.1z\"></path> <path d=\"M269.375,232.646c-0.706,0.325-2.089,0.678-3.744,0.678c-4.124,0-6.81-2.632-6.81-6.729c0-3.961,2.713-7.054,7.352-7.054 c1.221,0,2.469,0.271,3.229,0.624l-0.597,2.496c-0.543-0.244-1.33-0.516-2.523-0.516c-2.55,0-4.069,1.872-4.042,4.287 c0,2.713,1.763,4.259,4.042,4.259c1.167,0,1.98-0.244,2.632-0.516L269.375,232.646z\"></path> <path d=\"M271.846,213.791h3.364v7.867h0.054c0.407-0.624,0.95-1.14,1.655-1.52c0.651-0.38,1.438-0.597,2.279-0.597 c2.251,0,4.612,1.492,4.612,5.725v7.786h-3.337v-7.406c0-1.927-0.706-3.364-2.55-3.364c-1.302,0-2.225,0.868-2.577,1.872 c-0.109,0.271-0.136,0.624-0.136,1.004v7.895h-3.364V213.791z\"></path> <path d=\"M217.314,265.073c-0.787,0.407-2.523,0.814-4.721,0.814c-5.806,0-9.333-3.636-9.333-9.197 c0-6.023,4.178-9.658,9.767-9.658c2.197,0,3.771,0.461,4.449,0.813l-0.732,2.659c-0.868-0.38-2.062-0.706-3.581-0.706 c-3.717,0-6.403,2.333-6.403,6.729c0,4.016,2.36,6.593,6.375,6.593c1.356,0,2.767-0.271,3.635-0.679L217.314,265.073z\"></path> <path d=\"M232.158,258.888c0,4.856-3.418,7.026-6.783,7.026c-3.744,0-6.62-2.577-6.62-6.81c0-4.341,2.849-6.999,6.836-6.999 C229.526,252.105,232.158,254.872,232.158,258.888z M222.201,259.023c0,2.55,1.248,4.477,3.283,4.477 c1.899,0,3.229-1.872,3.229-4.531c0-2.062-0.922-4.422-3.201-4.422C223.151,254.547,222.201,256.826,222.201,259.023z\"></path> <path d=\"M234.901,256.338c0-1.52-0.027-2.795-0.108-3.935h2.93l0.163,1.98h0.082c0.569-1.03,2.007-2.278,4.205-2.278 c2.306,0,4.693,1.492,4.693,5.67v7.841h-3.337v-7.461c0-1.899-0.706-3.337-2.523-3.337c-1.33,0-2.252,0.949-2.604,1.953 c-0.109,0.299-0.136,0.705-0.136,1.085v7.76h-3.364V256.338z\"></path> <path d=\"M254.112,248.633v3.771h3.174v2.496h-3.174v5.833c0,1.601,0.434,2.441,1.709,2.441c0.57,0,1.004-0.081,1.302-0.162 l0.054,2.55c-0.488,0.19-1.356,0.326-2.415,0.326c-1.221,0-2.252-0.407-2.876-1.086c-0.705-0.76-1.031-1.953-1.031-3.689v-6.213 h-1.899v-2.496h1.899v-2.984L254.112,248.633z\"></path> <path d=\"M259.812,256.663c0-1.791-0.027-3.065-0.108-4.26h2.903l0.108,2.523h0.109c0.651-1.872,2.197-2.821,3.608-2.821 c0.326,0,0.516,0.026,0.787,0.081v3.147c-0.271-0.055-0.57-0.108-0.977-0.108c-1.601,0-2.686,1.03-2.984,2.522 c-0.055,0.299-0.109,0.651-0.109,1.031v6.837h-3.337V256.663z\"></path> <path d=\"M281.79,258.888c0,4.856-3.418,7.026-6.783,7.026c-3.744,0-6.62-2.577-6.62-6.81c0-4.341,2.849-6.999,6.836-6.999 C279.158,252.105,281.79,254.872,281.79,258.888z M271.833,259.023c0,2.55,1.248,4.477,3.283,4.477 c1.899,0,3.229-1.872,3.229-4.531c0-2.062-0.922-4.422-3.201-4.422C272.782,254.547,271.833,256.826,271.833,259.023z\"></path> <path d=\"M284.532,246.354h3.364v19.263h-3.364V246.354z\"></path> </g> <circle fill=\"#FFFFFF\" cx=\"426\" cy=\"238.5\" r=\"63.5\"></circle> <g> <path d=\"M385.88,232.012c1.248-0.218,3.12-0.38,5.046-0.38c2.631,0,4.422,0.434,5.643,1.465c1.003,0.841,1.573,2.116,1.573,3.662 c0,2.36-1.601,3.961-3.31,4.585v0.082c1.302,0.488,2.089,1.764,2.55,3.526c0.57,2.279,1.058,4.396,1.438,5.101h-3.445 c-0.271-0.542-0.706-2.034-1.221-4.313c-0.516-2.388-1.384-3.147-3.283-3.201h-1.682v7.515h-3.31V232.012z M389.19,240.097h1.98 c2.251,0,3.663-1.194,3.663-3.012c0-2.008-1.411-2.931-3.582-2.931c-1.058,0-1.736,0.082-2.062,0.163V240.097z\"></path> <path d=\"M403.626,244.383c0.082,2.388,1.954,3.418,4.069,3.418c1.547,0,2.659-0.217,3.663-0.597l0.489,2.307 c-1.14,0.461-2.713,0.813-4.612,0.813c-4.287,0-6.81-2.632-6.81-6.674c0-3.663,2.225-7.108,6.457-7.108 c4.286,0,5.697,3.527,5.697,6.43c0,0.624-0.054,1.112-0.109,1.411H403.626z M409.432,242.05c0.027-1.221-0.515-3.229-2.74-3.229 c-2.062,0-2.93,1.872-3.066,3.229H409.432z\"></path> <path d=\"M415.105,246.987c0.759,0.461,2.197,0.949,3.391,0.949c1.465,0,2.116-0.597,2.116-1.465c0-0.896-0.542-1.356-2.17-1.926 c-2.578-0.896-3.663-2.307-3.635-3.853c0-2.333,1.926-4.151,4.992-4.151c1.465,0,2.74,0.38,3.5,0.787l-0.651,2.36 c-0.57-0.326-1.628-0.76-2.794-0.76c-1.194,0-1.845,0.569-1.845,1.384c0,0.841,0.624,1.248,2.306,1.845 c2.387,0.868,3.5,2.089,3.527,4.042c0,2.388-1.872,4.124-5.372,4.124c-1.601,0-3.038-0.38-4.015-0.923L415.105,246.987z\"></path> <path d=\"M438.411,246.092c0,1.573,0.055,2.876,0.109,3.961h-2.931l-0.162-2.008h-0.055c-0.569,0.95-1.872,2.307-4.232,2.307 c-2.414,0-4.612-1.438-4.612-5.752v-7.759h3.337v7.189c0,2.197,0.706,3.608,2.468,3.608c1.33,0,2.198-0.95,2.551-1.791 c0.108-0.298,0.189-0.651,0.189-1.031v-7.976h3.337V246.092z\"></path> <path d=\"M442.022,230.791h3.364v19.262h-3.364V230.791z\"></path> <path d=\"M452.821,233.069v3.771h3.175v2.496h-3.175v5.833c0,1.601,0.435,2.441,1.71,2.441c0.569,0,1.004-0.081,1.302-0.163 l0.055,2.551c-0.488,0.189-1.356,0.325-2.415,0.325c-1.221,0-2.252-0.407-2.876-1.085c-0.705-0.76-1.03-1.953-1.03-3.689v-6.213 h-1.899v-2.496h1.899v-2.984L452.821,233.069z\"></path> <path d=\"M458.358,246.987c0.76,0.461,2.197,0.949,3.391,0.949c1.465,0,2.116-0.597,2.116-1.465c0-0.896-0.542-1.356-2.17-1.926 c-2.577-0.896-3.663-2.307-3.636-3.853c0-2.333,1.927-4.151,4.992-4.151c1.465,0,2.74,0.38,3.5,0.787l-0.651,2.36 c-0.57-0.326-1.628-0.76-2.795-0.76c-1.193,0-1.845,0.569-1.845,1.384c0,0.841,0.624,1.248,2.307,1.845 c2.387,0.868,3.499,2.089,3.526,4.042c0,2.388-1.872,4.124-5.371,4.124c-1.602,0-3.039-0.38-4.016-0.923L458.358,246.987z\"></path> </g> <circle fill=\"#FFFFFF\" cx=\"606\" cy=\"238.5\" r=\"63.5\"></circle> <g> <path d=\"M584.697,234.562h-5.209v-2.795h13.81v2.795h-5.263v15.491h-3.338V234.562z\"></path> <path d=\"M600.979,250.054l-0.217-1.465h-0.082c-0.814,1.03-2.197,1.763-3.906,1.763c-2.659,0-4.151-1.926-4.151-3.934 c0-3.337,2.957-5.019,7.841-4.992v-0.217c0-0.868-0.354-2.306-2.686-2.306c-1.303,0-2.659,0.406-3.555,0.977l-0.65-2.171 c0.977-0.597,2.686-1.166,4.774-1.166c4.231,0,5.453,2.686,5.453,5.562v4.774c0,1.194,0.054,2.36,0.19,3.175H600.979z M600.544,243.597c-2.36-0.055-4.612,0.461-4.612,2.469c0,1.302,0.842,1.899,1.899,1.899c1.329,0,2.306-0.868,2.604-1.818 c0.082-0.244,0.108-0.516,0.108-0.732V243.597z\"></path> <path d=\"M607.221,250.054c0.055-0.896,0.109-2.36,0.109-3.717v-15.546h3.336v7.868h0.055c0.814-1.275,2.252-2.116,4.232-2.116 c3.229,0,5.535,2.686,5.508,6.701c0,4.747-3.012,7.107-5.996,7.107c-1.709,0-3.229-0.65-4.178-2.278h-0.055l-0.162,1.98H607.221z M610.666,244.601c0,0.271,0.027,0.542,0.082,0.786c0.353,1.33,1.52,2.334,2.957,2.334c2.09,0,3.364-1.683,3.364-4.341 c0-2.334-1.112-4.232-3.337-4.232c-1.356,0-2.578,0.977-2.957,2.441c-0.055,0.244-0.109,0.543-0.109,0.868V244.601z\"></path> <path d=\"M623.041,246.987c0.76,0.462,2.197,0.95,3.391,0.95c1.465,0,2.117-0.597,2.117-1.465c0-0.896-0.543-1.356-2.171-1.927 c-2.577-0.896-3.663-2.306-3.636-3.853c0-2.333,1.927-4.15,4.992-4.15c1.465,0,2.74,0.38,3.5,0.786l-0.651,2.36 c-0.569-0.325-1.628-0.76-2.794-0.76c-1.194,0-1.846,0.57-1.846,1.384c0,0.842,0.625,1.248,2.307,1.845 c2.387,0.868,3.5,2.09,3.527,4.043c0,2.388-1.873,4.124-5.372,4.124c-1.601,0-3.039-0.38-4.016-0.923L623.041,246.987z\"></path> </g> <circle fill=\"#FFFFFF\" cx=\"786\" cy=\"238.5\" r=\"63.5\"></circle> <g> <path d=\"M747.386,232.012c1.465-0.244,3.337-0.38,5.317-0.38c3.418,0,5.779,0.706,7.461,2.116 c1.764,1.438,2.849,3.608,2.849,6.729c0,3.256-1.112,5.697-2.849,7.271c-1.818,1.655-4.721,2.496-8.275,2.496 c-1.953,0-3.418-0.108-4.503-0.244V232.012z M750.723,247.503c0.461,0.082,1.166,0.082,1.845,0.082 c4.341,0.026,6.919-2.36,6.919-7c0.026-4.042-2.307-6.349-6.484-6.349c-1.059,0-1.818,0.082-2.279,0.19V247.503z\"></path> <path d=\"M768.145,244.383c0.081,2.388,1.953,3.419,4.068,3.419c1.547,0,2.66-0.217,3.663-0.597l0.488,2.306 c-1.14,0.461-2.713,0.814-4.612,0.814c-4.286,0-6.809-2.632-6.809-6.675c0-3.662,2.225-7.107,6.457-7.107 c4.285,0,5.697,3.526,5.697,6.43c0,0.624-0.055,1.112-0.109,1.41H768.145z M773.949,242.05c0.027-1.221-0.515-3.229-2.739-3.229 c-2.062,0-2.931,1.872-3.065,3.229H773.949z\"></path> <path d=\"M783.611,233.07v3.771h3.174v2.496h-3.174v5.833c0,1.601,0.434,2.441,1.709,2.441c0.57,0,1.004-0.081,1.303-0.162 l0.054,2.55c-0.488,0.19-1.356,0.326-2.415,0.326c-1.221,0-2.252-0.407-2.875-1.086c-0.705-0.76-1.031-1.953-1.031-3.689v-6.213 h-1.898v-2.496h1.898v-2.984L783.611,233.07z\"></path> <path d=\"M796.744,250.054l-0.217-1.465h-0.082c-0.814,1.03-2.197,1.763-3.906,1.763c-2.659,0-4.151-1.926-4.151-3.934 c0-3.337,2.957-5.019,7.841-4.992v-0.217c0-0.868-0.354-2.306-2.686-2.306c-1.303,0-2.659,0.406-3.555,0.977l-0.65-2.171 c0.977-0.597,2.686-1.166,4.774-1.166c4.231,0,5.453,2.686,5.453,5.562v4.774c0,1.194,0.054,2.36,0.19,3.175H796.744z M796.31,243.597c-2.36-0.055-4.612,0.461-4.612,2.469c0,1.302,0.842,1.899,1.899,1.899c1.329,0,2.306-0.868,2.604-1.818 c0.082-0.244,0.108-0.516,0.108-0.732V243.597z\"></path> <path d=\"M806.649,233.151c0,1.004-0.732,1.791-1.899,1.791c-1.112,0-1.845-0.787-1.845-1.791c0-1.031,0.76-1.817,1.872-1.817 C805.917,231.334,806.622,232.12,806.649,233.151z M803.096,250.054v-13.213h3.363v13.213H803.096z\"></path> <path d=\"M810.041,230.791h3.365v19.263h-3.365V230.791z\"></path> <path d=\"M816.853,246.987c0.76,0.462,2.197,0.95,3.392,0.95c1.465,0,2.115-0.597,2.115-1.465c0-0.896-0.542-1.356-2.17-1.927 c-2.577-0.896-3.662-2.306-3.635-3.853c0-2.333,1.926-4.15,4.991-4.15c1.465,0,2.74,0.38,3.5,0.786l-0.651,2.36 c-0.57-0.325-1.628-0.76-2.795-0.76c-1.193,0-1.844,0.57-1.844,1.384c0,0.842,0.623,1.248,2.306,1.845 c2.388,0.868,3.499,2.09,3.526,4.043c0,2.388-1.871,4.124-5.371,4.124c-1.602,0-3.039-0.38-4.016-0.923L816.853,246.987z\"></path> </g> <circle fill=\"#FFFFFF\" cx=\"73\" cy=\"239.5\" r=\"63.5\"></circle> <g> <path d=\"M54.153,240.871l-1.574,5.182h-3.445l5.86-18.285h4.26l5.941,18.285h-3.581l-1.655-5.182H54.153z M59.389,238.348 l-1.438-4.503c-0.353-1.112-0.651-2.36-0.922-3.419h-0.055c-0.271,1.059-0.542,2.333-0.868,3.419l-1.411,4.503H59.389z\"></path> <path d=\"M67.478,237.235c0-1.736-0.054-3.146-0.108-4.395h2.93l0.163,2.034h0.054c0.977-1.492,2.523-2.333,4.531-2.333 c3.039,0,5.562,2.604,5.562,6.729c0,4.774-3.011,7.081-6.022,7.081c-1.655,0-3.039-0.705-3.717-1.764h-0.054v6.837h-3.337V237.235 z M70.814,240.519c0,0.325,0.027,0.624,0.109,0.922c0.325,1.356,1.519,2.334,2.93,2.334c2.116,0,3.364-1.764,3.364-4.368 c0-2.333-1.14-4.232-3.283-4.232c-1.384,0-2.659,1.004-2.984,2.469c-0.082,0.271-0.136,0.569-0.136,0.841V240.519z\"></path> <path d=\"M83.352,237.235c0-1.736-0.054-3.146-0.108-4.395h2.93l0.163,2.034h0.054c0.977-1.492,2.523-2.333,4.531-2.333 c3.039,0,5.562,2.604,5.562,6.729c0,4.774-3.011,7.081-6.023,7.081c-1.655,0-3.038-0.705-3.717-1.764h-0.054v6.837h-3.337V237.235 z M86.689,240.519c0,0.325,0.027,0.624,0.109,0.922c0.325,1.356,1.519,2.334,2.93,2.334c2.116,0,3.364-1.764,3.364-4.368 c0-2.333-1.14-4.232-3.283-4.232c-1.384,0-2.659,1.004-2.984,2.469c-0.082,0.271-0.136,0.569-0.136,0.841V240.519z\"></path> </g> <line fill=\"none\" stroke=\"#000000\" stroke-width=\"5\" stroke-miterlimit=\"10\" x1=\"245.5\" y1=\"175\" x2=\"245.5\" y2=\"56\"></line> <line fill=\"none\" stroke=\"#000000\" stroke-width=\"5\" stroke-miterlimit=\"10\" x1=\"426.5\" y1=\"175\" x2=\"426.5\" y2=\"56\"></line> <line fill=\"none\" stroke=\"#000000\" stroke-width=\"5\" stroke-miterlimit=\"10\" x1=\"607.5\" y1=\"175\" x2=\"607.5\" y2=\"56\"></line> <line fill=\"none\" stroke=\"#000000\" stroke-width=\"5\" stroke-miterlimit=\"10\" x1=\"788.5\" y1=\"175\" x2=\"788.5\" y2=\"56\"></line> <rect x=\"38\" y=\"11\" fill=\"#FFFFFF\" width=\"772\" height=\"46\"></rect> <g> <path d=\"M368.09,34.592c-0.108-2.36-0.244-5.209-0.217-7.678h-0.082c-0.597,2.225-1.356,4.693-2.17,7l-2.659,7.922h-2.578 l-2.441-7.813c-0.706-2.333-1.356-4.83-1.845-7.108h-0.054c-0.081,2.388-0.19,5.291-0.325,7.787l-0.407,7.352h-3.12l1.221-18.286 h4.395l2.387,7.352c0.651,2.144,1.221,4.314,1.682,6.349h0.082c0.488-1.98,1.112-4.232,1.818-6.375l2.523-7.325h4.341 l1.058,18.286h-3.256L368.09,34.592z\"></path> <path d=\"M377.454,36.383c0.082,2.388,1.954,3.418,4.069,3.418c1.547,0,2.659-0.217,3.663-0.597l0.489,2.306 c-1.14,0.461-2.713,0.814-4.612,0.814c-4.287,0-6.81-2.632-6.81-6.674c0-3.663,2.225-7.108,6.457-7.108 c4.286,0,5.697,3.527,5.697,6.43c0,0.624-0.054,1.112-0.109,1.411H377.454z M383.26,34.05c0.027-1.221-0.515-3.229-2.74-3.229 c-2.062,0-2.93,1.872-3.066,3.229H383.26z\"></path> <path d=\"M388.933,38.987c0.759,0.461,2.197,0.95,3.391,0.95c1.465,0,2.116-0.597,2.116-1.465c0-0.896-0.542-1.356-2.17-1.926 c-2.578-0.896-3.663-2.306-3.635-3.853c0-2.333,1.926-4.151,4.992-4.151c1.465,0,2.74,0.38,3.5,0.787l-0.651,2.36 c-0.57-0.326-1.628-0.76-2.794-0.76c-1.194,0-1.845,0.57-1.845,1.384c0,0.841,0.624,1.248,2.306,1.845 c2.387,0.868,3.5,2.089,3.527,4.042c0,2.388-1.872,4.124-5.372,4.124c-1.601,0-3.038-0.38-4.015-0.923L388.933,38.987z\"></path> <path d=\"M400.249,38.987c0.759,0.461,2.197,0.95,3.391,0.95c1.465,0,2.116-0.597,2.116-1.465c0-0.896-0.542-1.356-2.17-1.926 c-2.578-0.896-3.663-2.306-3.635-3.853c0-2.333,1.926-4.151,4.992-4.151c1.465,0,2.74,0.38,3.5,0.787l-0.651,2.36 c-0.57-0.326-1.628-0.76-2.794-0.76c-1.194,0-1.845,0.57-1.845,1.384c0,0.841,0.624,1.248,2.306,1.845 c2.387,0.868,3.5,2.089,3.527,4.042c0,2.388-1.872,4.124-5.372,4.124c-1.601,0-3.038-0.38-4.015-0.923L400.249,38.987z\"></path> <path d=\"M419.16,42.053l-0.217-1.465h-0.082c-0.814,1.031-2.198,1.763-3.907,1.763c-2.659,0-4.151-1.926-4.151-3.934 c0-3.337,2.957-5.019,7.841-4.992v-0.217c0-0.868-0.353-2.306-2.686-2.306c-1.302,0-2.659,0.407-3.554,0.977l-0.651-2.17 c0.977-0.597,2.686-1.167,4.775-1.167c4.232,0,5.453,2.686,5.453,5.562v4.775c0,1.194,0.054,2.36,0.19,3.174H419.16z M418.726,35.596c-2.36-0.054-4.612,0.461-4.612,2.469c0,1.302,0.841,1.899,1.899,1.899c1.33,0,2.306-0.868,2.604-1.818 c0.082-0.244,0.108-0.516,0.108-0.732V35.596z\"></path> <path d=\"M437.584,28.841c-0.055,0.896-0.108,1.98-0.108,3.798v7.488c0,2.767-0.57,4.748-1.953,5.996 c-1.384,1.221-3.283,1.601-5.101,1.601c-1.682,0-3.473-0.353-4.612-1.058l0.732-2.523c0.841,0.488,2.252,1.004,3.853,1.004 c2.17,0,3.798-1.14,3.798-3.988v-1.139h-0.054c-0.76,1.167-2.116,1.953-3.853,1.953c-3.283,0-5.616-2.713-5.616-6.457 c0-4.341,2.821-6.972,5.996-6.972c2.008,0,3.201,0.977,3.825,2.062h0.054l0.136-1.764H437.584z M434.139,34.131 c0-0.298-0.027-0.624-0.108-0.896c-0.354-1.221-1.303-2.143-2.713-2.143c-1.872,0-3.256,1.627-3.256,4.313 c0,2.252,1.14,4.07,3.229,4.07c1.248,0,2.333-0.814,2.713-2.008c0.081-0.353,0.136-0.814,0.136-1.194V34.131z\"></path> <path d=\"M443.42,36.383c0.082,2.388,1.954,3.418,4.069,3.418c1.547,0,2.659-0.217,3.663-0.597l0.488,2.306 c-1.14,0.461-2.713,0.814-4.612,0.814c-4.286,0-6.81-2.632-6.81-6.674c0-3.663,2.225-7.108,6.457-7.108 c4.286,0,5.697,3.527,5.697,6.43c0,0.624-0.054,1.112-0.108,1.411H443.42z M449.226,34.05c0.027-1.221-0.515-3.229-2.739-3.229 c-2.062,0-2.931,1.872-3.066,3.229H449.226z\"></path> <path d=\"M460.814,24.012c1.058-0.217,2.984-0.38,4.856-0.38c2.469,0,3.987,0.298,5.235,1.167c1.14,0.678,1.899,1.872,1.899,3.418 c0,1.682-1.058,3.229-3.038,3.961v0.054c1.926,0.488,3.689,2.008,3.689,4.531c0,1.628-0.706,2.903-1.764,3.771 c-1.302,1.14-3.445,1.709-6.782,1.709c-1.845,0-3.256-0.136-4.097-0.244V24.012z M464.124,31.229h1.709 c2.307,0,3.608-1.085,3.608-2.632c0-1.709-1.302-2.496-3.418-2.496c-0.977,0-1.547,0.054-1.899,0.136V31.229z M464.124,39.639 c0.435,0.054,1.004,0.082,1.764,0.082c2.144,0,4.042-0.814,4.042-3.066c0-2.116-1.845-2.984-4.15-2.984h-1.655V39.639z\"></path> <path d=\"M488.137,38.092c0,1.573,0.055,2.876,0.109,3.961h-2.931l-0.162-2.008h-0.055c-0.569,0.95-1.872,2.306-4.232,2.306 c-2.414,0-4.612-1.438-4.612-5.751v-7.759h3.337v7.189c0,2.198,0.706,3.608,2.469,3.608c1.33,0,2.198-0.95,2.551-1.791 c0.108-0.298,0.189-0.651,0.189-1.031v-7.976h3.337V38.092z\"></path> <path d=\"M491.586,38.987c0.76,0.461,2.197,0.95,3.391,0.95c1.465,0,2.116-0.597,2.116-1.465c0-0.896-0.542-1.356-2.17-1.926 c-2.577-0.896-3.663-2.306-3.636-3.853c0-2.333,1.927-4.151,4.992-4.151c1.465,0,2.74,0.38,3.5,0.787l-0.651,2.36 c-0.57-0.326-1.628-0.76-2.795-0.76c-1.193,0-1.845,0.57-1.845,1.384c0,0.841,0.624,1.248,2.307,1.845 c2.387,0.868,3.499,2.089,3.526,4.042c0,2.388-1.872,4.124-5.371,4.124c-1.602,0-3.039-0.38-4.016-0.923L491.586,38.987z\"></path> </g> </g> </svg>\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">234</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-235 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Events in angular</h1>\n\n\n<h2>pub/sub</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>$rootScope</code> has a “pub/sub” API</li>\n<li>All scopes have access to events</li>\n<li><code>$emit</code>, <code>$broadcast</code>, and <code>$on</code></li>\n<li><code>ngRoute</code> uses events to publish routing changes</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">235</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-236 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>subscribing</h1>\n\n\n<h2>$on(name, listener);</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'EventCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">$on</span>(<span class=\"cm-string\">'myEvent'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">event</span>, <span class=\"cm-def\">args</span>) {\n            <span class=\"cm-comment\">// Respond to event</span>\n            <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">args</span>.<span class=\"cm-property\">foo</span>);\n        });\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">236</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-237 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>subscribing</h1>\n\n\n<h2>listener(event, args);</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>targetScope - {Scope}: the scope on which the event was $emit-ed or $broadcast-ed.</li>\n<li>currentScope - {Scope}: the scope that is currently handling the event. Once the event propagates through the scope hierarchy, this property is set to null.</li>\n<li>name - {string}: name of the event.</li>\n<li>stopPropagation - {function=}: calling stopPropagation function will cancel further event propagation (available only for events that were $emit-ed).</li>\n<li>preventDefault - {function}: calling preventDefault sets defaultPrevented flag to true.<br />defaultPrevented - {boolean}: true if preventDefault was called.</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">237</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-238 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>publishing</h1>\n\n\n<h2>$emit(name, args);</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'OtherCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">$emit</span>(<span class=\"cm-string\">'myEvent'</span>, {\n            <span class=\"cm-property\">foo</span>: <span class=\"cm-string\">'bar'</span>\n        });\n    });</pre>\n<ul>\n<li>Emit’s UP the scope chain</li>\n<li>Can be cancelled</li>\n<li>Exceptions passed to $exceptionHandler</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">238</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-239 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>publishing</h1>\n\n\n<h2>$broadcast(name, args);</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Broadcasts’s DOWN the scope chain</li>\n<li>Can not be cancelled</li>\n<li>Exceptions passed to $exceptionHandler</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">239</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-240 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>publishing</h1>\n\n\n<h2>$broadcast(name, args);</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'OtherCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">$broadcast</span>(<span class=\"cm-string\">'myEvent'</span>, {\n            <span class=\"cm-property\">foo</span>: <span class=\"cm-string\">'bar'</span>\n        });\n    });</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">240</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-241 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Controller communication</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'CartCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">totalItems</span> = <span class=\"cm-number\">0</span>;\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">$on</span>(<span class=\"cm-string\">'cart:add'</span>, <span class=\"cm-keyword\">function</span>() {\n            <span class=\"cm-variable\">$scope</span>.<span class=\"cm-property\">totalItems</span> += <span class=\"cm-number\">1</span>;\n        });\n    })\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'ProductCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$rootScope</span>, <span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">add</span> = <span class=\"cm-keyword\">function</span>() {\n            <span class=\"cm-variable\">$rootScope</span>.<span class=\"cm-property\">$broadcast</span>(<span class=\"cm-string\">'cart:add'</span>);\n        };\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"CartCtrl\"</span><span class=\"cm-tag\">&gt;</span>{{totalItems}}<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"ProductCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;button</span> <span class=\"cm-attribute\">ng-click</span>=<span class=\"cm-string\">\"add()\"</span><span class=\"cm-tag\">&gt;</span>Add<span class=\"cm-tag\">&lt;/button</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">241</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-242 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Service communication</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'CartCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>, <span class=\"cm-def\">Product</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">totalItems</span> = <span class=\"cm-number\">0</span>;\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">$on</span>(<span class=\"cm-string\">'cart:add'</span>, <span class=\"cm-keyword\">function</span>() {\n            <span class=\"cm-variable\">$scope</span>.<span class=\"cm-property\">totalItems</span> += <span class=\"cm-number\">1</span>;\n        });\n\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">add</span> = <span class=\"cm-keyword\">function</span>() { <span class=\"cm-variable\">Product</span>.<span class=\"cm-property\">addProduct</span>() };\n    })\n    .<span class=\"cm-property\">factory</span>(<span class=\"cm-string\">'Product'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$rootScope</span>) {\n        <span class=\"cm-keyword\">return</span> {\n            <span class=\"cm-property\">addProduct</span>: <span class=\"cm-keyword\">function</span>() {\n                <span class=\"cm-variable\">$rootScope</span>.<span class=\"cm-property\">$broadcast</span>(<span class=\"cm-string\">'cart:add'</span>);\n            }\n        };\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"CartCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        {{totalItems}}\n        <span class=\"cm-tag\">&lt;button</span> <span class=\"cm-attribute\">ng-click</span>=<span class=\"cm-string\">\"add()\"</span><span class=\"cm-tag\">&gt;</span>Add<span class=\"cm-tag\">&lt;/button</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">242</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-243 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Routing events</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Can listen for these routing events</li>\n<li><code>$routeChangeStart</code> before it changes</li>\n<li><code>$routeChangeSuccess</code> after it changes</li>\n<li><code>$routeChangeError</code> if an error occurs in one of the resolves</li>\n<li><code>$routeUpdate</code> if the route updates, but stays on the same controller</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">243</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-244 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>routing events</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>, [<span class=\"cm-string\">'ngRoute'</span>])\n    .<span class=\"cm-property\">config</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$routeProvider</span>) {\n        <span class=\"cm-variable-2\">$routeProvider</span>.<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/'</span>, {\n            <span class=\"cm-property\">template</span>: <span class=\"cm-string\">'&lt;h1&gt;Home&lt;/h1&gt;'</span>\n        }).<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/about'</span>, {\n            <span class=\"cm-property\">template</span>: <span class=\"cm-string\">'&lt;h1&gt;About&lt;/h1&gt;'</span>\n        })\n        .<span class=\"cm-property\">when</span>(<span class=\"cm-string\">'/contact'</span>, {\n            <span class=\"cm-property\">template</span>: <span class=\"cm-string\">'&lt;h1&gt;Contact&lt;/h1&gt;'</span>\n        });\n    });</pre>\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/\"</span><span class=\"cm-tag\">&gt;</span>Home<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span> | <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/about\"</span><span class=\"cm-tag\">&gt;</span>About<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span> | <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/contact\"</span><span class=\"cm-tag\">&gt;</span>Contact<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-view</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">244</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-245 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>routing events</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'RouteCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">$on</span>(<span class=\"cm-string\">'$routeChangeStart'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">event</span>, <span class=\"cm-def\">current</span>, <span class=\"cm-def\">previous</span>) {\n            <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">'Route change start'</span>);\n        });\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">$on</span>(<span class=\"cm-string\">'$routeChangeSuccess'</span>, <span class=\"cm-keyword\">function</span>() {\n            <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">'Route change success'</span>);\n        });\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"RouteCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/\"</span><span class=\"cm-tag\">&gt;</span>Home<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span> | <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/about\"</span><span class=\"cm-tag\">&gt;</span>About<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span> | <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/contact\"</span><span class=\"cm-tag\">&gt;</span>Contact<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-view</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">245</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-246 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>routing events</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'RouteCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>) {\n       <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">$on</span>(<span class=\"cm-string\">'$routeChangeStart'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">event</span>, <span class=\"cm-def\">current</span>, <span class=\"cm-def\">previous</span>) {\n            <span class=\"cm-variable\">$scope</span>.<span class=\"cm-property\">path</span> = <span class=\"cm-variable-2\">current</span>.<span class=\"cm-property\">originalPath</span>;\n        });\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">$on</span>(<span class=\"cm-string\">'$routeChangeSuccess'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">event</span>, <span class=\"cm-def\">current</span>, <span class=\"cm-def\">prev</span>) {        \n            <span class=\"cm-variable\">$scope</span>.<span class=\"cm-property\">path</span> = <span class=\"cm-variable-2\">current</span>.<span class=\"cm-property\">originalPath</span>;\n        });\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"RouteCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/\"</span><span class=\"cm-tag\">&gt;</span>Home<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span> | <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/about\"</span><span class=\"cm-tag\">&gt;</span>About<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span> | <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/contact\"</span><span class=\"cm-tag\">&gt;</span>Contact<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span>\n\n        Path: {{path}}\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-view</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">246</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-247 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>$location</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>A service that exposes information about the current path</li>\n<li>Can be injected anywhere</li>\n<li>Can change the url also</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">247</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-248 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>routing events</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp'</span>)\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'RouteCtrl'</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$scope</span>, <span class=\"cm-def\">$location</span>) {\n        <span class=\"cm-variable-2\">$location</span>.<span class=\"cm-property\">path</span>(<span class=\"cm-string\">'/about'</span>);\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">location</span> = <span class=\"cm-variable-2\">$location</span>;\n    });</pre>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;body</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"introToAngularApp\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-controller</span>=<span class=\"cm-string\">\"RouteCtrl\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/\"</span><span class=\"cm-tag\">&gt;</span>Home<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span> | <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/about\"</span><span class=\"cm-tag\">&gt;</span>About<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span> | <span class=\"cm-tag\">&lt;a</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"#/contact\"</span><span class=\"cm-tag\">&gt;</span>Contact<span class=\"cm-tag\">&lt;/a</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;ul</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;li</span><span class=\"cm-tag\">&gt;</span>Path [g/s]: {{location.path()}}<span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;li</span><span class=\"cm-tag\">&gt;</span>Url [g/s]: {{location.url()}}<span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>        \n            <span class=\"cm-tag\">&lt;li</span><span class=\"cm-tag\">&gt;</span>AbsUrl [g]: {{location.absUrl()}}<span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;li</span><span class=\"cm-tag\">&gt;</span>Protocol [g]: {{location.protocol()}}<span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;li</span><span class=\"cm-tag\">&gt;</span>Host [g]: {{location.host()}}<span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>    \n            <span class=\"cm-tag\">&lt;li</span><span class=\"cm-tag\">&gt;</span>Port [g]: {{location.port()}}<span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>        \n            <span class=\"cm-tag\">&lt;li</span><span class=\"cm-tag\">&gt;</span>Search [g/s]: {{location.search()}}<span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;li</span><span class=\"cm-tag\">&gt;</span>Hash [g/s]: {{location.hash()}}<span class=\"cm-tag\">&lt;/li</span><span class=\"cm-tag\">&gt;</span>        \n        <span class=\"cm-tag\">&lt;/ul</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n\n    <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-view</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">248</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-249 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>$location events</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Can listen to certain location events</li>\n<li><code>$locationChangeStart</code></li>\n<li><code>$locationChangeSuccess</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">249</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-250 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>BREAK</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n<iframe data-blazon-role=\"demo\" style=\"width: 100%; height: auto;\" frameborder=\"0\"></iframe>\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">250</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-251 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Working with forms</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">251</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-252 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Forms</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Angular has built in validation</li>\n<li>An instance of  <code>FormController</code></li>\n<li>Form needs a name</li>\n<li>Can have nested forms with <code>ng-form</code></li>\n<li>Automatically prevents submission unless <code>action</code> is filled in</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">252</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-253 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Forms</h1>\n\n\n<h2>Validation</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Validates HTML5 input types: (text, number, url, email, radio, checkbox)</li>\n<li>Support for (required, pattern, minlength, maxlength, min, max)</li>\n<li>CSS classes are added depending on the state</li>\n<li><code>ng-valid</code> is set if the form is valid.</li>\n<li><code>ng-invalid</code> is set if the form is invalid.</li>\n<li><code>ng-pristine</code> is set if the form is pristine.</li>\n<li><code>ng-dirty</code> is set if the form is dirty.</li>\n<li><code>ng-submitted</code> is set if the form was submitted.</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">253</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-254 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>FORMS CSS</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-qualifier\">.errors</span> { <span class=\"cm-property\">display</span><span class=\"cm-operator\">:</span> <span class=\"cm-string-2\">none</span>; }\n<span class=\"cm-qualifier\">.submitted</span> <span class=\"cm-qualifier\">.errors</span> { <span class=\"cm-property\">display</span><span class=\"cm-operator\">:</span> <span class=\"cm-string-2\">inline-block</span>; }\n<span class=\"cm-qualifier\">.submitted</span> <span class=\"cm-qualifier\">.ng-invalid</span> {\n    <span class=\"cm-property\">border</span><span class=\"cm-operator\">:</span> <span class=\"cm-number\">1px</span> <span class=\"cm-string-2\">solid</span> <span class=\"cm-keyword\">red</span>;\n}\n<span class=\"cm-tag\">button</span> { <span class=\"cm-property\">padding</span><span class=\"cm-operator\">:</span> <span class=\"cm-number\">5px</span>;}</pre>\n\n<ul>\n<li>This is an example of how you can add custom CSS to display errors</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">254</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-255 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Forms</h1>\n\n\n<h2>Validation</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\">    <span class=\"cm-tag\">&lt;form</span> <span class=\"cm-attribute\">ng-class</span>=<span class=\"cm-string\">\"{ submitted: contact.$submitted }\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"contact\"</span> <span class=\"cm-attribute\">novalidate</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.name\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"name\"</span> <span class=\"cm-attribute\">required</span>  <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Name\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"errors\"</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.name.$invalid\"</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.name.$error.required\"</span><span class=\"cm-tag\">&gt;</span>Required<span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;br</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.email\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-attribute\">required</span>  <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"errors\"</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.email.$invalid\"</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.email.$error.required\"</span><span class=\"cm-tag\">&gt;</span>Required<span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.email.$error.email\"</span><span class=\"cm-tag\">&gt;</span>Email invalid<span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;br</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;button</span><span class=\"cm-tag\">&gt;</span>Submit<span class=\"cm-tag\">&lt;/button</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/body</span><span class=\"cm-tag\">&gt;</span></pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">255</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-256 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Forms</h1>\n\n\n<h2>Validation</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;form</span> <span class=\"cm-attribute\">ng-class</span>=<span class=\"cm-string\">\"{ submitted: contact.$submitted }\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"contact\"</span> <span class=\"cm-attribute\">novalidate</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span></pre>\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;pre</span><span class=\"cm-tag\">&gt;</span>{{contact | json}}<span class=\"cm-tag\">&lt;/pre</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;p</span><span class=\"cm-tag\">&gt;</span>\n    {{user.name}}\n    {{user.email}}\n<span class=\"cm-tag\">&lt;/p</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>When a name is present, it get’s put on the current scope</li>\n<li>Different than <code>ng-model</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">256</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-257 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Forms</h1>\n\n\n<h2>Validation</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-tag\">&lt;form</span> <span class=\"cm-attribute\">ng-class</span>=<span class=\"cm-string\">\"{ submitted: contact.$submitted }\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"contact\"</span> <span class=\"cm-attribute\">novalidate</span><span class=\"cm-tag\">&gt;</span></span>\n    <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.name\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"name\"</span> <span class=\"cm-attribute\">required</span>  <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Name\"</span> <span class=\"cm-tag\">/&gt;</span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"errors\"</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.name.$invalid\"</span><span class=\"cm-tag\">&gt;</span></span>\n        <span class=\"dim-line\"><span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.name.$error.required\"</span><span class=\"cm-tag\">&gt;</span>Required<span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span></span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span></span>\n<span class=\"dim-line\"><span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span></span></pre>\n\n<ul>\n<li>When a <code>name</code> is present, it get’s put on the <code>$scope</code> as <code>contact.name</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">257</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-258 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Forms</h1>\n\n\n<h2>Validation</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-tag\">&lt;form</span> <span class=\"cm-attribute\">ng-class</span>=<span class=\"cm-string\">\"{ submitted: contact.$submitted }\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"contact\"</span> <span class=\"cm-attribute\">novalidate</span><span class=\"cm-tag\">&gt;</span></span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.name\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"name\"</span> <span class=\"cm-attribute\">required</span>  <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"Name\"</span> <span class=\"cm-tag\">/&gt;</span></span>\n    <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"errors\"</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.name.$invalid\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.name.$error.required\"</span><span class=\"cm-tag\">&gt;</span>Required<span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"dim-line\"><span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span></span></pre>\n\n<ul>\n<li><code>.$invalid</code>, <code>.$valid</code>, <code>.$error.required</code>, <code>.$error.email</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">258</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-259 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Forms</h1>\n\n\n<h2>Validation</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-tag\">&lt;form</span> <span class=\"cm-attribute\">ng-class</span>=<span class=\"cm-string\">\"{ submitted: contact.$submitted }\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"contact\"</span> <span class=\"cm-attribute\">novalidate</span><span class=\"cm-tag\">&gt;</span></span>\n    <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.email\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-attribute\">required</span>  <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-tag\">/&gt;</span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"errors\"</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.email.$invalid\"</span><span class=\"cm-tag\">&gt;</span></span>\n        <span class=\"dim-line\"><span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.email.$error.required\"</span><span class=\"cm-tag\">&gt;</span>Required<span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span></span>\n        <span class=\"dim-line\"><span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.email.$error.email\"</span><span class=\"cm-tag\">&gt;</span>Email invalid<span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span></span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span></span>\n<span class=\"dim-line\"><span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span></span></pre>\n\n<ul>\n<li>Again has a name, this time is <code>type=\"email\"</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">259</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-260 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Forms</h1>\n\n\n<h2>Validation</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-tag\">&lt;form</span> <span class=\"cm-attribute\">ng-class</span>=<span class=\"cm-string\">\"{ submitted: contact.$submitted }\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"contact\"</span> <span class=\"cm-attribute\">novalidate</span><span class=\"cm-tag\">&gt;</span></span>\n    <span class=\"dim-line\"><span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.email\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-attribute\">required</span>  <span class=\"cm-attribute\">placeholder</span>=<span class=\"cm-string\">\"email\"</span> <span class=\"cm-tag\">/&gt;</span></span>\n    <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">class</span>=<span class=\"cm-string\">\"errors\"</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.email.$invalid\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.email.$error.required\"</span><span class=\"cm-tag\">&gt;</span>Required<span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"contact.email.$error.email\"</span><span class=\"cm-tag\">&gt;</span>Email invalid<span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"dim-line\"><span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span></span></pre>\n\n<ul>\n<li>You can check multiple properties on an input <code>.$invalid</code>, <code>.$valid</code>, <code>.$error.required</code>, <code>.$error.email</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">260</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-261 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>model options</h1>\n\n\n<h2>ng-model-options</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;form</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.name\"</span> <span class=\"cm-attribute\">ng-model-options</span>=<span class=\"cm-string\">\"{ updateOn: 'blur' }\"</span> <span class=\"cm-tag\">/&gt;</span>\n<span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Can control when models update and validate</li>\n<li>Can debounce updates</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">261</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-262 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>model options</h1>\n\n\n<h2>ng-model-options</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;form</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"user.name\"</span> <span class=\"cm-attribute\">ng-model-options</span>=<span class=\"cm-string\">\"{ debounce: 1000 }\"</span> <span class=\"cm-tag\">/&gt;</span>\n<span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li>Only updates the model ever 1 second</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">262</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-263 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Input [type=text]</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span>\n    <span class=\"cm-attribute\">[required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Required</span> <span class=\"cm-attribute\">validation</span>\n    <span class=\"cm-attribute\">[ng-required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Another</span> <span class=\"cm-attribute\">type</span> <span class=\"cm-attribute\">of</span> <span class=\"cm-attribute\">required,</span> <span class=\"cm-attribute\">can</span> <span class=\"cm-attribute\">use</span> <span class=\"cm-attribute\">data</span> <span class=\"cm-attribute\">binding</span>\n    <span class=\"cm-attribute\">[ng-minlength</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Specifies</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">minimum</span> <span class=\"cm-attribute\">length</span>\n    <span class=\"cm-attribute\">[ng-maxlength</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Specifies</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">maximum</span> <span class=\"cm-attribute\">length</span>\n    <span class=\"cm-attribute\">[ng-pattern</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Validate</span> <span class=\"cm-attribute\">with</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">regular</span> <span class=\"cm-attribute\">expression</span>\n    <span class=\"cm-attribute\">[ng-change</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Change</span> <span class=\"cm-attribute\">event</span> <span class=\"cm-attribute\">handler</span>\n    <span class=\"cm-attribute\">[ng-trim</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">If</span> <span class=\"cm-attribute\">set</span> <span class=\"cm-attribute\">to</span> <span class=\"cm-attribute\">false,</span> <span class=\"cm-attribute\">angular</span> <span class=\"cm-attribute\">will</span> <span class=\"cm-attribute\">not</span> <span class=\"cm-attribute\">trim</span> <span class=\"cm-attribute\">input</span> <span class=\"cm-attribute\">which</span> <span class=\"cm-attribute\">it</span> <span class=\"cm-attribute\">does</span> <span class=\"cm-attribute\">by</span> <span class=\"cm-attribute\">default</span>\n    <span class=\"cm-tag\">/&gt;</span></pre>\n<ul>\n<li>Several other types of validation</li>\n<li>Extra options</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">263</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-264 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Input [type=email]</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"email\"</span>\n    <span class=\"cm-attribute\">[required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Required</span> <span class=\"cm-attribute\">validation</span>\n    <span class=\"cm-attribute\">[ng-required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Another</span> <span class=\"cm-attribute\">type</span> <span class=\"cm-attribute\">of</span> <span class=\"cm-attribute\">required,</span> <span class=\"cm-attribute\">can</span> <span class=\"cm-attribute\">use</span> <span class=\"cm-attribute\">data</span> <span class=\"cm-attribute\">binding</span>\n    <span class=\"cm-attribute\">[ng-minlength</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Specifies</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">minimum</span> <span class=\"cm-attribute\">length</span>\n    <span class=\"cm-attribute\">[ng-maxlength</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Specifies</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">maximum</span> <span class=\"cm-attribute\">length</span>\n    <span class=\"cm-attribute\">[ng-pattern</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Validate</span> <span class=\"cm-attribute\">with</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">regular</span> <span class=\"cm-attribute\">expression</span>\n    <span class=\"cm-attribute\">[ng-change</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Change</span> <span class=\"cm-attribute\">event</span> <span class=\"cm-attribute\">handler</span>\n    <span class=\"cm-attribute\">[ng-trim</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">If</span> <span class=\"cm-attribute\">set</span> <span class=\"cm-attribute\">to</span> <span class=\"cm-attribute\">false,</span> <span class=\"cm-attribute\">angular</span> <span class=\"cm-attribute\">will</span> <span class=\"cm-attribute\">not</span> <span class=\"cm-attribute\">trim</span> <span class=\"cm-attribute\">input</span> <span class=\"cm-attribute\">which</span> <span class=\"cm-attribute\">it</span> <span class=\"cm-attribute\">does</span> <span class=\"cm-attribute\">by</span> <span class=\"cm-attribute\">default</span>\n    <span class=\"cm-tag\">/&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">264</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-265 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Input [type=url]</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"email\"</span>\n    <span class=\"cm-attribute\">[required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Required</span> <span class=\"cm-attribute\">validation</span>\n    <span class=\"cm-attribute\">[ng-required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Another</span> <span class=\"cm-attribute\">type</span> <span class=\"cm-attribute\">of</span> <span class=\"cm-attribute\">required,</span> <span class=\"cm-attribute\">can</span> <span class=\"cm-attribute\">use</span> <span class=\"cm-attribute\">data</span> <span class=\"cm-attribute\">binding</span>\n    <span class=\"cm-attribute\">[ng-minlength</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Specifies</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">minimum</span> <span class=\"cm-attribute\">length</span>\n    <span class=\"cm-attribute\">[ng-maxlength</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Specifies</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">maximum</span> <span class=\"cm-attribute\">length</span>\n    <span class=\"cm-attribute\">[ng-pattern</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Validate</span> <span class=\"cm-attribute\">with</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">regular</span> <span class=\"cm-attribute\">expression</span>\n    <span class=\"cm-attribute\">[ng-change</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Change</span> <span class=\"cm-attribute\">event</span> <span class=\"cm-attribute\">handler</span>\n    <span class=\"cm-attribute\">[ng-trim</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">If</span> <span class=\"cm-attribute\">set</span> <span class=\"cm-attribute\">to</span> <span class=\"cm-attribute\">false,</span> <span class=\"cm-attribute\">angular</span> <span class=\"cm-attribute\">will</span> <span class=\"cm-attribute\">not</span> <span class=\"cm-attribute\">trim</span> <span class=\"cm-attribute\">input</span> <span class=\"cm-attribute\">which</span> <span class=\"cm-attribute\">it</span> <span class=\"cm-attribute\">does</span> <span class=\"cm-attribute\">by</span> <span class=\"cm-attribute\">default</span>\n    <span class=\"cm-tag\">/&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">265</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-266 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Input [type=number]</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"number\"</span>\n    <span class=\"cm-attribute\">[required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Required</span> <span class=\"cm-attribute\">validation</span>\n    <span class=\"cm-attribute\">[min</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Minimum</span> <span class=\"cm-attribute\">value</span>\n    <span class=\"cm-attribute\">[max</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Maximum</span> <span class=\"cm-attribute\">value</span>    \n    <span class=\"cm-attribute\">[ng-required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Another</span> <span class=\"cm-attribute\">type</span> <span class=\"cm-attribute\">of</span> <span class=\"cm-attribute\">required,</span> <span class=\"cm-attribute\">can</span> <span class=\"cm-attribute\">use</span> <span class=\"cm-attribute\">data</span> <span class=\"cm-attribute\">binding</span>\n    <span class=\"cm-attribute\">[ng-minlength</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Specifies</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">minimum</span> <span class=\"cm-attribute\">length</span>\n    <span class=\"cm-attribute\">[ng-maxlength</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Specifies</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">maximum</span> <span class=\"cm-attribute\">length</span>\n    <span class=\"cm-attribute\">[ng-pattern</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Validate</span> <span class=\"cm-attribute\">with</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">regular</span> <span class=\"cm-attribute\">expression</span>\n    <span class=\"cm-attribute\">[ng-change</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Change</span> <span class=\"cm-attribute\">event</span> <span class=\"cm-attribute\">handler</span>\n    <span class=\"cm-attribute\">[ng-trim</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">If</span> <span class=\"cm-attribute\">set</span> <span class=\"cm-attribute\">to</span> <span class=\"cm-attribute\">false,</span> <span class=\"cm-attribute\">angular</span> <span class=\"cm-attribute\">will</span> <span class=\"cm-attribute\">not</span> <span class=\"cm-attribute\">trim</span> <span class=\"cm-attribute\">input</span> <span class=\"cm-attribute\">which</span> <span class=\"cm-attribute\">it</span> <span class=\"cm-attribute\">does</span> <span class=\"cm-attribute\">by</span> <span class=\"cm-attribute\">default</span>\n    <span class=\"cm-tag\">/&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">266</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-267 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Input [type=date]</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"date\"</span>\n    <span class=\"cm-attribute\">[required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Required</span> <span class=\"cm-attribute\">validation</span>\n    <span class=\"cm-attribute\">[min</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Minimum</span> <span class=\"cm-attribute\">value</span>\n    <span class=\"cm-attribute\">[max</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Maximum</span> <span class=\"cm-attribute\">value</span>    \n    <span class=\"cm-attribute\">[ng-required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Another</span> <span class=\"cm-attribute\">type</span> <span class=\"cm-attribute\">of</span> <span class=\"cm-attribute\">required,</span> <span class=\"cm-attribute\">can</span> <span class=\"cm-attribute\">use</span> <span class=\"cm-attribute\">data</span> <span class=\"cm-attribute\">binding</span>\n    <span class=\"cm-attribute\">[ng-pattern</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Validate</span> <span class=\"cm-attribute\">with</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">regular</span> <span class=\"cm-attribute\">expression</span>\n    <span class=\"cm-attribute\">[ng-change</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Change</span> <span class=\"cm-attribute\">event</span> <span class=\"cm-attribute\">handler</span>\n    <span class=\"cm-attribute\">[ng-trim</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">If</span> <span class=\"cm-attribute\">set</span> <span class=\"cm-attribute\">to</span> <span class=\"cm-attribute\">false,</span> <span class=\"cm-attribute\">angular</span> <span class=\"cm-attribute\">will</span> <span class=\"cm-attribute\">not</span> <span class=\"cm-attribute\">trim</span> <span class=\"cm-attribute\">input</span> <span class=\"cm-attribute\">which</span> <span class=\"cm-attribute\">it</span> <span class=\"cm-attribute\">does</span> <span class=\"cm-attribute\">by</span> <span class=\"cm-attribute\">default</span>\n    <span class=\"cm-tag\">/&gt;</span></pre>\n<ul>\n<li>Requires a valid ISO-8601 date format (yyyy-MM-dd), for example: 2009-01-06</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">267</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-268 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Input [type=time]</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"time\"</span>\n    <span class=\"cm-attribute\">[required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Required</span> <span class=\"cm-attribute\">validation</span>\n    <span class=\"cm-attribute\">[min</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Minimum</span> <span class=\"cm-attribute\">value</span>\n    <span class=\"cm-attribute\">[max</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Maximum</span> <span class=\"cm-attribute\">value</span>    \n    <span class=\"cm-attribute\">[ng-required</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Another</span> <span class=\"cm-attribute\">type</span> <span class=\"cm-attribute\">of</span> <span class=\"cm-attribute\">required,</span> <span class=\"cm-attribute\">can</span> <span class=\"cm-attribute\">use</span> <span class=\"cm-attribute\">data</span> <span class=\"cm-attribute\">binding</span>\n    <span class=\"cm-attribute\">[ng-pattern</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Validate</span> <span class=\"cm-attribute\">with</span> <span class=\"cm-attribute\">a</span> <span class=\"cm-attribute\">regular</span> <span class=\"cm-attribute\">expression</span>\n    <span class=\"cm-attribute\">[ng-change</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">Change</span> <span class=\"cm-attribute\">event</span> <span class=\"cm-attribute\">handler</span>\n    <span class=\"cm-attribute\">[ng-trim</span>=<span class=\"cm-string\">\"\"</span><span class=\"cm-attribute\">]</span> <span class=\"cm-attribute\">//</span> <span class=\"cm-attribute\">If</span> <span class=\"cm-attribute\">set</span> <span class=\"cm-attribute\">to</span> <span class=\"cm-attribute\">false,</span> <span class=\"cm-attribute\">angular</span> <span class=\"cm-attribute\">will</span> <span class=\"cm-attribute\">not</span> <span class=\"cm-attribute\">trim</span> <span class=\"cm-attribute\">input</span> <span class=\"cm-attribute\">which</span> <span class=\"cm-attribute\">it</span> <span class=\"cm-attribute\">does</span> <span class=\"cm-attribute\">by</span> <span class=\"cm-attribute\">default</span>\n    <span class=\"cm-tag\">/&gt;</span></pre>\n<ul>\n<li>Requires a valid ISO-8601 local time format (HH:mm), for example: 14:57</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">268</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-269 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Custom Validation</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>You can extend <code>ngModel</code>‘s <strong>parsers</strong> or <strong>formatters</strong> to add validation</li>\n<li><code>ngModel</code> has a controller called <code>ngModelController</code></li>\n<li>Custom validation requires the <code>ngModel</code> </li>\n<li>There’s a hacky way with <code>$parsers</code> and <code>$formatters</code> and a new way in <code>1.3.x</code> with <code>$validators</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">269</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-270 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>$parsers</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Intercepts the model value on it’s way to the DOM.</li>\n<li>Can call <code>$setValidity</code> to validate the value</li>\n<li>Return undefined when in valid</li>\n<li>Last return value sets the value in the UI</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">270</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-271 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Custom Validation</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">app</span> = <span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'form-example1'</span>, []);\n\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">INTEGER_REGEXP</span> = <span class=\"cm-string-2\">/^\\-?\\d+$/</span>;\n<span class=\"cm-variable\">app</span>.<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'integer'</span>, <span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-keyword\">return</span> {\n        <span class=\"cm-property\">require</span>: <span class=\"cm-string\">'ngModel'</span>,\n        <span class=\"cm-property\">link</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">elm</span>, <span class=\"cm-def\">attrs</span>, <span class=\"cm-def\">ctrl</span>) {\n            <span class=\"cm-variable-2\">ctrl</span>.<span class=\"cm-property\">$parsers</span>.<span class=\"cm-property\">unshift</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">viewValue</span>) {\n\n                <span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">INTEGER_REGEXP</span>.<span class=\"cm-property\">test</span>(<span class=\"cm-variable-2\">viewValue</span>)) {\n                    <span class=\"cm-variable\">ctrl</span>.<span class=\"cm-property\">$setValidity</span>(<span class=\"cm-string\">'integer'</span>, <span class=\"cm-atom\">true</span>);\n                    <span class=\"cm-keyword\">return</span> <span class=\"cm-variable-2\">viewValue</span>;\n                } <span class=\"cm-keyword\">else</span> {\n                    <span class=\"cm-variable\">ctrl</span>.<span class=\"cm-property\">$setValidity</span>(<span class=\"cm-string\">'integer'</span>, <span class=\"cm-atom\">false</span>);\n                    <span class=\"cm-keyword\">return</span> <span class=\"cm-atom\">undefined</span>;\n                }\n            });\n        }\n    };\n});\n</pre><br /> * This is the <code>1.2.x</code> way<br /><br /><!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">271</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-272 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Custom Validation</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"form-example1\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;form</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"custom\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">integer</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"number\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"number\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"custom.number.$dirty &amp;&amp; custom.number.$error.integer\"</span><span class=\"cm-tag\">&gt;</span>Invalid Integer<span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">272</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-273 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Custom Validation</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">app</span> = <span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'form-example1'</span>, []);\n\n<span class=\"cm-variable\">$</span>(<span class=\"cm-variable\">document</span>).<span class=\"cm-property\">on</span>(<span class=\"cm-string\">\"submit\"</span>, <span class=\"cm-string\">\"form\"</span>, <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">e</span>) {\n    <span class=\"cm-variable-2\">e</span>.<span class=\"cm-property\">preventDefault</span>();\n});\n\n<span class=\"cm-keyword\">var</span> <span class=\"cm-variable\">INTEGER_REGEXP</span> = <span class=\"cm-string-2\">/^\\-?\\d+$/</span>;\n<span class=\"cm-variable\">app</span>.<span class=\"cm-property\">directive</span>(<span class=\"cm-string\">'integer'</span>, <span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-keyword\">return</span> {\n        <span class=\"cm-property\">require</span>: <span class=\"cm-string\">'ngModel'</span>,\n        <span class=\"cm-property\">link</span>: <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">scope</span>, <span class=\"cm-def\">elm</span>, <span class=\"cm-def\">attrs</span>, <span class=\"cm-def\">ctrl</span>) {\n            <span class=\"cm-variable-2\">ctrl</span>.<span class=\"cm-property\">$validators</span>.<span class=\"cm-property\">integer</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">val</span>) {\n                <span class=\"cm-comment\">// Return true/false for valid/invalid</span>\n                <span class=\"cm-comment\">// Val is the model value, the user input</span>\n                <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">INTEGER_REGEXP</span>.<span class=\"cm-property\">test</span>(<span class=\"cm-variable-2\">val</span>);\n            };\n        }\n    };\n});\n</pre>\n\n<ul>\n<li>This is the <code>1.3.x</code> way</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">273</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-274 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Custom Validation</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-app</span>=<span class=\"cm-string\">\"form-example1\"</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;form</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"custom\"</span> <span class=\"cm-attribute\">action</span>=<span class=\"cm-string\">\"#\"</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"text\"</span> <span class=\"cm-attribute\">integer</span> <span class=\"cm-attribute\">ng-model</span>=<span class=\"cm-string\">\"number\"</span> <span class=\"cm-attribute\">name</span>=<span class=\"cm-string\">\"number\"</span> <span class=\"cm-tag\">/&gt;</span>\n        <span class=\"cm-tag\">&lt;input</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"submit\"</span> <span class=\"cm-attribute\">value</span>=<span class=\"cm-string\">\"Send\"</span> <span class=\"cm-tag\">/&gt;</span>\n\n        <span class=\"cm-tag\">&lt;div</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"custom.$submitted || custom.number.$touched\"</span><span class=\"cm-tag\">&gt;</span>\n            <span class=\"cm-tag\">&lt;span</span> <span class=\"cm-attribute\">ng-show</span>=<span class=\"cm-string\">\"custom.number.$dirty &amp;&amp; custom.number.$error.integer\"</span><span class=\"cm-tag\">&gt;</span>\n                Invalid Integer\n            <span class=\"cm-tag\">&lt;/span</span><span class=\"cm-tag\">&gt;</span>\n        <span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span>\n    <span class=\"cm-tag\">&lt;/form</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;/div</span><span class=\"cm-tag\">&gt;</span></pre>\n<ul>\n<li><code>custom.$submitted</code> prevents the validation from showing</li>\n<li>Or if <code>custom.number.$touched</code> is true, it will show the error</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">274</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-275 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Debugging</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">275</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-276 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Debugging</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><p><code>angular.element</code> allows you to inspect an element with jQLite</p>\n</li>\n<li><p>Must use <code>document.querySelector();</code> or some other way to get an element reference.</p>\n</li>\n<li>Inspect element then use  <code>angular.element($0);</code> for grabbing it</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">276</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-277 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Debugging</h1>\n\n\n<h2>.scope()</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>angular.element(document.documentElement).scope();</code></li>\n<li>Gives you the current scope of that element</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">277</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-278 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Debugging</h1>\n\n\n<h2>.controller([name])</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>angular.element(document.documentElement).controller();</code></li>\n<li>The current controller on an element</li>\n<li>Can also get a directive’s controller by passing a name <code>ngModel</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">278</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-279 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Debugging</h1>\n\n\n<h2>.injector()</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>angular.element(document.documentElement).injector();</code></li>\n<li>Retrieves the injector for the current element</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">279</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-280 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Debugging</h1>\n\n\n<h2>.isolateScope()</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>angular.element(document.documentElement).isolateScope();</code></li>\n<li>Will retrieve the isolate scope if one is available    </li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">280</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-281 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Debugging</h1>\n\n\n<h2>.isolateScope()</h2>\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>angular.element(document.documentElement).inheritedData();</code></li>\n<li>Similar to <code>.data()</code>, but will walk up the DOM chain</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">281</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-282 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Debugging</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><a href=\"https://chrome.google.com/webstore/detail/angularjs-batarang/ighdmehidhipcmcojjgiloacoafjmpfk?hl=en\" target=\"_blank\">Batarang</a> is a chrome extension for analysing an angular app</li>\n<li>Adds a tab to your inspector</li>\n</ul>\n<p><img src=\"http://d.pr/i/fxPs+\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">282</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-283 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Debugging</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Performance analyzes your $watch’s</li>\n</ul>\n<p><img src=\"http://d.pr/i/y9bD+\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">283</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-284 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Debugging</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>See a high level look at dependency tree</li>\n</ul>\n<p><img src=\"http://d.pr/i/2iEe+\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">284</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-285 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Debugging</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Can highlight bindings, scopes, and applications</li>\n</ul>\n<p><img src=\"http://d.pr/i/KKkF+\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">285</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-286 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Debugging</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Adds a tab to your inspect element window to see current scope</li>\n</ul>\n<p><img src=\"http://d.pr/i/ohpb+\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">286</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-287 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Testing</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">287</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-288 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Why Testing?</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Unit testing helps reduce bugs in your application</li>\n<li>You test single isolated “units” of code</li>\n<li>Testable code is often maintainable</li>\n<li>Helps you write smaller, decoupled code</li>\n<li>Coupled code is hard to write</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">288</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-289 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing overview</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>In angular, testing is a first class citizen</li>\n<li><code>angular-mock</code> has APIs to aid in testing</li>\n<li>Karma is a test runner that works well with angular in node.js</li>\n<li>You can also run tests in the browser</li>\n<li>Jasmine runs easily inside Karma alongside angular-mock.js</li>\n<li>Protractor is an end to end test framework like selenium</li>\n<li>Unit test with <strong>Jasmine</strong> end to end test with <strong>Protractor</strong></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">289</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-290 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Setting up karma</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Install Karma</li>\n<li><code>npm install -g karma</code></li>\n<li>Create a <code>karma.conf.js</code> file</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">290</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-291 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Setting up Karma</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">module</span>.<span class=\"cm-property\">exports</span> = <span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">config</span>){\n  <span class=\"cm-variable-2\">config</span>.<span class=\"cm-property\">set</span>({\n    <span class=\"cm-property\">basePath</span> : <span class=\"cm-string\">'../'</span>,\n    <span class=\"cm-property\">files</span> : [\n      <span class=\"cm-string\">'app/bower_components/angular/angular.js'</span>,\n      <span class=\"cm-string\">'app/bower_components/angular-mocks/angular-mocks.js'</span>,\n      <span class=\"cm-string\">'app/js/**/*.js'</span>,\n      <span class=\"cm-string\">'test/unit/**/*.js'</span>\n    ],\n    <span class=\"cm-property\">autoWatch</span> : <span class=\"cm-atom\">true</span>,\n    <span class=\"cm-property\">frameworks</span>: [<span class=\"cm-string\">'jasmine'</span>],\n    <span class=\"cm-property\">browsers</span> : [<span class=\"cm-string\">'Chrome'</span>],\n    <span class=\"cm-property\">plugins</span> : [\n            <span class=\"cm-string\">'karma-chrome-launcher'</span>,\n            <span class=\"cm-string\">'karma-firefox-launcher'</span>,\n            <span class=\"cm-string\">'karma-jasmine'</span>\n            ]\n  });\n};</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">291</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-292 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Setting up Karma</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><code>baseUrl</code> helps set up relative path of code</li>\n<li><code>files</code> is an array of files you need included in your test suite</li>\n<li><code>autowatch</code> will watch for changes to your code and re-run tests</li>\n<li><code>frameworks</code> allows you to pick your JavaScript test runner</li>\n<li><code>browsers</code> will tell Karma which browsers to run the tests in</li>\n<li><code>plugins</code> is a list of karma plugins to load</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">292</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-293 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Running Karma</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Runs from command line</li>\n<li>Uses node.js</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\">karma start test/karma.conf.js</pre>\n<ul>\n<li>Can add this line to scripts in package.json</li>\n</ul>\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-string\">\"scripts\"</span>: {\n    <span class=\"cm-string\">\"test\"</span>: <span class=\"cm-string\">\"karma start test/karma.conf.js\"</span>\n}</pre>\n<ul>\n<li>Then you can run <code>npm test</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">293</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-294 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>running karma</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Opens up a browser and connects with sockets, then runs tests</li>\n</ul>\n<p><img src=\"http://d.pr/i/v06s+\" alt=\"\" /></p>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">294</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-295 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ngMock</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Provides test helpers on <code>angular.mock</code> namespace</li>\n<li>Has HTTP mocking with <code>$httpBackend</code></li>\n<li><code>module()</code> loads in a given module</li>\n<li><code>inject()</code> injects any dependency needed</li>\n<li>Has mocks for <code>$timeout</code>, <code>$interval</code>, <code>$log</code>, and <code>$exceptionHandler</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">295</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-296 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>using ngmock</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Include <code>angular-mocks.js</code> after angular</li>\n<li>Use the APIs!</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">296</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-297 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing with jasmine</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">\"app\"</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">\"FooCtrl\"</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">foo</span> = <span class=\"cm-string\">\"bar\"</span>;\n    });\n\n<span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'foo'</span>, <span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-variable\">beforeEach</span>(<span class=\"cm-variable\">module</span>(<span class=\"cm-string\">\"app\"</span>));\n\n    <span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should foo'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>) {\n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">FooCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'FooCtrl'</span>);\n        <span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">FooCtrl</span>.<span class=\"cm-property\">foo</span>).<span class=\"cm-property\">toBe</span>(<span class=\"cm-string\">\"bar\"</span>);\n    }));\n});</pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">297</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-298 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing with jasmine</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">\"app\"</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">\"FooCtrl\"</span>, <span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">foo</span> = <span class=\"cm-string\">\"bar\"</span>;\n    });\n<span class=\"dim-line\"></span>\n<span class=\"dim-line\"><span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'foo'</span>, <span class=\"cm-keyword\">function</span>() {</span>\n    <span class=\"dim-line\"><span class=\"cm-variable\">beforeEach</span>(<span class=\"cm-variable\">module</span>(<span class=\"cm-string\">\"app\"</span>));</span>\n<span class=\"dim-line\"></span>\n    <span class=\"dim-line\"><span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should foo'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>) {</span>\n        <span class=\"dim-line\"><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">FooCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'FooCtrl'</span>);</span>\n        <span class=\"dim-line\"><span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">FooCtrl</span>.<span class=\"cm-property\">foo</span>).<span class=\"cm-property\">toBe</span>(<span class=\"cm-string\">\"bar\"</span>);</span>\n    <span class=\"dim-line\">}));</span>\n<span class=\"dim-line\">});</span></pre>\n\n<ul>\n<li>Just a simple app and controller for demo purposes</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">298</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-299 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing with jasmine</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">\"app\"</span>, [])</span>\n    <span class=\"dim-line\">.<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">\"FooCtrl\"</span>, <span class=\"cm-keyword\">function</span>() {</span>\n        <span class=\"dim-line\"><span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">foo</span> = <span class=\"cm-string\">\"bar\"</span>;</span>\n    <span class=\"dim-line\">});</span>\n<span class=\"dim-line\"></span>\n<span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'foo'</span>, <span class=\"cm-keyword\">function</span>() {\n    <span class=\"dim-line\"><span class=\"cm-variable\">beforeEach</span>(<span class=\"cm-variable\">module</span>(<span class=\"cm-string\">\"app\"</span>));</span>\n<span class=\"dim-line\"></span>\n    <span class=\"dim-line\"><span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should foo'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>) {</span>\n        <span class=\"dim-line\"><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">FooCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'FooCtrl'</span>);</span>\n        <span class=\"dim-line\"><span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">FooCtrl</span>.<span class=\"cm-property\">foo</span>).<span class=\"cm-property\">toBe</span>(<span class=\"cm-string\">\"bar\"</span>);</span>\n    <span class=\"dim-line\">}));</span>\n});</pre>\n\n<ul>\n<li>Describe sets up a suite of tests</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">299</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-300 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing with jasmine</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">\"app\"</span>, [])</span>\n    <span class=\"dim-line\">.<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">\"FooCtrl\"</span>, <span class=\"cm-keyword\">function</span>() {</span>\n        <span class=\"dim-line\"><span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">foo</span> = <span class=\"cm-string\">\"bar\"</span>;</span>\n    <span class=\"dim-line\">});</span>\n<span class=\"dim-line\"></span>\n<span class=\"dim-line\"><span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'foo'</span>, <span class=\"cm-keyword\">function</span>() {</span>\n    <span class=\"cm-variable\">beforeEach</span>(<span class=\"cm-variable\">module</span>(<span class=\"cm-string\">\"app\"</span>));\n<span class=\"dim-line\"></span>\n    <span class=\"dim-line\"><span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should foo'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>) {</span>\n        <span class=\"dim-line\"><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">FooCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'FooCtrl'</span>);</span>\n        <span class=\"dim-line\"><span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">FooCtrl</span>.<span class=\"cm-property\">foo</span>).<span class=\"cm-property\">toBe</span>(<span class=\"cm-string\">\"bar\"</span>);</span>\n    <span class=\"dim-line\">}));</span>\n<span class=\"dim-line\">});</span></pre>\n\n<ul>\n<li><code>beforeEach</code> will run before each test in the suite</li>\n<li><code>module</code> retrieves the given module and instantiates it</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">300</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-301 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing with jasmine</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">\"app\"</span>, [])</span>\n    <span class=\"dim-line\">.<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">\"FooCtrl\"</span>, <span class=\"cm-keyword\">function</span>() {</span>\n        <span class=\"dim-line\"><span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">foo</span> = <span class=\"cm-string\">\"bar\"</span>;</span>\n    <span class=\"dim-line\">});</span>\n<span class=\"dim-line\"></span>\n<span class=\"dim-line\"><span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'foo'</span>, <span class=\"cm-keyword\">function</span>() {</span>\n    <span class=\"dim-line\"><span class=\"cm-variable\">beforeEach</span>(<span class=\"cm-variable\">module</span>(<span class=\"cm-string\">\"app\"</span>));</span>\n<span class=\"dim-line\"></span>\n    <span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should foo'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>) {\n        <span class=\"dim-line\"><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">FooCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'FooCtrl'</span>);</span>\n        <span class=\"dim-line\"><span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">FooCtrl</span>.<span class=\"cm-property\">foo</span>).<span class=\"cm-property\">toBe</span>(<span class=\"cm-string\">\"bar\"</span>);</span>\n    }));\n<span class=\"dim-line\">});</span></pre>\n\n<ul>\n<li><code>it</code> describes what should happen in the test</li>\n<li><code>inject</code> retrieves the given dependencies</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">301</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-302 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing with jasmine</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">\"app\"</span>, [])</span>\n    <span class=\"dim-line\">.<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">\"FooCtrl\"</span>, <span class=\"cm-keyword\">function</span>() {</span>\n        <span class=\"dim-line\"><span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">foo</span> = <span class=\"cm-string\">\"bar\"</span>;</span>\n    <span class=\"dim-line\">});</span>\n<span class=\"dim-line\"></span>\n<span class=\"dim-line\"><span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'foo'</span>, <span class=\"cm-keyword\">function</span>() {</span>\n    <span class=\"dim-line\"><span class=\"cm-variable\">beforeEach</span>(<span class=\"cm-variable\">module</span>(<span class=\"cm-string\">\"app\"</span>));</span>\n<span class=\"dim-line\"></span>\n    <span class=\"dim-line\"><span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should foo'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>) {</span>\n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">FooCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'FooCtrl'</span>);\n        <span class=\"dim-line\"><span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">FooCtrl</span>.<span class=\"cm-property\">foo</span>).<span class=\"cm-property\">toBe</span>(<span class=\"cm-string\">\"bar\"</span>);</span>\n    <span class=\"dim-line\">}));</span>\n<span class=\"dim-line\">});</span></pre>\n\n\n<ul>\n<li><code>$controller</code> is how angular retrieves controllers</li>\n<li>So we can get the constructor for our <code>FooCtrl</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">302</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-303 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing with jasmine</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"dim-line\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">\"app\"</span>, [])</span>\n    <span class=\"dim-line\">.<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">\"FooCtrl\"</span>, <span class=\"cm-keyword\">function</span>() {</span>\n        <span class=\"dim-line\"><span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">foo</span> = <span class=\"cm-string\">\"bar\"</span>;</span>\n    <span class=\"dim-line\">});</span>\n<span class=\"dim-line\"></span>\n<span class=\"dim-line\"><span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'foo'</span>, <span class=\"cm-keyword\">function</span>() {</span>\n    <span class=\"dim-line\"><span class=\"cm-variable\">beforeEach</span>(<span class=\"cm-variable\">module</span>(<span class=\"cm-string\">\"app\"</span>));</span>\n<span class=\"dim-line\"></span>\n    <span class=\"dim-line\"><span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should foo'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>) {</span>\n        <span class=\"dim-line\"><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">FooCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'FooCtrl'</span>);</span>\n        <span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">FooCtrl</span>.<span class=\"cm-property\">foo</span>).<span class=\"cm-property\">toBe</span>(<span class=\"cm-string\">\"bar\"</span>);\n    <span class=\"dim-line\">}));</span>\n<span class=\"dim-line\">});</span></pre>\n\n<ul>\n<li>Now we can test the controller</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">303</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-304 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing with dependencies</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp.controllers'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, <span class=\"cm-keyword\">function</span> (<span class=\"cm-def\">$scope</span>) {\n        <span class=\"cm-variable-2\">$scope</span>.<span class=\"cm-property\">title</span> = <span class=\"cm-string\">'Home'</span>;\n    });</pre>\n\n<ul>\n<li>Here’s a controller from our sample app that needs <code>$scope</code></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">304</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-305 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing with dependencies</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'app tests'</span>, <span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-variable\">beforeEach</span>(<span class=\"cm-variable\">module</span>(<span class=\"cm-string\">\"introToAngularApp.controllers\"</span>));\n\n    <span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should have a MainCtrl'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>, <span class=\"cm-def\">$rootScope</span>) {\n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">scope</span> = <span class=\"cm-variable-2\">$rootScope</span>.<span class=\"cm-property\">$new</span>();      \n        \n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">MainCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, {\n            <span class=\"cm-property\">$scope</span>: <span class=\"cm-variable-2\">scope</span>\n        });\n        <span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">MainCtrl</span>).<span class=\"cm-property\">toBeDefined</span>();\n    }));\n    \n    <span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should set the title'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>, <span class=\"cm-def\">$rootScope</span>) {\n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">scope</span> = <span class=\"cm-variable-2\">$rootScope</span>.<span class=\"cm-property\">$new</span>();\n        \n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">MainCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, {\n            <span class=\"cm-property\">$scope</span>: <span class=\"cm-variable-2\">scope</span>\n        });\n        \n        <span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">scope</span>.<span class=\"cm-property\">title</span>).<span class=\"cm-property\">toBe</span>(<span class=\"cm-string\">'Home'</span>);\n    }));\n});</pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">305</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-306 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing with dependencies</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\">\n<span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should have a MainCtrl'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>, <span class=\"cm-def\">$rootScope</span>) {\n    <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">scope</span> = <span class=\"cm-variable-2\">$rootScope</span>.<span class=\"cm-property\">$new</span>();      \n    \n    <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">MainCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, {\n        <span class=\"cm-property\">$scope</span>: <span class=\"cm-variable-2\">scope</span>\n    });\n    <span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">MainCtrl</span>).<span class=\"cm-property\">toBeDefined</span>();\n}));</pre>\n\n<ul>\n<li>Inject <code>$rootScope</code></li>\n<li>Call <code>$rootScope.$new</code> to create a fake scope</li>\n<li><code>$controller</code> takes an object as a second argument for the dependencies</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">306</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-307 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing with dependencies</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should set the title'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>, <span class=\"cm-def\">$rootScope</span>) {\n    <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">scope</span> = <span class=\"cm-variable-2\">$rootScope</span>.<span class=\"cm-property\">$new</span>();\n    \n    <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">MainCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, {\n        <span class=\"cm-property\">$scope</span>: <span class=\"cm-variable-2\">scope</span>\n    });\n    \n    <span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">scope</span>.<span class=\"cm-property\">title</span>).<span class=\"cm-property\">toBe</span>(<span class=\"cm-string\">'Home'</span>);\n}));</pre>\n\n<ul>\n<li>Can then run tests against the dependencies</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">307</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-308 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing a service</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'service'</span>, <span class=\"cm-keyword\">function</span>() {\n  <span class=\"cm-variable\">beforeEach</span>(<span class=\"cm-variable\">module</span>(<span class=\"cm-string\">'introToAngularApp.services'</span>));\n\n\n  <span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'version'</span>, <span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should return current version'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">version</span>) {\n      <span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">version</span>).<span class=\"cm-property\">toEqual</span>(<span class=\"cm-string\">'0.1'</span>);\n    }));\n  });\n});</pre>\n<ul>\n<li>Use <code>inject</code> in inject the service</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">308</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-309 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Testing a service</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'service'</span>, <span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">version</span>;\n\n    <span class=\"cm-variable\">beforeEach</span>(<span class=\"cm-keyword\">function</span>() {\n        <span class=\"cm-variable\">module</span>(<span class=\"cm-string\">'introToAngularApp.services'</span>));\n\n        <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">_version_</span>) {\n            <span class=\"cm-variable\">version</span> = <span class=\"cm-variable-2\">_version_</span>;\n        });\n    });\n\n\n    <span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'version'</span>, <span class=\"cm-keyword\">function</span>() {\n       <span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should return current version'</span>, <span class=\"cm-keyword\">function</span>() {\n           <span class=\"cm-variable\">expect</span>(<span class=\"cm-variable\">version</span>).<span class=\"cm-property\">toEqual</span>(<span class=\"cm-string\">'0.1'</span>);\n        });\n    });\n});</pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">309</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-310 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Running in the browser</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Get <code>jasmine.js</code>, <code>jasmine-html.js</code>, <code>jasmine.css</code>, and <code>runner.js</code></li>\n<li>Then <code>angular.js</code>, and <code>angular-mocks.js</code></li>\n<li>Add all the scripts to an HTML page</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">310</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-311 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Scripts for jasmine</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-tag\">&lt;link</span> <span class=\"cm-attribute\">href</span>=<span class=\"cm-string\">\"//cdnjs.cloudflare.com/ajax/libs/jasmine/2.0.0/jasmine.css\"</span> <span class=\"cm-attribute\">type</span>=<span class=\"cm-string\">\"stylesheet\"</span> <span class=\"cm-tag\">/&gt;</span>\n<span class=\"cm-tag\">&lt;script</span> <span class=\"cm-attribute\">src</span>=<span class=\"cm-string\">\"//cdnjs.cloudflare.com/ajax/libs/jasmine/2.0.0/jasmine.js\"</span> <span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/script</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;script</span> <span class=\"cm-attribute\">src</span>=<span class=\"cm-string\">\"//cdnjs.cloudflare.com/ajax/libs/jasmine/2.0.0/jasmine-html.js\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/script</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;script</span> <span class=\"cm-attribute\">src</span>=<span class=\"cm-string\">\"//cdnjs.cloudflare.com/ajax/libs/jasmine/2.0.0/boot.js\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/script</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;script</span> <span class=\"cm-attribute\">src</span>=<span class=\"cm-string\">\"https://code.angularjs.org/1.3.0-beta.18/angular.js\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/script</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;script</span> <span class=\"cm-attribute\">src</span>=<span class=\"cm-string\">\"https://code.angularjs.org/1.3.0-beta.18/angular-mocks.js\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/script</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;script</span> <span class=\"cm-attribute\">src</span>=<span class=\"cm-string\">\"your-code.js\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/script</span><span class=\"cm-tag\">&gt;</span>\n<span class=\"cm-tag\">&lt;script</span> <span class=\"cm-attribute\">src</span>=<span class=\"cm-string\">\"your-tests.js\"</span><span class=\"cm-tag\">&gt;</span><span class=\"cm-tag\">&lt;/script</span><span class=\"cm-tag\">&gt;</span></pre>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">311</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-312 master-vertical\">\n<div class=\"slide-wrapper \">\n\t<div class=\"vertical-center-block\">\n\t<div class=\"slide-headers\">\n\t\n\t<h1>Tests in the Browser</h1><br />\n\t\n\t\n\t</div>\n\n\t<div class=\"slide-content\">\n\t\t<!-- slide-content -->\n\n\n\n<!-- /slide-content -->\n\t</div>\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">312</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-313 master-content\">\n<div class=\"slide-wrapper \">\n\t\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\"><span class=\"cm-variable\">describe</span>(<span class=\"cm-string\">'app tests'</span>, <span class=\"cm-keyword\">function</span>() {\n    <span class=\"cm-variable\">beforeEach</span>(<span class=\"cm-variable\">module</span>(<span class=\"cm-string\">\"introToAngularApp.controllers\"</span>));\n\n    <span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should have a MainCtrl'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>, <span class=\"cm-def\">$rootScope</span>) {\n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">scope</span> = <span class=\"cm-variable-2\">$rootScope</span>.<span class=\"cm-property\">$new</span>();      \n        \n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">MainCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, {\n            <span class=\"cm-property\">$scope</span>: <span class=\"cm-variable-2\">scope</span>\n        });\n        <span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">MainCtrl</span>).<span class=\"cm-property\">toBeDefined</span>();\n    }));\n    \n    <span class=\"cm-variable\">it</span>(<span class=\"cm-string\">'should set the title'</span>, <span class=\"cm-variable\">inject</span>(<span class=\"cm-keyword\">function</span>(<span class=\"cm-def\">$controller</span>, <span class=\"cm-def\">$rootScope</span>) {\n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">scope</span> = <span class=\"cm-variable-2\">$rootScope</span>.<span class=\"cm-property\">$new</span>();\n        \n        <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">MainCtrl</span> = <span class=\"cm-variable-2\">$controller</span>(<span class=\"cm-string\">'MainCtrl'</span>, {\n            <span class=\"cm-property\">$scope</span>: <span class=\"cm-variable-2\">scope</span>\n        });\n        \n        <span class=\"cm-variable\">expect</span>(<span class=\"cm-variable-2\">scope</span>.<span class=\"cm-property\">title</span>).<span class=\"cm-property\">toBe</span>(<span class=\"cm-string\">'Home'</span>);\n    }));\n});</pre>\n\n\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">313</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-314 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ngAnimate</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>You can use the <code>ngAnimate</code> module</li>\n<li>Will automatically add css hooks to certain types of events</li>\n<li>Can also do with JavaScript, but much easier with CSS</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">314</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-315 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>ngAnimate</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Use CSS classes to create animations that Angular automatically creates </li>\n<li>Animation types<br /><code>ngRepeat</code>    enter, leave and move<br /><code>ngView</code>    enter and leave<br /><code>ngInclude</code>    enter and leave<br /><code>ngSwitch</code>    enter and leave<br /><code>ngIf</code>    enter and leave<br /><code>ngClass</code>    add and remove (the CSS class(es) present)<br /><code>ngShow</code> &amp; <code>ngHide</code>    add and remove (the ng-hide class value)<br /><code>form</code> &amp; <code>ngModel</code>    add and remove (dirty, pristine, valid, invalid &amp; all other validations)<br /><code>ngMessages</code>    add and remove (ng-active &amp; ng-inactive)<br /><code>ngMessage</code>    enter and leave</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">315</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-316 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Angular-ui</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><a href=\"http://angular-ui.github.io/\" target=\"_blank\">http://angular-ui.github.io/</a></li>\n<li>A companion suite for angular</li>\n<li>Has lots of extra modules, and utilties to use</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">316</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-317 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Angular-bootstrap</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><a href=\"http://angular-ui.github.io/bootstrap\" target=\"_blank\">http://angular-ui.github.io/bootstrap</a></li>\n<li>Directives for bootstrap</li>\n<li>Makes working with bootstrap easier because you don’t have to call <code>$scope.$apply()</code> all the time</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">317</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-318 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Restangular</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><p>Takes $resource one step farther</p>\n<blockquote>\n<p>AngularJS service to handle Rest API Restful Resources properly and easily</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/mgonto/restangular\" target=\"_blank\">https://github.com/mgonto/restangular</a></p>\n</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">318</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-319 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Angular utilities</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Angular namespace has many cross browser utitlities</li>\n<li><p><code>angular.forEach</code> for iterating</p>\n</li>\n<li><p>Angular ships with jQuery like library called jQLite via <code>angular.element</code></p>\n</li>\n<li><code>angular.copy</code> will create a copy of an object</li>\n<li><code>angular.bind</code> creates a copy of a function bound to a new scope like <code>Function.bind</code></li>\n<li><code>angular.extend</code> for merging objects like with <code>jQuery.extend</code></li>\n<li><code>angular.isArray</code>, <code>angular.isDate</code>, <code>angular.isNumber</code>, etc…</li>\n<li><code>angular.lowercase</code>, and <code>angular.uppercase</code></li>\n<li><code>angular.toJson</code> for making a JSON string</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">319</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-320 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Best practices</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Minification can be a problem in angular because of the dependency injection</li>\n<li>Use <a href=\"https://github.com/olov/ng-annotate\" target=\"_blank\">https://github.com/olov/ng-annotate</a> to parse code and automatically add in the <code>$inject</code>‘s into your code</li>\n<li>Create separate modules per behavior rather than by just controllers and directives</li>\n<li>For example have a <code>cart</code> folder with the files neccessary to run the <code>cartModule</code> by itself. This makes it reusable, and portable.</li>\n<li>Use grunt to automate testing</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">320</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-321 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Best practices</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<pre class=\"CodeMirror CodeMirror-pre-rendered cm-s-blackboard\">(<span class=\"cm-keyword\">function</span>() {\n\n<span class=\"cm-comment\">// Controller for the application</span>\n<span class=\"cm-keyword\">function</span> <span class=\"cm-def\">AppCtrl</span>(<span class=\"cm-def\">Navigation</span>) {\n    <span class=\"cm-keyword\">this</span>.<span class=\"cm-property\">navigationItems</span> = <span class=\"cm-variable-2\">Navigation</span>.<span class=\"cm-property\">list</span>;\n}\n\n<span class=\"cm-variable\">angular</span>.<span class=\"cm-property\">module</span>(<span class=\"cm-string\">'introToAngularApp.controllers'</span>, [])\n    .<span class=\"cm-property\">controller</span>(<span class=\"cm-string\">'AppCtrl'</span>, <span class=\"cm-variable-2\">AppCtrl</span>)\n}());</pre>\n<ul>\n<li>Adopt a style guide for your code</li>\n<li>Try to pass named functions rather than anonymous functions</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">321</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-322 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Best practices</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li>Keep state out of controllers, move it to a service because controllers can have a short lifespan</li>\n<li>Use controllerAs syntax in your views and controllers </li>\n<li>Prefix directives with 2 characters to distinguish</li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">322</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-323 master-content-alt\">\n<div class=\"slide-wrapper \">\n\t\n<h1>LAB 4</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<ul>\n<li><a href=\"http://jcreamer898.github.io/angularjs-training/labs/completed/lab4/lab4.done.html\" target=\"_blank\">http://jcreamer898.github.io/angularjs-training/labs/completed/lab4/lab4.done.html</a></li>\n</ul>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">323</span>\n\n\t</footer>\n</div>\n\n</div>",
	"<div class=\"slide slide-324 master-content\">\n<div class=\"slide-wrapper \">\n\t\n<h1>Thanks!</h1>\n\n\n\n<div class=\"slide-content\">\n\t<!-- slide-content -->\n\n<p><a href=\"http://twitter.com\" target=\"_blank\">@jcreamer898</a></p>\n<p>Slides: <a href=\"http://bit.ly/a2-angular-slides\" target=\"_blank\">http://bit.ly/a2-angular-slides</a><br />Slides Zip: <a href=\"http://bit.ly/a2-angular-slides-zip\" target=\"_blank\">http://bit.ly/a2-angular-slides-zip</a></p>\n<p><a href=\"https://github.com/appendto/training-labs-angularjs-fundamentals\" target=\"_blank\">https://github.com/appendto/training-labs-angularjs-fundamentals</a></p>\n<ol>\n<li><a href=\"http://plnkr.co/edit/rdktWV\" target=\"_blank\">http://plnkr.co/edit/rdktWV</a></li>\n<li><a href=\"http://plnkr.co/edit/NODKF9\" target=\"_blank\">http://plnkr.co/edit/NODKF9</a></li>\n<li><a href=\"http://plnkr.co/edit/5rCw3H\" target=\"_blank\">http://plnkr.co/edit/5rCw3H</a></li>\n<li><a href=\"http://plnkr.co/edit/lD8YwE\" target=\"_blank\">http://plnkr.co/edit/lD8YwE</a></li>\n</ol>\n<!-- /slide-content -->\n</div>\n\t<footer>\n\t\t<span class=\"presentation-title\">AngularJS Foundations - Full Day</span>\n<span class=\"presentation-pagination\">324</span>\n\n\t</footer>\n</div>\n\n</div>"
];